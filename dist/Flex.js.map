{"version":3,"file":"Flex.js","sources":["../src/Flex.tsx"],"sourcesContent":["import _MuiBox, { BoxProps } from \"@mui/material/Box\";\nimport _MuiGrid, { GridProps } from \"@mui/material/Grid\";\nimport { Theme as MaterialTheme } from \"@mui/material/styles\";\nimport { forwardRef } from \"react\";\n\nimport type {\n  AsComponent,\n  FlexBoxColumnProps,\n  FlexBoxProps,\n  FlexBoxRowProps,\n  FlexBoxTypeMap,\n  FlexGridColumnProps,\n  FlexGridProps,\n  FlexGridRowProps,\n  FlexGridTypeMap,\n  FlexOrientation,\n} from \"./Flex.types\";\nimport { mapFlexProps } from \"./Flex.utils\";\n\n// @ts-ignore\nconst MuiBox = _MuiBox?.default ?? _MuiBox;\n// @ts-ignore\nconst MuiGrid = _MuiGrid?.default ?? _MuiGrid;\n\nexport { FlexBoxColumnProps, FlexBoxProps, FlexBoxRowProps };\nconst createFlexBox = <\n  O extends FlexOrientation | undefined = undefined,\n  D extends React.ElementType = \"div\",\n  P = {},\n  T extends object = MaterialTheme,\n>(\n  defaultProps: FlexBoxProps<O, D, P> = {} as FlexBoxProps<O, D, P>,\n) =>\n  forwardRef<BoxProps[\"ref\"], FlexBoxProps<O, D, P>>((props, ref) => (\n    <MuiBox {...defaultProps} {...mapFlexProps(props, ref, \"Box\")} />\n  )) as AsComponent<FlexBoxTypeMap<O, P, D, T>>;\nexport const FlexBox = createFlexBox();\nexport const FlexRowBox = createFlexBox<\"row\">({ row: true });\nexport const FlexColumnBox = createFlexBox<\"column\">({ column: true });\n\nexport { FlexGridColumnProps, FlexGridProps, FlexGridRowProps };\nconst createFlexGrid = <O extends FlexOrientation | undefined = undefined, D extends React.ElementType = \"div\", P = {}>(\n  defaultProps: FlexGridProps<O, D, P> = {} as FlexGridProps<O, D, P>,\n) =>\n  forwardRef<GridProps[\"ref\"], FlexGridProps<O, D, P>>(\n    // @ts-ignore\n    (props, ref) => <MuiGrid {...defaultProps} {...mapFlexProps(props, ref, \"Grid\")} />,\n  ) as AsComponent<FlexGridTypeMap<O, P, D>>;\nexport const FlexGrid = createFlexGrid();\nexport const FlexGridRow = createFlexGrid<\"row\">({ row: true });\nexport const FlexGridColumn = createFlexGrid<\"column\">({ column: true });\n"],"names":["MuiBox","_MuiBox$default","_MuiBox","MuiGrid","_MuiGrid$default","_MuiGrid","createFlexBox","defaultProps","arguments","length","undefined","forwardRef","props","ref","_jsx","_objectSpread","mapFlexProps","FlexBox","FlexRowBox","row","FlexColumnBox","column","createFlexGrid","FlexGrid","FlexGridRow","FlexGridColumn"],"mappings":";;;;;;;;AAoBA,IAAMA,MAAM,GAAA,CAAAC,eAAA,GAAGC,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,MAAAA,GAAAA,MAAAA,GAAAA,OAAO,WAAS,MAAAD,IAAAA,IAAAA,eAAA,KAAAA,MAAAA,GAAAA,eAAA,GAAIC,OAAO;AAC1C;AACA,IAAMC,OAAO,GAAA,CAAAC,gBAAA,GAAGC,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,KAARA,MAAAA,GAAAA,MAAAA,GAAAA,QAAQ,WAAS,MAAAD,IAAAA,IAAAA,gBAAA,KAAAA,MAAAA,GAAAA,gBAAA,GAAIC,QAAQ;AAG7C,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,GAAA;AAAA,EAAA,IAMjBC,YAAmC,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE;AAAA,EAAA,oBAExCG,UAAU,CAAyC,UAACC,KAAK,EAAEC,GAAG,EAAA;AAAA,IAAA,oBAC5DC,GAAA,CAACd,MAAM,EAAAe,cAAA,CAAAA,cAAA,CAAKR,EAAAA,EAAAA,YAAY,GAAMS,YAAY,CAACJ,KAAK,EAAEC,GAAG,EAAE,KAAK,CAAC,CAAG,CAAC;AAAA,GAClE,CAAC;AAAA,CAA2C;AAClCI,IAAAA,OAAO,GAAGX,aAAa;AACvBY,IAAAA,UAAU,GAAGZ,aAAa,CAAQ;AAAEa,EAAAA,GAAG,EAAE;AAAK,CAAC;AAC/CC,IAAAA,aAAa,GAAGd,aAAa,CAAW;AAAEe,EAAAA,MAAM,EAAE;AAAK,CAAC;AAGrE,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,GAAA;AAAA,EAAA,IAClBf,YAAoC,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE;AAAA,EAAA,oBAEzCG,UAAU;AACR;EACA,UAACC,KAAK,EAAEC,GAAG,EAAA;AAAA,IAAA,oBAAKC,GAAA,CAACX,OAAO,EAAAY,cAAA,CAAAA,cAAA,CAAKR,EAAAA,EAAAA,YAAY,GAAMS,YAAY,CAACJ,KAAK,EAAEC,GAAG,EAAE,MAAM,CAAC,CAAG,CAAC;AAAA,GACrF,CAAC;AAAA,CAAyC;AAC/BU,IAAAA,QAAQ,GAAGD,cAAc;AACzBE,IAAAA,WAAW,GAAGF,cAAc,CAAQ;AAAEH,EAAAA,GAAG,EAAE;AAAK,CAAC;AACjDM,IAAAA,cAAc,GAAGH,cAAc,CAAW;AAAED,EAAAA,MAAM,EAAE;AAAK,CAAC;;;;"}