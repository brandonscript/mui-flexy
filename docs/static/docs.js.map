{"version":3,"file":"docs.js","sources":["../../src/Flex.utils.ts","../../src/Flex.tsx","../../demo/src/Flex.demo.tsx","../../demo/src/App.tsx","../Docs.tsx","../../src/Unstable_FlexGrid2.tsx","../../src/FlexGrid2.tsx","../../src/FlexGrid.tsx"],"sourcesContent":["// @ts-ignore\nimport type { BoxProps, Grid2Props, GridProps } from \"@mui/material\";\nimport { CSSProperties } from \"react\";\n\nimport {\n  type InferFlexProps,\n  type ResponsiveFlexBoolean,\n  ResponsiveFlexDirection,\n  ResponsiveFlexPosition,\n} from \"./Flex.types\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst mapAlignment = (alignment?: _Any): ResponsiveFlexPosition => {\n  if (!alignment) return;\n  if (typeof alignment === \"string\") {\n    switch (alignment) {\n      case \"top\":\n      case \"left\":\n        return \"flex-start\";\n      case \"bottom\":\n      case \"right\":\n        return \"flex-end\";\n      default:\n        return alignment as ResponsiveFlexPosition;\n    }\n  }\n  if (Array.isArray(alignment)) {\n    return alignment.map(mapAlignment) as ResponsiveFlexPosition;\n  }\n  if (typeof alignment === \"object\") {\n    const mapped: _Any = {};\n    for (const [key, value] of Object.entries(alignment)) {\n      mapped[key] = mapAlignment(value);\n    }\n    return mapped as ResponsiveFlexPosition;\n  }\n  return alignment as ResponsiveFlexPosition;\n};\n\nconst mapDirection = (\n  direction: ResponsiveFlexDirection | undefined | null,\n  reverse: boolean | undefined | null = false,\n): ResponsiveFlexDirection => {\n  if (!direction) return \"row\";\n  if (typeof direction === \"string\") {\n    if (![\"row\", \"row-reverse\", \"column\", \"column-reverse\"].includes(direction)) {\n      console.warn(\n        `Using { flex-direction: ${direction} } with mui-flexy shorthand is not recommended \\\nbecause it can cause unexpected alignment and orientation anomalies.`,\n      );\n    }\n    switch (direction) {\n      case \"row\":\n      case \"column\":\n        return `${direction}${reverse ? \"-reverse\" : \"\"}`;\n      default:\n        return direction;\n    }\n  } else if (Array.isArray(direction)) {\n    return direction.map((d) => (!d ? \"row\" : mapDirection(d, reverse))) as ResponsiveFlexDirection;\n  } else if (typeof direction === \"object\") {\n    const mapped: _Any = {};\n    for (const [key, value] of Object.entries(direction)) {\n      mapped[key] = mapDirection(value, reverse);\n    }\n    return mapped as ResponsiveFlexDirection;\n  }\n};\n\nconst stringOrArrayValue = <V = unknown>(value: V, index: number) => {\n  if (typeof value === \"string\") {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value?.[index];\n  }\n};\n\nconst mapResponsiveObject = (\n  direction: { [key: string]: CSSProperties[\"flexDirection\"] | null } | undefined | null,\n  main: ResponsiveFlexPosition,\n  cross: ResponsiveFlexPosition,\n) => {\n  return Object.fromEntries(\n    Object.entries(direction ?? []).map(([key, d]) => {\n      if (typeof d !== \"string\") {\n        throw new Error(\n          \"Values for a flex direction ResponsiveStyleObject must be strings, e.g. { xs: 'row', sm: 'column' }\",\n        );\n      }\n      if (d.startsWith(\"column\")) {\n        return [key, typeof cross === \"string\" ? cross : mapAlignment(cross)?.[key as keyof typeof cross]];\n      } else {\n        return [key, typeof main === \"string\" ? main : mapAlignment(main)?.[key as keyof typeof main]];\n      }\n    }),\n  );\n};\n\nconst resolveAlignment = (direction: ResponsiveFlexDirection, x: ResponsiveFlexPosition, y: ResponsiveFlexPosition) => {\n  if (typeof direction === \"string\") {\n    const isColumn = direction.startsWith(\"column\");\n    return {\n      justifyContent: mapAlignment(isColumn ? y : x),\n      alignItems: mapAlignment(isColumn ? x : y),\n    };\n  }\n\n  if (Array.isArray(direction)) {\n    return {\n      justifyContent: direction.map((d, i) => stringOrArrayValue(mapAlignment(d?.startsWith(\"column\") ? y : x), i)),\n      alignItems: direction.map((d, i) => stringOrArrayValue(mapAlignment(d?.startsWith(\"column\") ? x : y), i)),\n    };\n  }\n\n  if (typeof direction === \"object\") {\n    return {\n      justifyContent: mapResponsiveObject(direction, x, y),\n      alignItems: mapResponsiveObject(direction, y, x),\n    };\n  }\n\n  return { justifyContent: x, alignItems: y };\n};\n\ntype CSSFlexDirection = CSSProperties[\"flexDirection\"];\nconst resolveDirection = <R extends ResponsiveFlexDirection = ResponsiveFlexDirection>(\n  row: ResponsiveFlexDirection | ResponsiveFlexBoolean | undefined | null,\n  column: ResponsiveFlexDirection | ResponsiveFlexBoolean | undefined | null,\n  reverse: boolean | undefined | null = false,\n  fallback: ResponsiveFlexDirection = \"row\",\n): R | CSSFlexDirection | undefined => {\n  /* Maps boolean responsive row/column props to flexDirection values */\n\n  const rowIsNullOrUndefined = row === null || row === undefined;\n  const columnIsNullOrUndefined = column === null || column === undefined;\n\n  if (rowIsNullOrUndefined && columnIsNullOrUndefined) {\n    return mapDirection(fallback, reverse) as R;\n  }\n\n  const rowIsFalse = row === false;\n  const columnIsFalse = column === false;\n\n  let chooseRow = [true, \"row\"].includes(row as _Any) || columnIsFalse || columnIsNullOrUndefined;\n  let chooseColumn = [true, \"column\"].includes(column as _Any) || rowIsFalse || rowIsNullOrUndefined;\n\n  if (rowIsFalse && !columnIsFalse) {\n    chooseRow = false;\n    chooseColumn = true;\n  } else if (columnIsFalse && !rowIsFalse) {\n    chooseColumn = false;\n    chooseRow = true;\n  } else if (chooseRow && chooseColumn) {\n    chooseColumn = false;\n  }\n\n  const rowIsArray = Array.isArray(row);\n  const columnIsArray = Array.isArray(column);\n\n  const rowIsObject = typeof row === \"object\" && !rowIsArray && !rowIsNullOrUndefined;\n  const columnIsObject = typeof column === \"object\" && !columnIsArray && !columnIsNullOrUndefined;\n\n  if ([!rowIsObject, !columnIsObject, !rowIsArray, !columnIsArray].every(Boolean)) {\n    return mapDirection(chooseColumn ? \"column\" : chooseRow ? \"row\" : fallback, reverse) as R;\n  }\n\n  const rowIsFalsy = !row || (rowIsArray && !row.length) || (rowIsObject && !Object.keys(row).length);\n  const columnIsFalsy = !column || (columnIsArray && !column.length) || (columnIsObject && !Object.keys(column).length);\n\n  if (rowIsArray && columnIsFalsy) {\n    return row.map((r) => resolveDirection(r, column, reverse, fallback)) as R;\n  }\n\n  if (columnIsArray && rowIsFalsy) {\n    return column.map((c) => resolveDirection(row, c, reverse, fallback)) as R;\n  }\n\n  if (rowIsArray && columnIsArray) {\n    const composite: ResponsiveFlexDirection = [];\n    if (row.length !== column.length) {\n      console.warn(\n        `When using Array type ResponsiveFlexDirection for both 'row' and 'column', they should be the same length (have the same number of breakpoints) - got row=${JSON.stringify(\n          row,\n        )} and column=${JSON.stringify(column)}. You probably want to use just one or the other.`,\n      );\n\n      const longestLength = Math.max(row.length, column.length);\n\n      for (let i = 0; i < longestLength; i++) {\n        const r = row[i] ?? (column[i] === \"column\" ? \"row\" : \"column\");\n        const c = column[i] ?? (row[i] === \"row\" ? \"column\" : \"row\");\n        composite.push(resolveDirection(r, c, reverse, fallback) as CSSFlexDirection);\n      }\n      return composite as R;\n    }\n\n    // if any of the values in each array are both true for the same array index, warn in the console and default to 'row'\n    return row.map((r, i) => {\n      let c = column[i];\n      if (r && c) {\n        console.warn(\n          `When using Array type ResponsiveFlexDirection for both 'row' and 'column', they cannot not both be true for the same breakpoint index - got row=${JSON.stringify(\n            row,\n          )} and column=${JSON.stringify(column)}. Defaulting to 'row' for conflicting indices.`,\n        );\n        c = false;\n      }\n      return resolveDirection(r, c, reverse, fallback) as CSSFlexDirection;\n    }) as R;\n  }\n\n  if (rowIsObject && columnIsFalsy) {\n    return Object.fromEntries(\n      Object.entries(row)\n        .filter(([, r]) => ![null, undefined].includes(r))\n        .map(([k, r]) => [k, resolveDirection(r, undefined, reverse, fallback)]),\n    ) as R;\n  }\n\n  if (columnIsObject && rowIsFalsy) {\n    return Object.fromEntries(\n      Object.entries(column)\n        .filter(([, r]) => ![null, undefined].includes(r))\n        .map(([k, c]) => [k, resolveDirection(undefined, c, reverse, fallback)]),\n    ) as R;\n  }\n\n  if (rowIsObject && columnIsObject) {\n    const composite: { [key: string]: CSSFlexDirection } = {};\n    const keys = new Set([...Object.keys(row), ...Object.keys(column)]);\n\n    for (const key of keys) {\n      const r = row[key];\n      const c = column[key];\n      if ([null, undefined].includes(r as _Any) && [null, undefined].includes(c as _Any)) {\n        // if both are empty, omit the key\n        continue;\n      }\n      composite[key] = resolveDirection(r, c, reverse, fallback) as CSSFlexDirection;\n    }\n    return composite as R;\n  }\n};\n\ntype MappableFlexProps = Partial<InferFlexProps> & Partial<BoxProps | GridProps | Grid2Props>;\n\nexport const mapFlexProps = <P extends MappableFlexProps = MappableFlexProps>(\n  props: P,\n  ref?: React.Ref<_Any> | null,\n  componentName: \"Box\" | \"Grid\" | \"Grid2\" = \"Box\",\n) => {\n  const { x, y, row, column, flexDirection, reverse, nowrap, ...rest } = props;\n\n  const direction = resolveDirection(row, column, reverse, flexDirection as ResponsiveFlexDirection);\n\n  const whiteSpace = nowrap ? \"nowrap\" : props.whiteSpace;\n  const flexProps = { display: rest.display || \"flex\", whiteSpace };\n  const className = `${props.className || \"\"} MuiFlex-root${componentName ? ` MuiFlex${componentName}-root` : \"\"}`;\n\n  const alignments = resolveAlignment(direction, x, y);\n\n  return {\n    ...rest,\n    ...flexProps,\n    ...alignments,\n    flexDirection: direction,\n    className,\n    ref,\n  } as unknown as P;\n};\n\nexport const _test = {\n  mapAlignment,\n  mapDirection,\n  mapFlexProps,\n  resolveDirection,\n};\n","import _MuiBox, { BoxProps } from \"@mui/material/Box\";\nimport _MuiGrid, { GridProps } from \"@mui/material/Grid\";\nimport { Theme as MaterialTheme } from \"@mui/material/styles\";\nimport { forwardRef } from \"react\";\n\nimport type {\n  AsComponent,\n  FlexBoxColumnProps,\n  FlexBoxProps,\n  FlexBoxRowProps,\n  FlexBoxTypeMap,\n  FlexGridColumnProps,\n  FlexGridProps,\n  FlexGridRowProps,\n  FlexGridTypeMap,\n  FlexOrientation,\n} from \"./Flex.types\";\nimport { mapFlexProps } from \"./Flex.utils\";\n\n// @ts-ignore\nconst MuiBox = _MuiBox?.default ?? _MuiBox;\n// @ts-ignore\nconst MuiGrid = _MuiGrid?.default ?? _MuiGrid;\n\nexport { FlexBoxColumnProps, FlexBoxProps, FlexBoxRowProps };\nconst createFlexBox = <\n  O extends FlexOrientation | undefined = undefined,\n  D extends React.ElementType = \"div\",\n  P = {},\n  T extends object = MaterialTheme,\n>(\n  defaultProps: FlexBoxProps<O, D, P> = {} as FlexBoxProps<O, D, P>,\n) =>\n  forwardRef<BoxProps[\"ref\"], FlexBoxProps<O, D, P>>((props, ref) => (\n    <MuiBox {...defaultProps} {...mapFlexProps(props, ref, \"Box\")} />\n  )) as AsComponent<FlexBoxTypeMap<O, P, D, T>>;\nexport const FlexBox = createFlexBox();\nexport const FlexRowBox = createFlexBox<\"row\">({ row: true });\nexport const FlexColumnBox = createFlexBox<\"column\">({ column: true });\n\nexport { FlexGridColumnProps, FlexGridProps, FlexGridRowProps };\nconst createFlexGrid = <O extends FlexOrientation | undefined = undefined, D extends React.ElementType = \"div\", P = {}>(\n  defaultProps: FlexGridProps<O, D, P> = {} as FlexGridProps<O, D, P>,\n) =>\n  forwardRef<GridProps[\"ref\"], FlexGridProps<O, D, P>>(\n    // @ts-ignore\n    (props, ref) => <MuiGrid {...defaultProps} {...mapFlexProps(props, ref, \"Grid\")} />,\n  ) as AsComponent<FlexGridTypeMap<O, P, D>>;\nexport const FlexGrid = createFlexGrid();\nexport const FlexGridRow = createFlexGrid<\"row\">({ row: true });\nexport const FlexGridColumn = createFlexGrid<\"column\">({ column: true });\n","import { Link, styled, Typography, TypographyOwnProps } from \"@mui/material\";\nimport { major as muiVersionMajor, version as muiVersion } from \"@mui/material/version\";\nimport * as React from \"react\";\nimport { forwardRef, PropsWithChildren, useCallback, useEffect, useRef, useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atelierCaveLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nimport pkg from \"../../package.json\";\nimport { FlexGridProps } from \"../../src\";\nimport { FlexBox, type FlexBoxProps, FlexGrid } from \"../../src\";\n\nlet FlexGrid2 = undefined;\nif (muiVersionMajor < 6) {\n  FlexGrid2 = React.lazy(() => import(\"../../src/Unstable_FlexGrid2\"));\n} else if (muiVersionMajor === 6) {\n  FlexGrid2 = React.lazy(() => import(\"../../src/FlexGrid2\"));\n} else {\n  FlexGrid2 = React.lazy(() => import(\"../../src/FlexGrid\"));\n}\n\n// Or: run `npm link ../` or `yarn link ../` in the ./demo directory\n// and import from \"mui-flexy\":\n// import { FlexBox, FlexBoxProps, FlexGrid } from \"mui-flexy\";\n\nconsole.log(pkg.name, pkg.version, \"@mui/material\", muiVersion);\nconsole.log(\"FlexBox:\", FlexBox);\nconsole.log(\"FlexGrid:\", FlexGrid);\nconsole.log(\"FlexGrid2:\", FlexGrid2);\n\nconst rowEmoji = \"🚣\";\nconst columnEmoji = \"🏛\";\n\nconst rowCombinations: Array<[FlexBoxProps<\"row\">[\"x\"], FlexBoxProps<\"row\">[\"y\"]]> = [\n  [\"left\", \"top\"],\n  [\"left\", \"center\"],\n  [\"left\", \"bottom\"],\n  [\"left\", \"flex-start\"],\n  [\"left\", \"flex-end\"],\n  [\"left\", \"stretch\"],\n  [\"left\", \"baseline\"],\n  [\"right\", \"top\"],\n  [\"right\", \"center\"],\n  [\"right\", \"bottom\"],\n  [\"right\", \"flex-start\"],\n  [\"right\", \"flex-end\"],\n  [\"right\", \"stretch\"],\n  [\"right\", \"baseline\"],\n  [\"center\", \"top\"],\n  [\"center\", \"center\"],\n  [\"center\", \"bottom\"],\n  [\"center\", \"flex-start\"],\n  [\"center\", \"flex-end\"],\n  [\"center\", \"stretch\"],\n  [\"center\", \"baseline\"],\n  [\"space-between\", \"top\"],\n  [\"space-between\", \"center\"],\n  [\"space-between\", \"bottom\"],\n  [\"space-around\", \"top\"],\n  [\"space-around\", \"center\"],\n  [\"space-around\", \"bottom\"],\n  [\"space-evenly\", \"top\"],\n  [\"space-evenly\", \"center\"],\n  [\"space-evenly\", \"bottom\"],\n];\n\nconst columnCombinations: Array<[FlexBoxProps<\"column\">[\"y\"], FlexBoxProps<\"column\">[\"x\"]]> = [\n  [\"top\", \"left\"],\n  [\"top\", \"center\"],\n  [\"top\", \"right\"],\n  [\"top\", \"flex-start\"],\n  [\"top\", \"flex-end\"],\n  [\"top\", \"stretch\"],\n  [\"top\", \"baseline\"],\n  [\"bottom\", \"left\"],\n  [\"bottom\", \"center\"],\n  [\"bottom\", \"right\"],\n  [\"bottom\", \"flex-start\"],\n  [\"bottom\", \"flex-end\"],\n  [\"bottom\", \"stretch\"],\n  [\"bottom\", \"baseline\"],\n  [\"center\", \"left\"],\n  [\"center\", \"center\"],\n  [\"center\", \"right\"],\n  [\"center\", \"flex-start\"],\n  [\"center\", \"flex-end\"],\n  [\"center\", \"stretch\"],\n  [\"center\", \"baseline\"],\n  [\"space-between\", \"left\"],\n  [\"space-between\", \"center\"],\n  [\"space-between\", \"right\"],\n  [\"space-around\", \"left\"],\n  [\"space-around\", \"center\"],\n  [\"space-around\", \"right\"],\n  [\"space-evenly\", \"left\"],\n  [\"space-evenly\", \"center\"],\n  [\"space-evenly\", \"right\"],\n];\n\nconst bgColor = \"#f6f5f6\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst Inner = styled(FlexBox)<FlexBoxProps>((props) => ({\n  minHeight: props?.minHeight ?? (props?.sx as _Any)?.minHeight ?? 120,\n  border: \"1.5px solid #e2ebf8\",\n  borderRadius: \"4px\",\n  flexGrow: 1,\n  gap: \"4px\",\n  padding: \"4px\",\n  backgroundColor: \"#fff\",\n  \"& > span\": {\n    backgroundColor: bgColor,\n    paddingLeft: \"4px\",\n    paddingRight: \"4px\",\n    borderRadius: \"4px\",\n  },\n  \"& > pre\": {\n    margin: 0,\n    borderRadius: \"4px\",\n  },\n  \"& pre, & code\": {\n    whiteSpace: \"break-spaces\",\n  },\n}));\n\nconst rowArrow = (\n  <span style={{ writingMode: \"vertical-rl\", textOrientation: \"sideways\" }} aria-label=\"left-right arrow\">\n    ⇅\n  </span>\n);\nconst colArrow = (\n  <span style={{ writingMode: \"vertical-rl\", textOrientation: \"upright\" }} aria-label=\"up-down arrow\">\n    ⇅\n  </span>\n);\n\n// Helper function to handle Grid size props for different MUI versions\nconst getGridSizeProps = (sizeObj: Record<string, number>) => {\n  if (muiVersionMajor >= 7) {\n    // For MUI v7+, convert old props to new size format\n    return { size: sizeObj };\n  }\n  // For MUI v5/v6, use the old format\n  return sizeObj;\n};\n\nconst gridColumns = getGridSizeProps({ xs: 12, md: 4, lg: 4, xl: 4 });\nconst reponsiveFontSizes = { \"& pre\": { fontSize: { xs: \"0.85rem\", md: \"1.0vw\", lg: \"0.85rem\" } } };\n\nconst Header = forwardRef(\n  ({ text, subtitle }: { text: string; subtitle?: string }, ref: React.ForwardedRef<HTMLDivElement>) => (\n    <FlexGrid item {...getGridSizeProps({ xs: 12 })} component=\"header\" ref={ref} column gap={0}>\n      <Typography component=\"h2\" variant=\"h5\" sx={{ display: \"flex\", alignItems: \"center\" }}>\n        {text}\n        {text.toLowerCase().includes(\"row\") ? rowArrow : text.toLowerCase().includes(\"column\") ? colArrow : \"\"}\n      </Typography>\n      <Typography component=\"h4\" variant=\"subtitle1\">\n        {subtitle}\n      </Typography>\n    </FlexGrid>\n  ),\n);\nHeader.displayName = \"Header\";\n\nconst Code = ({\n  inline = false,\n  width,\n  code,\n  children,\n  margin = \"\",\n}: PropsWithChildren<{\n  width?: string | number;\n  inline?: boolean;\n  code?: string;\n  margin?: number | string;\n}>) => (\n  // @ts-ignore - children can be a string, but react-syntax-highlighter expects a ReactElement\n  <SyntaxHighlighter\n    language=\"javascript\"\n    customStyle={\n      inline\n        ? {\n            display: \"inline\",\n            padding: \"2px 4px\",\n            width,\n            background: bgColor,\n            borderRadius: 4,\n            margin,\n          }\n        : { background: bgColor, borderRadius: 4, margin }\n    }\n    style={atelierCaveLight}\n  >\n    {children?.toString() || code || \"\"}\n  </SyntaxHighlighter>\n);\n\nconst Title = () => (\n  <>\n    <FlexBox\n      component={(props: TypographyOwnProps) => <Typography {...props} component=\"h1\" />}\n      variant=\"h4\"\n      row\n      x=\"left\"\n      y=\"center\"\n      gap={2}\n    >\n      <FlexBox\n        width={100}\n        height={100}\n        mb={2}\n        ml={-1}\n        column\n        component=\"img\"\n        src=\"apple-touch-icon.png\"\n        alt=\"mui-flexy logo\"\n      />\n      mui-flexy for\n      <Link target=\"_blank\" href=\"https://mui.com/\" sx={{ ml: -0.75 }}>\n        @mui/material^{muiVersionMajor}\n      </Link>\n    </FlexBox>\n    <Typography variant=\"body1\" component=\"div\">\n      {\n        \"mui-flexy for MUI is a component wrapper for flexbox styles that allows you to easily \\\n            align and distribute flexy items in a space in a way that doesn't make you want \\\n            to pull your hair out trying to remember whether to use \"\n      }\n      <Code inline>justify-content</Code>\n      {\" or \"}\n      <Code inline>align-items</Code>\n      {\n        \". Using a simple and consistent x, y coordinate system, you can stop worrying about \\\n          the CSS working group's choices and get on with your life of centering divs.\"\n      }\n      <br />\n      <br />\n      {\"Flex components inherit from either \"}\n      <Link target=\"_blank\" href=\"https://mui.com/material-ui/react-box/\">\n        Box\n      </Link>{\" \"}\n      or{\" \"}\n      <Link target=\"_blank\" href=\"https://mui.com/material-ui/react-grid\">\n        Grid\n      </Link>\n      {\", depending on your needs. Simply use \"}\n      <Code inline>{\"<FlexBox />\"}</Code>\n      {\" or \"}\n      <Code inline>{\"<FlexGrid />\"}</Code>\n      {\" as you would Box or Grid. The default axis is \"}\n      <Code inline>row</Code>\n      {\", but for good hygiene, you might want to set \"}\n      <Code inline>row</Code>\n      {\" anyway. If you want a column, just pass a \"}\n      <Code inline>column</Code>\n      {\"prop, and Flexy will do the hard thinking and make CSS so you don't have to.\"}\n    </Typography>\n  </>\n);\n\nconst GridSection = styled((props: FlexGridProps = {}) => (\n  <FlexGrid {...props} container component=\"section\" spacing={[0.5, 1, 2]} />\n))(({ theme }) =>\n  theme.unstable_sx({\n    \"&.MuiGrid-root, &.MuiGrid2-root\": {\n      maxWidth: \"100%\",\n    },\n  }),\n);\n\nconst Item = styled((props: FlexGridProps = {}) => <FlexGrid {...props} item component=\"div\" />)({\n  width: \"100%\",\n});\n\nconst BoxSection = styled(FlexBox)(({ theme }) =>\n  theme.unstable_sx({\n    width: \"100%\",\n    maxWidth: \"100%\",\n    rowGap: [2, 3, 4],\n  }),\n).withComponent(\"section\");\n\nexport const useRenderer = () => {\n  const [, _render] = useState({});\n  return useCallback(() => _render({}), []);\n};\n\nconst FlexDemo = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const render = useRenderer();\n\n  useEffect(() => {\n    if (ref.current) {\n      render();\n    }\n  }, [ref, render]);\n\n  return (\n    <FlexBox width=\"100vw\" p={[2, 3, 4]} gap={[2, 3, 4]} x=\"center\" component=\"main\" sx={{ bgcolor: \"#fff\" }} column>\n      <FlexBox x=\"left\" y=\"center\" column>\n        <Title />\n      </FlexBox>\n      <GridSection className=\"row-basic\">\n        <Header text=\"Row (basic)\" subtitle=\"Props are string values\" />\n        {rowCombinations.map(([x, y], i) => (\n          <Item {...gridColumns} key={i} component=\"div\" column>\n            <Code\n              margin=\"0px 16px\"\n              code={`<FlexBox x=\"${x}\" y=\"${y}\">\n  ...\n</FlexBox>`}\n            />\n            <Inner x={x} y={y} sx={reponsiveFontSizes}>\n              <span>{rowEmoji}</span>\n            </Inner>\n          </Item>\n        ))}\n      </GridSection>\n      <GridSection className=\"row-responsive\">\n        <Header\n          text=\"Row (responsive)\"\n          subtitle=\"Responsive array or object values (resize the window to see different breakpoints)\"\n        />\n        <Item {...getGridSizeProps({ xs: 12, lg: 6 })}>\n          <Code\n            margin=\"0px 16px\"\n            code={`<FlexBox\\n\\\n  x={[ \"center\", \"left\", \"center\", \"right\" ]}\\n\\\n  y={[ \"center\", \"top\", \"center\", \"bottom\" ]}\\n/>\\n\n// (interpreted as [ xs, sm, md, >= lg ])`}\n          />\n          <Inner\n            x={[\"center\", \"left\", \"center\", \"right\"]}\n            y={[\"center\", \"top\", \"center\", \"bottom\"]}\n            sx={{ minHeight: 240 }}\n          >\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n        <Item {...getGridSizeProps({ xs: 12, lg: 6 })}>\n          <Code\n            margin=\"0px 16px\"\n            code={`<FlexBox\\n\\\n  x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\\n\\\n  y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\\n/>`}\n          />\n          <Inner\n            x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\n            y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\n            sx={{ minHeight: 240, ...reponsiveFontSizes }}\n          >\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n        <Item {...getGridSizeProps({ xs: 12, lg: 6 })}>\n          <Code\n            margin=\"0px 16px\"\n            code={`<FlexBox\n  row={[ false, false, true, true, false ]}\n  // column={[ true, true, false, false, true ]} <- this is implied\n  x={[ \"center\", \"center\", \"space-between\", \"space-around\" ]}\n  y=\"center\"\n  gap={[2, 3, 4]}\\n/>\\n`}\n          />\n          <Inner\n            row={[false, false, true, true, false]}\n            // column={[true, true, false, false, true]} <- this is implied\n            x={[\"center\", \"center\", \"space-between\", \"space-around\"]}\n            y=\"center\"\n            gap={[2, 3, 4]}\n            sx={{ minHeight: 240, ...reponsiveFontSizes }}\n          >\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n        <Item {...getGridSizeProps({ xs: 12, lg: 6 })}>\n          <Code\n            margin=\"0px 16px\"\n            code={`<FlexBox\n  row={{ xs: false, md: true, xl: false }}\n  // column={{ xs: true, md: false, xl: true }} <- this is implied\n  x={{ xs: \"center\", md: \"space-between\", lg: \"space-around\" }}\\n/>`}\n          />\n          <Inner\n            row={{ xs: false, md: true, xl: false }}\n            // column={{ xs: true, md: false, xl: true }} <- this is implied\n            x={{ xs: \"center\", md: \"space-between\", lg: \"space-around\" }}\n            gap={[2, 3, 4]}\n            sx={{ minHeight: 240, ...reponsiveFontSizes }}\n          >\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n      </GridSection>\n      <GridSection className=\"column-basic\">\n        <Header text=\"Column (basic)\" subtitle=\"Props are string values\" />\n        {columnCombinations.map(([y, x], i) => (\n          <Item item {...gridColumns} key={i} column>\n            <Code\n              margin=\"0px 16px\"\n              code={`<FlexBox x=\"${x}\" y=\"${y}\" column>\n  ...\n</FlexBox>`}\n            />\n            <Inner x={x} y={y} column sx={reponsiveFontSizes}>\n              <span>{columnEmoji}</span>\n            </Inner>\n          </Item>\n        ))}\n      </GridSection>\n      <GridSection className=\"column-responsive\">\n        <Header\n          text=\"Column (responsive)\"\n          subtitle=\"Props are array or object values (resize the window to see different breakpoints)\"\n        />\n        <Item {...getGridSizeProps({ xs: 12, lg: 6 })}>\n          <Code\n            margin=\"0px 16px\"\n            code={`<FlexBox\\n\\\n  x={[ \"center\", \"left\", \"center\", \"right\" ]}\\n\\\n  y={[ \"center\", \"top\", \"center\", \"bottom\" ]}\\n\\\n  column\\n/>\\n\n// (interpreted as [ xs, sm, md, lg ])`}\n          />\n          <Inner\n            x={[\"center\", \"left\", \"center\", \"right\"]}\n            y={[\"center\", \"top\", \"center\", \"bottom\"]}\n            column\n            sx={{ minHeight: [240, 240, 480] }}\n          >\n            <span>{columnEmoji}</span>\n          </Inner>\n        </Item>\n        <Item {...getGridSizeProps({ xs: 12, lg: 6 })}>\n          <Code\n            margin=\"0px 16px\"\n            code={`<FlexBox\\n\\\n  x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\\n\\\n  y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\\n\\\n  column\\n/>\\n\n// (interpreted as { sm: _, md: _, lg: _ })`}\n          />\n          <Inner\n            x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\n            y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\n            column\n            sx={{ minHeight: [240, 240, 480] }}\n          >\n            <span>{columnEmoji}</span>\n          </Inner>\n        </Item>\n      </GridSection>\n      <GridSection className=\"css-grid-basic\">\n        <Header text=\"Basic CSS Grid (FlexGrid)\" />\n        <FlexGrid item x=\"center\" y=\"center\">\n          <FlexGrid container spacing={2}>\n            {[...Array(12).keys()].map((i) => (\n              <FlexGrid item key={i} {...getGridSizeProps({ xs: 12, sm: 6, md: 4, lg: 3, xl: 2 })}>\n                <Inner x=\"center\" y=\"center\">\n                  <Code\n                    code={`<FlexGrid item>\n  ${i + 1}\n</FlexGrid>`}\n                  />\n                </Inner>\n              </FlexGrid>\n            ))}\n          </FlexGrid>\n        </FlexGrid>\n      </GridSection>\n      <BoxSection className=\"css-grid-templating\" column>\n        <Header text=\"CSS Grid (FlexGrid) with grid templating\" />\n        <FlexGrid\n          item\n          x=\"center\"\n          y=\"center\"\n          ml={1}\n          mr={-1}\n          width=\"100%\"\n          sx={{ display: { xs: \"flex\", md: \"none\" }, opacity: 0.5 }}\n        >\n          (This demo is not formatted for smaller screens)\n        </FlexGrid>\n        <FlexGrid item x=\"center\" y=\"center\" width=\"100%\" sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n          <FlexGrid\n            container\n            spacing={[2, 3, 4]}\n            display=\"grid\"\n            sx={{\n              width: \"100%\",\n              bgcolor: \"background.default\",\n              gridTemplateColumns: \"auto 1fr auto\",\n              gridTemplateRows: \"auto 1fr auto\",\n              gridAutoRows: \"minmax(150px, 1fr)\",\n              gridTemplateAreas: `\n              \"header header header\"\n              \"left center right\"\n              \"footer footer footer\"`,\n              gridAutoFlow: \"row\",\n              \"& .header\": { gridArea: \"header\" },\n              \"& .left\": { gridArea: \"left\" },\n              \"& .center\": { gridArea: \"center\" },\n              \"& .right\": { gridArea: \"right\" },\n              \"& .footer\": { gridArea: \"footer\" },\n            }}\n          >\n            <FlexGrid item className=\"header\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code code={`<FlexGrid item className=\"header\">Header</FlexGrid>`} />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"left\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code\n                  code={`<FlexGrid item className=\"left\">\n  Left\n</FlexGrid>`}\n                />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"center\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code\n                  code={`<FlexGrid item className=\"center\">\n  Center\n</FlexGrid>`}\n                />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"right\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code\n                  code={`<FlexGrid item className=\"right\">\n  Right\n</FlexGrid>`}\n                />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"footer\">\n              <Inner x=\"center\" y=\"center\" minHeight={\"auto\"}>\n                <Code code={`<FlexGrid item className=\"footer\">Footer</FlexGrid>`} />\n              </Inner>\n            </FlexGrid>\n          </FlexGrid>\n        </FlexGrid>\n      </BoxSection>\n      {muiVersion?.startsWith(\"5\") ? (\n        <GridSection className=\"mui-grid2-v5\">\n          <Header text=\"Unstable_Grid2 (@mui v5)\" />\n          <FlexGrid item x=\"center\" y=\"center\">\n            <FlexGrid2 container spacing={2}>\n              {[...Array(12).keys()].map((i) => (\n                // @ts-ignore - Grid2 props change between v5 and v6\n                <FlexGrid2 key={i} size={{ xs: 12, sm: 6, md: 4, lg: 3, xl: 2 }}>\n                  <Inner x=\"center\" y=\"center\">\n                    <Code\n                      code={`<FlexGrid2>\n  ${i + 1}\n</FlexGrid2>`}\n                    />\n                  </Inner>\n                </FlexGrid2>\n              ))}\n            </FlexGrid2>\n          </FlexGrid>\n        </GridSection>\n      ) : (\n        <GridSection className=\"mui-grid2-v5\">\n          <Header text=\"Grid2 (@mui v6+)\" />\n          <FlexGrid item x=\"center\" y=\"center\">\n            <FlexGrid2 container spacing={2}>\n              {[...Array(12).keys()].map((i) => (\n                // @ts-ignore - Grid2 props change between v5 and v6\n                <FlexGrid2 key={i} size={{ xs: 12, sm: 6, md: 4, lg: 3, xl: 2 }}>\n                  <Inner x=\"center\" y=\"center\">\n                    <Code\n                      code={`<FlexGrid2>\n  ${i + 1}\n</FlexGrid2>`}\n                    />\n                  </Inner>\n                </FlexGrid2>\n              ))}\n            </FlexGrid2>\n          </FlexGrid>\n        </GridSection>\n      )}\n      <BoxSection className=\"ref-test\" column>\n        <Header text=\"Ref test\" ref={ref} />\n        <Inner x=\"center\" y=\"center\" column mt={[0.5, 1, 2]}>\n          <span>{ref?.current?.innerText ? `${ref?.current?.innerText} successful` : \"Failed\"}</span>\n          <Code code={ref?.current?.toString()} />\n        </Inner>\n      </BoxSection>\n      <BoxSection className=\"complex-props-test\" column>\n        <Header text=\"Complex props test\" />\n        {(() => {\n          // @ts-expect-error\n          const invalidProps = { prop: \"invalid\" } as FlexBoxProps<\"column\">;\n          return (\n            <FlexBox column mt={[0.5, 1, 2]}>\n              <Code code={`<FlexBox prop=\"invalid\" />`} margin=\"0px 16px\" />\n              {/* @ts-expect-error */}\n              <Inner x=\"center\" y=\"center\" column {...invalidProps}>\n                <span>Complex &amp; invalid props test</span>\n              </Inner>\n            </FlexBox>\n          );\n        })()}\n      </BoxSection>\n    </FlexBox>\n  );\n};\n\nexport default FlexDemo;\nexport { FlexDemo };\n","import { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\n\nimport FlexDemo from \"./Flex.demo\";\n\nconst fontFamily = [\n  '\"Source Sans 3Variable\"',\n  '\"Source Sans 3\"',\n  \"-apple-system\",\n  \"BlinkMacSystemFont\",\n  '\"Segoe UI\"',\n  \"Source Sans Pro\",\n  \"Open Sans\",\n  \"Arial\",\n  \"sans-serif\",\n];\n\nconst preFontFamily = ['\"SF Mono\"', '\"Roboto Mono\"', \"Menlo\", '\"Source Code Pro\"', \"monospace\"];\n\nconst baseTheme = createTheme({\n  typography: {\n    fontFamily: fontFamily.join(\",\"),\n  },\n});\n\nconst theme = createTheme({\n  ...baseTheme,\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        \"div, span, p, h1, h2, h3, h4, h5, h6\": {\n          fontFamily: fontFamily.join(\",\"),\n        },\n        \"pre, code, code > *\": {\n          fontFamily: preFontFamily.join(\",\"),\n          fontSize: \"0.95em\",\n        },\n      },\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <FlexDemo />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nimport Demo from \"../demo/src/App\";\n\nconsole.log(\"React version\", React.version);\n\nconst App = () => {\n  return <Demo />;\n};\n\nexport default App;\n","// @ts-ignore\nimport type { Grid2Props as Unstable_Grid2Props } from \"@mui/material\";\nimport type { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { major as muiVersion } from \"@mui/material/version\";\nimport { forwardRef, Suspense } from \"react\";\n\nimport type {\n  FlexGrid2ColumnProps,\n  FlexGrid2Props,\n  FlexGrid2RowProps,\n  FlexGrid2TypeMap,\n  FlexOrientation,\n} from \"./Flex.types\";\nimport { mapFlexProps } from \"./Flex.utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst versionMismatchErr = `@mui/material version is ${muiVersion}, but Unstable_FlexGrid2 is only available in v5. Please use FlexGrid2 instead.`;\n\nexport {\n  FlexGrid2ColumnProps as Unstable_FlexGrid2ColumnProps,\n  FlexGrid2Props as Unstable_FlexGrid2Props,\n  FlexGrid2RowProps as Unstable_FlexGrid2RowProps,\n};\nexport const createUnstable_FlexGrid2 = <\n  O extends FlexOrientation | undefined = undefined,\n  D extends React.ElementType = \"div\",\n  P = {},\n>(\n  defaultProps: FlexGrid2Props<O, D, P> = {} as FlexGrid2Props<O, D, P>,\n) => {\n  let MuiUnstable_Grid2: _Any = undefined;\n  try {\n    if (muiVersion > 5) {\n      throw new Error(versionMismatchErr);\n    }\n    // @ts-ignore\n    MuiUnstable_Grid2 = React.lazy(() => import(\"@mui/material/Unstable_Grid2\"));\n  } catch (_err) {\n    console.warn(versionMismatchErr);\n  }\n  return forwardRef<Unstable_Grid2Props[\"ref\"], FlexGrid2Props<O, D, P>>((props, ref) => {\n    const { size, ...rest } = props as _Any;\n    const xs = typeof size === \"number\" || typeof size === \"string\" ? size : size?.xs;\n    const { xs: _xs, sm, md, lg, xl } = size || {};\n    props = {\n      ...rest,\n      xs: xs || _xs,\n      sm,\n      md,\n      lg,\n      xl,\n      ref,\n    };\n    return (\n      <Suspense fallback={<div data-mui-flexy-unstable-grid2=\"loading\" />}>\n        <MuiUnstable_Grid2 {...defaultProps} {...mapFlexProps(props, ref, \"Grid2\")} />\n      </Suspense>\n    );\n  }) as OverridableComponent<FlexGrid2TypeMap<O, P, D>>;\n};\n\nexport const Unstable_FlexGrid2 = createUnstable_FlexGrid2();\nexport const Unstable_FlexGrid2Row = createUnstable_FlexGrid2<\"row\">({ row: true });\nexport const Unstable_FlexGrid2Column = createUnstable_FlexGrid2<\"column\">({ column: true });\nexport default Unstable_FlexGrid2;\n","// @ts-ignore\nimport type { Grid2Props } from \"@mui/material\";\nimport type { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { major as muiVersion } from \"@mui/material/version\";\nimport { forwardRef, Suspense } from \"react\";\n\nimport type {\n  FlexGrid2ColumnProps,\n  FlexGrid2Props,\n  FlexGrid2RowProps,\n  FlexGrid2TypeMap,\n  FlexOrientation,\n} from \"./Flex.types\";\nimport { mapFlexProps } from \"./Flex.utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst versionMismatchErr = `@mui/material version is ${muiVersion}, but v6 or above is required to use FlexGrid2. Please use Unstable_FlexGrid2 instead.`;\n\nexport { FlexGrid2ColumnProps, FlexGrid2Props, FlexGrid2RowProps };\nexport const createFlexGrid2 = <\n  O extends FlexOrientation | undefined = undefined,\n  D extends React.ElementType = \"div\",\n  P = {},\n>(\n  defaultProps: FlexGrid2Props<O, D, P> = {} as FlexGrid2Props<O, D, P>,\n) => {\n  let MuiGrid2: _Any = undefined;\n  try {\n    if (muiVersion < 6) {\n      throw new Error(versionMismatchErr);\n    }\n    // @ts-ignore\n    MuiGrid2 = React.lazy(() => import(\"@mui/material/Grid2\"));\n  } catch (_err) {\n    console.warn(versionMismatchErr);\n  }\n\n  return forwardRef<Grid2Props[\"ref\"], FlexGrid2Props<O, D, P>>((props, ref) => {\n    const { xs, sm, md, lg, xl, size, ...rest } = props as _Any;\n    const sizeValues = [xs, sm, md, lg, xl].filter((value) => value !== null && value !== undefined);\n    const sizeProps =\n      size ?? (sizeValues.every((value) => value === sizeValues[0]) ? sizeValues[0] : { xs, sm, md, lg, xl });\n    props = { ...rest, size: sizeProps };\n    return (\n      <Suspense fallback={<div data-mui-flexy-grid2=\"loading\" />}>\n        <MuiGrid2 {...defaultProps} {...mapFlexProps(props, ref, \"Grid2\")} />\n      </Suspense>\n    );\n  }) as OverridableComponent<FlexGrid2TypeMap<O, P, D>>;\n};\n\nexport const FlexGrid2 = createFlexGrid2();\nexport const FlexGrid2Row = createFlexGrid2<\"row\">({ row: true });\nexport const FlexGrid2Column = createFlexGrid2<\"column\">({ column: true });\nexport default FlexGrid2;\n","import type { GridProps } from \"@mui/material\";\nimport type { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { major as muiVersion } from \"@mui/material/version\";\nimport React, { forwardRef, Suspense } from \"react\";\n\nimport type {\n  FlexGrid2ColumnProps,\n  FlexGrid2Props,\n  FlexGrid2RowProps,\n  FlexGrid2TypeMap,\n  FlexOrientation,\n} from \"./Flex.types\";\nimport { mapFlexProps } from \"./Flex.utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst versionMismatchErr = `@mui/material version is ${muiVersion}, but v6 or above is required to use FlexGrid2. Please use Unstable_FlexGrid2 instead.`;\n\nexport { FlexGrid2ColumnProps, FlexGrid2Props, FlexGrid2RowProps };\nexport const createFlexGrid = <\n  O extends FlexOrientation | undefined = undefined,\n  D extends React.ElementType = \"div\",\n  P = {},\n>(\n  defaultProps: FlexGrid2Props<O, D, P> = {} as FlexGrid2Props<O, D, P>,\n) => {\n  let MuiGrid: _Any = undefined;\n  try {\n    if (muiVersion < 6) {\n      throw new Error(versionMismatchErr);\n    }\n    // @ts-ignore\n    if (muiVersion >= 7) {\n      // In MUI v7, Grid2 has been moved to Grid namespace\n      MuiGrid = React.lazy(() => import(\"@mui/material/Grid\"));\n    } else {\n      // In MUI v6, use Grid2\n      // @ts-ignore\n      MuiGrid = React.lazy(() => import(\"@mui/material/Grid2\"));\n    }\n  } catch (_err) {\n    console.warn(versionMismatchErr);\n  }\n\n  return forwardRef<GridProps[\"ref\"], FlexGrid2Props<O, D, P>>((props, ref) => {\n    const { xs, sm, md, lg, xl, size, ...rest } = props as _Any;\n    const sizeValues = [xs, sm, md, lg, xl].filter((value) => value !== null && value !== undefined);\n    const sizeProps =\n      size ?? (sizeValues.every((value) => value === sizeValues[0]) ? sizeValues[0] : { xs, sm, md, lg, xl });\n    props = { ...rest, size: sizeProps };\n    return (\n      <Suspense fallback={<div data-mui-flexy-grid2=\"loading\" />}>\n        <MuiGrid {...defaultProps} {...mapFlexProps(props, ref, \"Grid\")} />\n      </Suspense>\n    );\n  }) as OverridableComponent<FlexGrid2TypeMap<O, P, D>>;\n};\n\nexport const FlexGrid = createFlexGrid();\nexport const FlexGridRow = createFlexGrid<\"row\">({ row: true });\nexport const FlexGridColumn = createFlexGrid<\"column\">({ column: true });\nexport default FlexGrid;\n"],"names":["mapAlignment","alignment","Array","isArray","map","mapped","key","value","Object","entries","mapDirection","direction","reverse","includes","console","warn","d","stringOrArrayValue","index","mapResponsiveObject","main","cross","fromEntries","Error","startsWith","resolveDirection","row","column","fallback","rowIsNullOrUndefined","columnIsNullOrUndefined","rowIsFalse","columnIsFalse","chooseRow","chooseColumn","rowIsArray","columnIsArray","rowIsObject","columnIsObject","every","Boolean","rowIsFalsy","length","keys","columnIsFalsy","r","c","composite","JSON","stringify","longestLength","Math","max","i","push","filter","undefined","k","Set","mapFlexProps","props","ref","componentName","x","y","flexDirection","nowrap","rest","whiteSpace","flexProps","display","className","alignments","isColumn","justifyContent","alignItems","resolveAlignment","MuiBox","_MuiBox","default","MuiGrid","_MuiGrid","FlexBox","defaultProps","forwardRef","React","createElement","createFlexBox","FlexGrid","createFlexGrid","FlexGrid2","muiVersionMajor","lazy","Promise","log","pkg","muiVersion","rowEmoji","columnEmoji","rowCombinations","columnCombinations","bgColor","Inner","styled","minHeight","sx","border","borderRadius","flexGrow","gap","padding","backgroundColor","paddingLeft","paddingRight","margin","rowArrow","span","style","writingMode","textOrientation","aria-label","colArrow","getGridSizeProps","sizeObj","size","gridColumns","xs","md","lg","xl","reponsiveFontSizes","fontSize","Header","text","subtitle","item","component","Typography","variant","toLowerCase","displayName","Code","inline","width","code","children","SyntaxHighlighter","language","customStyle","background","atelierCaveLight","toString","Title","Fragment","height","mb","ml","src","alt","Link","target","href","br","GridSection","container","spacing","theme","unstable_sx","maxWidth","Item","BoxSection","rowGap","withComponent","FlexDemo","useRef","render","_render","useState","useCallback","useRenderer","useEffect","current","p","bgcolor","sm","mr","opacity","gridTemplateColumns","gridTemplateRows","gridAutoRows","gridTemplateAreas","gridAutoFlow","gridArea","mt","innerText","prop","fontFamily","baseTheme","createTheme","typography","join","components","MuiCssBaseline","styleOverrides","App","ThemeProvider","CssBaseline","version","Demo","versionMismatchErr","createUnstable_FlexGrid2","MuiUnstable_Grid2","import","_err","_xs","Suspense","div","data-mui-flexy-unstable-grid2","Unstable_FlexGrid2","Unstable_FlexGrid2Row","Unstable_FlexGrid2Column","createFlexGrid2","MuiGrid2","sizeValues","data-mui-flexy-grid2","FlexGrid2Row","FlexGrid2Column","FlexGridRow","FlexGridColumn"],"mappings":"+gBAcA,MAAMA,EAAgBC,IACpB,GAAKA,EAAL,CACA,GAAyB,iBAAdA,EACT,OAAQA,GACN,IAAK,MACL,IAAK,OACH,MAAO,aACT,IAAK,SACL,IAAK,QACH,MAAO,WACT,QACE,OAAOA,EAGb,GAAIC,MAAMC,QAAQF,GAChB,OAAOA,EAAUG,IAAIJ,GAEvB,GAAyB,iBAAdC,EAAwB,CACjC,MAAMI,EAAe,CAAA,EACrB,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQR,GACxCI,EAAOC,GAAON,EAAaO,GAE7B,OAAOF,CACT,CACA,OAAOJ,CAvBS,GA0BZS,EAAe,CACnBC,EACAC,GAAsC,KAEtC,IAAKD,EAAW,MAAO,MACvB,GAAyB,iBAAdA,EAOT,OANK,CAAC,MAAO,cAAe,SAAU,kBAAkBE,SAASF,IAC/DG,QAAQC,KACN,2BAA2BJ,wHAIvBA,GACN,IAAK,MACL,IAAK,SACH,MAAO,GAAGA,IAAYC,EAAU,WAAa,KAC/C,QACE,OAAOD,MAEN,IAAIT,MAAMC,QAAQQ,GACvB,OAAOA,EAAUP,IAAKY,GAAQA,EAAYN,EAAaM,EAAGJ,GAAxB,OAC7B,GAAyB,iBAAdD,EAAwB,CACxC,MAAMN,EAAe,CAAA,EACrB,IAAK,MAAOC,EAAKC,KAAUC,OAAOC,QAAQE,GACxCN,EAAOC,GAAOI,EAAaH,EAAOK,GAEpC,OAAOP,CACT,IAGIY,EAAqB,CAAcV,EAAUW,IAC5B,iBAAVX,EACFA,EACEL,MAAMC,QAAQI,GAChBA,IAAQW,QADV,EAKHC,EAAsB,CAC1BR,EACAS,EACAC,IAEOb,OAAOc,YACZd,OAAOC,QAAQE,GAAa,IAAIP,IAAI,EAAEE,EAAKU,MACzC,GAAiB,iBAANA,EACT,MAAM,IAAIO,MACR,uGAGJ,OAAIP,EAAEQ,WAAW,UACR,CAAClB,EAAsB,iBAAVe,EAAqBA,EAAQrB,EAAaqB,KAASf,IAEhE,CAACA,EAAqB,iBAATc,EAAoBA,EAAOpB,EAAaoB,KAAQd,OAiCtEmB,EAAmB,CACvBC,EACAC,EACAf,GAAsC,EACtCgB,EAAoC,SAIpC,MAAMC,EAAuBH,QACvBI,EAA0BH,QAEhC,GAAIE,GAAwBC,EAC1B,OAAOpB,EAAakB,EAAUhB,GAGhC,MAAMmB,GAAqB,IAARL,EACbM,GAA2B,IAAXL,EAEtB,IAAIM,EAAY,EAAC,EAAM,OAAOpB,SAASa,IAAgBM,GAAiBF,EACpEI,EAAe,EAAC,EAAM,UAAUrB,SAASc,IAAmBI,GAAcF,EAE1EE,IAAeC,GACjBC,GAAY,EACZC,GAAe,GACNF,IAAkBD,GAC3BG,GAAe,EACfD,GAAY,GACHA,GAAaC,IACtBA,GAAe,GAGjB,MAAMC,EAAajC,MAAMC,QAAQuB,GAC3BU,EAAgBlC,MAAMC,QAAQwB,GAE9BU,EAA6B,iBAARX,IAAqBS,IAAeN,EACzDS,EAAmC,iBAAXX,IAAwBS,IAAkBN,EAExE,GAAI,EAAEO,GAAcC,GAAiBH,GAAaC,GAAeG,MAAMC,SACrE,OAAO9B,EAAawB,EAAe,SAAWD,EAAY,MAAQL,EAAUhB,GAG9E,MAAM6B,GAAcf,GAAQS,IAAeT,EAAIgB,QAAYL,IAAgB7B,OAAOmC,KAAKjB,GAAKgB,OACtFE,GAAiBjB,GAAWS,IAAkBT,EAAOe,QAAYJ,IAAmB9B,OAAOmC,KAAKhB,GAAQe,OAE9G,GAAIP,GAAcS,EAChB,OAAOlB,EAAItB,IAAKyC,GAAMpB,EAAiBoB,EAAGlB,EAAQf,EAASgB,IAG7D,GAAIQ,GAAiBK,EACnB,OAAOd,EAAOvB,IAAK0C,GAAMrB,EAAiBC,EAAKoB,EAAGlC,EAASgB,IAG7D,GAAIO,GAAcC,EAAe,CAC/B,MAAMW,EAAqC,GAC3C,GAAIrB,EAAIgB,SAAWf,EAAOe,OAAQ,CAChC5B,QAAQC,KACN,6JAA6JiC,KAAKC,UAChKvB,iBACcsB,KAAKC,UAAUtB,uDAGjC,MAAMuB,EAAgBC,KAAKC,IAAI1B,EAAIgB,OAAQf,EAAOe,QAElD,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAeG,IAAK,CACtC,MAAMR,EAAInB,EAAI2B,KAAqB,WAAd1B,EAAO0B,GAAkB,MAAQ,UAChDP,EAAInB,EAAO0B,KAAkB,QAAX3B,EAAI2B,GAAe,SAAW,OACtDN,EAAUO,KAAK7B,EAAiBoB,EAAGC,EAAGlC,EAASgB,GACjD,CACA,OAAOmB,CACT,CAGA,OAAOrB,EAAItB,IAAI,CAACyC,EAAGQ,KACjB,IAAIP,EAAInB,EAAO0B,GASf,OARIR,GAAKC,IACPhC,QAAQC,KACN,mJAAmJiC,KAAKC,UACtJvB,iBACcsB,KAAKC,UAAUtB,oDAEjCmB,GAAI,GAECrB,EAAiBoB,EAAGC,EAAGlC,EAASgB,IAE3C,CAEA,GAAIS,GAAeO,EACjB,OAAOpC,OAAOc,YACZd,OAAOC,QAAQiB,GACZ6B,OAAO,GAAIV,MAAQ,CAAC,UAAMW,GAAW3C,SAASgC,IAC9CzC,IAAI,EAAEqD,EAAGZ,KAAO,CAACY,EAAGhC,EAAiBoB,OAAGW,EAAW5C,EAASgB,MAInE,GAAIU,GAAkBG,EACpB,OAAOjC,OAAOc,YACZd,OAAOC,QAAQkB,GACZ4B,OAAO,GAAIV,MAAQ,CAAC,UAAMW,GAAW3C,SAASgC,IAC9CzC,IAAI,EAAEqD,EAAGX,KAAO,CAACW,EAAGhC,OAAiB+B,EAAWV,EAAGlC,EAASgB,MAInE,GAAIS,GAAeC,EAAgB,CACjC,MAAMS,EAAiD,CAAA,EACjDJ,EAAO,IAAIe,IAAI,IAAIlD,OAAOmC,KAAKjB,MAASlB,OAAOmC,KAAKhB,KAE1D,IAAK,MAAMrB,KAAOqC,EAAM,CACtB,MAAME,EAAInB,EAAIpB,GACRwC,EAAInB,EAAOrB,GACb,CAAC,UAAMkD,GAAW3C,SAASgC,IAAc,CAAC,UAAMW,GAAW3C,SAASiC,KAIxEC,EAAUzC,GAAOmB,EAAiBoB,EAAGC,EAAGlC,EAASgB,GACnD,CACA,OAAOmB,CACT,GAKWY,EAAe,CAC1BC,EACAC,EACAC,EAA0C,SAE1C,MAAMC,EAAEA,EAACC,EAAEA,EAACtC,IAAEA,EAAGC,OAAEA,EAAMsC,cAAEA,EAAarD,QAAEA,EAAOsD,OAAEA,KAAWC,GAASP,EAEjEjD,EAAYc,EAAiBC,EAAKC,EAAQf,EAASqD,GAEnDG,EAAaF,EAAS,SAAWN,EAAMQ,WACvCC,EAAY,CAAEC,QAASH,EAAKG,SAAW,OAAQF,cAC/CG,EAAY,GAAGX,EAAMW,WAAa,kBAAkBT,EAAgB,WAAWA,SAAuB,KAEtGU,EAjKiB,EAAC7D,EAAoCoD,EAA2BC,KACvF,GAAyB,iBAAdrD,EAAwB,CACjC,MAAM8D,EAAW9D,EAAUa,WAAW,UACtC,MAAO,CACLkD,eAAgB1E,EAAayE,EAAWT,EAAID,GAC5CY,WAAY3E,EAAayE,EAAWV,EAAIC,GAE5C,CAEA,OAAI9D,MAAMC,QAAQQ,GACT,CACL+D,eAAgB/D,EAAUP,IAAI,CAACY,EAAGqC,IAAMpC,EAAmBjB,EAAagB,GAAGQ,WAAW,UAAYwC,EAAID,GAAIV,IAC1GsB,WAAYhE,EAAUP,IAAI,CAACY,EAAGqC,IAAMpC,EAAmBjB,EAAagB,GAAGQ,WAAW,UAAYuC,EAAIC,GAAIX,KAIjF,iBAAd1C,EACF,CACL+D,eAAgBvD,EAAoBR,EAAWoD,EAAGC,GAClDW,WAAYxD,EAAoBR,EAAWqD,EAAGD,IAI3C,CAAEW,eAAgBX,EAAGY,WAAYX,IA0IrBY,CAAiBjE,EAAWoD,EAAGC,GAElD,MAAO,IACFG,KACAE,KACAG,EACHP,cAAetD,EACf4D,YACAV,QCzPEgB,EAASC,GAASC,SAAWD,EAE7BE,EAAUC,GAAUF,SAAWE,EAcxBC,EAXS,EAMpBC,EAAsC,CAAA,IAEtCC,EAAmD,CAACxB,EAAOC,IACzDwB,MAAAC,cAACT,EAAAA,IAAWM,KAAkBxB,EAAaC,EAAOC,EAAK,UAEpC0B,GAYVC,EAPU,EACrBL,EAAuC,CAAA,IAEvCC,EAEE,CAACxB,EAAOC,IAAQwB,MAAAC,cAACN,EAAAA,IAAYG,KAAkBxB,EAAaC,EAAOC,EAAK,WAEpD4B,GCrCxB,IAAIC,EAEFA,EADEC,EAAkB,EACRN,EAAMO,KAAK,IAAMC,+CACA,IAApBF,EACGN,EAAMO,KAAK,IAAMC,+CAEjBR,EAAMO,KAAK,IAAMC,+CAO/B/E,QAAQgF,IAAIC,EAAUA,EAAa,gBAAiBC,GACpDlF,QAAQgF,IAAI,WAAYZ,GACxBpE,QAAQgF,IAAI,YAAaN,GACzB1E,QAAQgF,IAAI,aAAcJ,GAE1B,MAAMO,EAAW,KACXC,EAAc,KAEdC,EAA+E,CACnF,CAAC,OAAQ,OACT,CAAC,OAAQ,UACT,CAAC,OAAQ,UACT,CAAC,OAAQ,cACT,CAAC,OAAQ,YACT,CAAC,OAAQ,WACT,CAAC,OAAQ,YACT,CAAC,QAAS,OACV,CAAC,QAAS,UACV,CAAC,QAAS,UACV,CAAC,QAAS,cACV,CAAC,QAAS,YACV,CAAC,QAAS,WACV,CAAC,QAAS,YACV,CAAC,SAAU,OACX,CAAC,SAAU,UACX,CAAC,SAAU,UACX,CAAC,SAAU,cACX,CAAC,SAAU,YACX,CAAC,SAAU,WACX,CAAC,SAAU,YACX,CAAC,gBAAiB,OAClB,CAAC,gBAAiB,UAClB,CAAC,gBAAiB,UAClB,CAAC,eAAgB,OACjB,CAAC,eAAgB,UACjB,CAAC,eAAgB,UACjB,CAAC,eAAgB,OACjB,CAAC,eAAgB,UACjB,CAAC,eAAgB,WAGbC,EAAwF,CAC5F,CAAC,MAAO,QACR,CAAC,MAAO,UACR,CAAC,MAAO,SACR,CAAC,MAAO,cACR,CAAC,MAAO,YACR,CAAC,MAAO,WACR,CAAC,MAAO,YACR,CAAC,SAAU,QACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,cACX,CAAC,SAAU,YACX,CAAC,SAAU,WACX,CAAC,SAAU,YACX,CAAC,SAAU,QACX,CAAC,SAAU,UACX,CAAC,SAAU,SACX,CAAC,SAAU,cACX,CAAC,SAAU,YACX,CAAC,SAAU,WACX,CAAC,SAAU,YACX,CAAC,gBAAiB,QAClB,CAAC,gBAAiB,UAClB,CAAC,gBAAiB,SAClB,CAAC,eAAgB,QACjB,CAAC,eAAgB,UACjB,CAAC,eAAgB,SACjB,CAAC,eAAgB,QACjB,CAAC,eAAgB,UACjB,CAAC,eAAgB,UAGbC,EAAU,UAKVC,EAAQC,EAAOrB,EAAPqB,CAA+B3C,KAC3C4C,UAAW5C,GAAO4C,WAAc5C,GAAO6C,IAAaD,WAAa,IACjEE,OAAQ,sBACRC,aAAc,MACdC,SAAU,EACVC,IAAK,MACLC,QAAS,MACTC,gBAAiB,OACjB,WAAY,CACVA,gBAAiBV,EACjBW,YAAa,MACbC,aAAc,MACdN,aAAc,OAEhB,UAAW,CACTO,OAAQ,EACRP,aAAc,OAEhB,gBAAiB,CACfvC,WAAY,mBAIV+C,EACJ9B,EAAAC,cAAC8B,OAAAA,CAAKC,MAAO,CAAEC,YAAa,cAAeC,gBAAiB,YAAcC,aAAW,oBAAmB,KAIpGC,EACJpC,EAAAC,cAAC8B,OAAAA,CAAKC,MAAO,CAAEC,YAAa,cAAeC,gBAAiB,WAAaC,aAAW,iBAAgB,KAMhGE,EAAoBC,GACpBhC,GAAmB,EAEd,CAAEiC,KAAMD,GAGVA,EAGHE,EAAcH,EAAiB,CAAEI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC3DC,EAAqB,CAAE,QAAS,CAAEC,SAAU,CAAEL,GAAI,UAAWC,GAAI,QAASC,GAAI,aAE9EI,EAAShD,EACb,EAAGiD,OAAMC,YAAiDzE,IACxDwB,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,KAASb,EAAiB,CAAEI,GAAI,KAAOU,UAAU,SAAS3E,IAAKA,EAAKlC,QAAAA,EAAOkF,IAAK,GACxFxB,EAAAC,cAACmD,EAAAA,CAAWD,UAAU,KAAKE,QAAQ,KAAKjC,GAAI,CAAEnC,QAAS,OAAQK,WAAY,WACxE0D,EACAA,EAAKM,cAAc9H,SAAS,OAASsG,EAAWkB,EAAKM,cAAc9H,SAAS,UAAY4G,EAAW,IAEtGpC,EAAAC,cAACmD,EAAAA,CAAWD,UAAU,KAAKE,QAAQ,aAChCJ,KAKTF,EAAOQ,YAAc,SAErB,MAAMC,EAAO,EACXC,UAAS,EACTC,QACAC,OACAC,WACA/B,SAAS,MAQT7B,EAAAC,cAAC4D,EAAAA,CACCC,SAAS,aACTC,YACEN,EACI,CACExE,QAAS,SACTwC,QAAS,UACTiC,QACAM,WAAYhD,EACZM,aAAc,EACdO,UAEF,CAAEmC,WAAYhD,EAASM,aAAc,EAAGO,UAE9CG,MAAOiC,GAENL,GAAUM,YAAcP,GAAQ,IAI/BQ,EAAQ,IACZnE,EAAAC,cAAAD,EAAAoE,SAAA,KACEpE,EAAAC,cAACJ,EAAAA,CACCsD,UAAY5E,GAA8ByB,EAAAC,cAACmD,EAAAA,IAAe7E,EAAO4E,UAAU,OAC3EE,QAAQ,KACRhH,KAAAA,EACAqC,EAAE,OACFC,EAAE,SACF6C,IAAK,GAELxB,EAAAC,cAACJ,EAAAA,CACC6D,MAAO,IACPW,OAAQ,IACRC,GAAI,EACJC,IAAI,EACJjI,QAAAA,EACA6G,UAAU,MACVqB,IAAI,uBACJC,IAAI,mBACJ,gBAEFzE,EAAAC,cAACyE,EAAAA,CAAKC,OAAO,SAASC,KAAK,mBAAmBxD,GAAI,CAAEmD,IAAI,MAAS,iBAChDjE,IAGnBN,EAAAC,cAACmD,EAAAA,CAAWC,QAAQ,QAAQF,UAAU,OAElC,yPAIFnD,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAO,mBACZ,OACDzD,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAO,eAEX,6KAGFzD,EAAAC,cAAC4E,KAAAA,MACD7E,EAAAC,cAAC4E,KAAAA,MACA,uCACD7E,EAAAC,cAACyE,EAAAA,CAAKC,OAAO,SAASC,KAAK,0CAAyC,OAE5D,IAAI,KACT,IACH5E,EAAAC,cAACyE,EAAAA,CAAKC,OAAO,SAASC,KAAK,0CAAyC,QAGnE,yCACD5E,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAQ,eACb,OACDzD,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAQ,gBACb,kDACDzD,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAO,OACZ,iDACDzD,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAO,OACZ,8CACDzD,EAAAC,cAACuD,EAAAA,CAAKC,QAAAA,GAAO,UACZ,iFAKDqB,EAAc5D,EAAO,CAAC3C,EAAuB,CAAA,IACjDyB,EAAAC,cAACE,EAAAA,IAAa5B,EAAOwG,WAAAA,EAAU5B,UAAU,UAAU6B,QAAS,CAAC,GAAK,EAAG,KADnD9D,CAEjB,EAAG+D,WACJA,EAAMC,YAAY,CAChB,kCAAmC,CACjCC,SAAU,WAKVC,EAAOlE,EAAO,CAAC3C,EAAuB,CAAA,IAAOyB,EAAAC,cAACE,EAAAA,IAAa5B,EAAO2E,MAAAA,EAAKC,UAAU,QAA1EjC,CAAoF,CAC/FwC,MAAO,SAGH2B,EAAanE,EAAOrB,EAAPqB,CAAgB,EAAG+D,WACpCA,EAAMC,YAAY,CAChBxB,MAAO,OACPyB,SAAU,OACVG,OAAQ,CAAC,EAAG,EAAG,MAEjBC,cAAc,WAOVC,EAAW,KACf,MAAMhH,EAAMiH,EAAuB,MAC7BC,EAPmB,MACzB,OAASC,GAAWC,EAAS,IAC7B,OAAOC,EAAY,IAAMF,EAAQ,CAAA,GAAK,KAKvBG,GAQf,OANAC,EAAU,KACJvH,EAAIwH,SACNN,KAED,CAAClH,EAAKkH,IAGP1F,EAAAC,cAACJ,EAAAA,CAAQ6D,MAAM,QAAQuC,EAAG,CAAC,EAAG,EAAG,GAAIzE,IAAK,CAAC,EAAG,EAAG,GAAI9C,EAAE,SAASyE,UAAU,OAAO/B,GAAI,CAAE8E,QAAS,QAAU5J,QAAAA,GACxG0D,EAAAC,cAACJ,EAAAA,CAAQnB,EAAE,OAAOC,EAAE,SAASrC,QAAAA,GAC3B0D,EAAAC,cAACkE,SAEHnE,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,aACrBc,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,cAAcC,SAAS,4BACnCnC,EAAgB/F,IAAI,EAAE2D,EAAGC,GAAIX,IAC5BgC,EAAAC,cAACmF,EAAAA,IAAS5C,EAAavH,IAAK+C,EAAGmF,UAAU,MAAM7G,QAAAA,GAC7C0D,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,eAAejF,SAASC,2BAIhCqB,EAAAC,cAACgB,EAAAA,CAAMvC,EAAGA,EAAGC,EAAGA,EAAGyC,GAAIyB,GACrB7C,EAAAC,cAAC8B,OAAAA,KAAMnB,OAKfZ,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,kBACrBc,EAAAC,cAAC8C,EAAAA,CACCC,KAAK,mBACLC,SAAS,uFAEXjD,EAAAC,cAACmF,EAAS/C,EAAiB,CAAEI,GAAI,GAAIE,GAAI,IACvC3C,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,4JAKR3D,EAAAC,cAACgB,EAAAA,CACCvC,EAAG,CAAC,SAAU,OAAQ,SAAU,SAChCC,EAAG,CAAC,SAAU,MAAO,SAAU,UAC/ByC,GAAI,CAAED,UAAW,MAEjBnB,EAAAC,cAAC8B,OAAAA,KAAMnB,KAGXZ,EAAAC,cAACmF,EAAS/C,EAAiB,CAAEI,GAAI,GAAIE,GAAI,IACvC3C,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,mHAIR3D,EAAAC,cAACgB,EAAAA,CACCvC,EAAG,CAAEyH,GAAI,OAAQzD,GAAI,SAAUC,GAAI,SACnChE,EAAG,CAAEwH,GAAI,MAAOzD,GAAI,SAAUC,GAAI,UAClCvB,GAAI,CAAED,UAAW,OAAQ0B,IAEzB7C,EAAAC,cAAC8B,OAAAA,KAAMnB,KAGXZ,EAAAC,cAACmF,EAAS/C,EAAiB,CAAEI,GAAI,GAAIE,GAAI,IACvC3C,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,qOAOR3D,EAAAC,cAACgB,EAAAA,CACC5E,IAAK,EAAC,GAAO,GAAO,GAAM,GAAM,GAEhCqC,EAAG,CAAC,SAAU,SAAU,gBAAiB,gBACzCC,EAAE,SACF6C,IAAK,CAAC,EAAG,EAAG,GACZJ,GAAI,CAAED,UAAW,OAAQ0B,IAEzB7C,EAAAC,cAAC8B,OAAAA,KAAMnB,GACPZ,EAAAC,cAAC8B,OAAAA,KAAMnB,GACPZ,gBAAC+B,OAAAA,KAAMnB,KAGXZ,EAAAC,cAACmF,EAAS/C,EAAiB,CAAEI,GAAI,GAAIE,GAAI,IACvC3C,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,kMAKR3D,EAAAC,cAACgB,EAAAA,CACC5E,IAAK,CAAEoG,IAAI,EAAOC,IAAI,EAAME,IAAI,GAEhClE,EAAG,CAAE+D,GAAI,SAAUC,GAAI,gBAAiBC,GAAI,gBAC5CnB,IAAK,CAAC,EAAG,EAAG,GACZJ,GAAI,CAAED,UAAW,OAAQ0B,IAEzB7C,EAAAC,cAAC8B,OAAAA,KAAMnB,GACPZ,EAAAC,cAAC8B,OAAAA,KAAMnB,GACPZ,EAAAC,cAAC8B,OAAAA,KAAMnB,MAIbZ,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,gBACrBc,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,iBAAiBC,SAAS,4BACtClC,EAAmBhG,IAAI,EAAE4D,EAAGD,GAAIV,IAC/BgC,EAAAC,cAACmF,EAAAA,CAAKlC,MAAAA,KAASV,EAAavH,IAAK+C,EAAG1B,QAAAA,GAClC0D,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,eAAejF,SAASC,kCAIhCqB,EAAAC,cAACgB,EAAAA,CAAMvC,EAAGA,EAAGC,EAAGA,EAAGrC,QAAAA,EAAO8E,GAAIyB,GAC5B7C,EAAAC,cAAC8B,OAAAA,KAAMlB,OAKfb,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,qBACrBc,EAAAC,cAAC8C,EAAAA,CACCC,KAAK,sBACLC,SAAS,sFAEXjD,EAAAC,cAACmF,EAAS/C,EAAiB,CAAEI,GAAI,GAAIE,GAAI,IACvC3C,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,mKAMR3D,EAAAC,cAACgB,EAAAA,CACCvC,EAAG,CAAC,SAAU,OAAQ,SAAU,SAChCC,EAAG,CAAC,SAAU,MAAO,SAAU,UAC/BrC,QAAAA,EACA8E,GAAI,CAAED,UAAW,CAAC,IAAK,IAAK,OAE5BnB,EAAAC,cAAC8B,OAAAA,KAAMlB,KAGXb,EAAAC,cAACmF,EAAS/C,EAAiB,CAAEI,GAAI,GAAIE,GAAI,IACvC3C,EAAAC,cAACuD,EAAAA,CACC3B,OAAO,WACP8B,KAAM,4KAMR3D,EAAAC,cAACgB,EAAAA,CACCvC,EAAG,CAAEyH,GAAI,OAAQzD,GAAI,SAAUC,GAAI,SACnChE,EAAG,CAAEwH,GAAI,MAAOzD,GAAI,SAAUC,GAAI,UAClCrG,QAAAA,EACA8E,GAAI,CAAED,UAAW,CAAC,IAAK,IAAK,OAE5BnB,EAAAC,cAAC8B,OAAAA,KAAMlB,MAIbb,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,kBACrBc,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,8BACbhD,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKxE,EAAE,SAASC,EAAE,UAC1BqB,EAAAC,cAACE,EAAAA,CAAS4E,WAAAA,EAAUC,QAAS,GAC1B,IAAInK,MAAM,IAAIyC,QAAQvC,IAAKiD,GAC1BgC,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKjI,IAAK+C,KAAOqE,EAAiB,CAAEI,GAAI,GAAI0D,GAAI,EAAGzD,GAAI,EAAGC,GAAI,EAAGC,GAAI,KAC7E5C,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,UAClBqB,EAAAC,cAACuD,EAAAA,CACCG,KAAM,sBACtB3F,EAAI,yBASFgC,EAAAC,cAACoF,EAAAA,CAAWnG,UAAU,sBAAsB5C,QAAAA,GAC1C0D,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,6CACbhD,EAAAC,cAACE,EAAAA,CACC+C,MAAAA,EACAxE,EAAE,SACFC,EAAE,SACF4F,GAAI,EACJ6B,IAAI,EACJ1C,MAAM,OACNtC,GAAI,CAAEnC,QAAS,CAAEwD,GAAI,OAAQC,GAAI,QAAU2D,QAAS,KACrD,oDAGDrG,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKxE,EAAE,SAASC,EAAE,SAAS+E,MAAM,OAAOtC,GAAI,CAAEnC,QAAS,CAAEwD,GAAI,OAAQC,GAAI,UACjF1C,EAAAC,cAACE,EAAAA,CACC4E,WAAAA,EACAC,QAAS,CAAC,EAAG,EAAG,GAChB/F,QAAQ,OACRmC,GAAI,CACFsC,MAAO,OACPwC,QAAS,qBACTI,oBAAqB,gBACrBC,iBAAkB,gBAClBC,aAAc,qBACdC,kBAAmB,kHAInBC,aAAc,MACd,YAAa,CAAEC,SAAU,UACzB,UAAW,CAAEA,SAAU,QACvB,YAAa,CAAEA,SAAU,UACzB,WAAY,CAAEA,SAAU,SACxB,YAAa,CAAEA,SAAU,YAG3B3G,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKhE,UAAU,UACvBc,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASwC,UAAU,QACrCnB,EAAAC,cAACuD,EAAAA,CAAKG,KAAM,0DAGhB3D,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKhE,UAAU,QACvBc,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASwC,UAAU,QACrCnB,EAAAC,cAACuD,EAAAA,CACCG,KAAM,4DAMZ3D,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKhE,UAAU,UACvBc,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASwC,UAAU,QACrCnB,EAAAC,cAACuD,EAAAA,CACCG,KAAM,gEAMZ3D,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKhE,UAAU,SACvBc,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASwC,UAAU,QACrCnB,EAAAC,cAACuD,EAAAA,CACCG,KAAM,8DAMZ3D,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKhE,UAAU,UACvBc,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASwC,UAAW,QACtCnB,EAAAC,cAACuD,EAAAA,CAAKG,KAAM,6DAMrBhD,GAAYxE,WAAW,KACtB6D,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,gBACrBc,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,6BACbhD,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKxE,EAAE,SAASC,EAAE,UAC1BqB,EAAAC,cAACI,EAAAA,CAAU0E,WAAAA,EAAUC,QAAS,GAC3B,IAAInK,MAAM,IAAIyC,QAAQvC,IAAKiD,GAE1BgC,EAAAC,cAACI,EAAAA,CAAUpF,IAAK+C,EAAGuE,KAAM,CAAEE,GAAI,GAAI0D,GAAI,EAAGzD,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC1D5C,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,UAClBqB,EAAAC,cAACuD,EAAAA,CACCG,KAAM,kBACxB3F,EAAI,0BAUAgC,EAAAC,cAAC6E,EAAAA,CAAY5F,UAAU,gBACrBc,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,qBACbhD,EAAAC,cAACE,EAAAA,CAAS+C,MAAAA,EAAKxE,EAAE,SAASC,EAAE,UAC1BqB,EAAAC,cAACI,EAAAA,CAAU0E,WAAAA,EAAUC,QAAS,GAC3B,IAAInK,MAAM,IAAIyC,QAAQvC,IAAKiD,GAE1BgC,EAAAC,cAACI,EAAAA,CAAUpF,IAAK+C,EAAGuE,KAAM,CAAEE,GAAI,GAAI0D,GAAI,EAAGzD,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC1D5C,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,UAClBqB,EAAAC,cAACuD,EAAAA,CACCG,KAAM,kBACxB3F,EAAI,0BAUFgC,EAAAC,cAACoF,EAAAA,CAAWnG,UAAU,WAAW5C,QAAAA,GAC/B0D,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,WAAWxE,IAAKA,IAC7BwB,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASrC,QAAAA,EAAOsK,GAAI,CAAC,GAAK,EAAG,IAC/C5G,EAAAC,cAAC8B,OAAAA,KAAMvD,GAAKwH,SAASa,UAAY,GAAGrI,GAAKwH,SAASa,uBAAyB,UAC3E7G,EAAAC,cAACuD,EAAAA,CAAKG,KAAMnF,GAAKwH,SAAS9B,eAG9BlE,EAAAC,cAACoF,EAAAA,CAAWnG,UAAU,qBAAqB5C,QAAAA,GACzC0D,EAAAC,cAAC8C,EAAAA,CAAOC,KAAK,uBAKThD,EAAAC,cAACJ,EAAAA,CAAQvD,QAAAA,EAAOsK,GAAI,CAAC,GAAK,EAAG,IAC3B5G,EAAAC,cAACuD,EAAAA,CAAKG,KAAM,6BAA8B9B,OAAO,aAEjD7B,EAAAC,cAACgB,EAAAA,CAAMvC,EAAE,SAASC,EAAE,SAASrC,QAAAA,EALVwK,KAAM,WAMvB9G,EAAAC,cAAC8B,OAAAA,KAAK,qCC7lBhBgF,EAAa,CACjB,0BACA,kBACA,gBACA,qBACA,aACA,kBACA,YACA,QACA,cAKIC,EAAYC,EAAY,CAC5BC,WAAY,CACVH,WAAYA,EAAWI,KAAK,QAI1BlC,EAAQgC,EAAY,IACrBD,EACHI,WAAY,CACVC,eAAgB,CACdC,eAAgB,CACd,uCAAwC,CACtCP,WAAYA,EAAWI,KAAK,MAE9B,sBAAuB,CACrBJ,WAjBY,CAAC,YAAa,gBAAiB,QAAS,oBAAqB,aAiB/CI,KAAK,KAC/BrE,SAAU,eAOdyE,GAAM,IAERvH,MAAAC,cAACuH,EAAAA,CAAcvC,MAAOA,GACpBjF,MAAAC,cAACwH,QACDzH,MAAAC,cAACuF,EAAAA,OCzCP/J,QAAQgF,IAAI,gBAAiBT,EAAM0H,SAEnC,MAAMH,GAAM,IACHvH,EAAAC,cAAC0H,GAAAA,MCWJC,GAAqB,4BAA4BjH,mFAO1CkH,GAA2B,CAKtC/H,EAAwC,MAExC,IAAIgI,EACJ,IACE,GAAInH,EAAa,EACf,MAAM,IAAIzE,MAAM0L,IAGlBE,EAAoB9H,MAAMO,KAAK,IAAMwH,OAAO,gCAC9C,CAAE,MAAOC,GACPvM,QAAQC,KAAKkM,GACf,CACA,OAAO7H,EAAgE,CAACxB,EAAOC,KAC7E,MAAM+D,KAAEA,KAASzD,GAASP,EACpBkE,EAAqB,iBAATF,GAAqC,iBAATA,EAAoBA,EAAOA,GAAME,IACvEA,GAAIwF,EAAG9B,GAAEA,EAAEzD,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,GAAOL,GAAQ,CAAA,EAU5C,OATAhE,EAAQ,IACHO,EACH2D,GAAIA,GAAMwF,EACV9B,KACAzD,KACAC,KACAC,KACApE,OAGAwB,MAAAC,cAACiI,EAAAA,CAAS3L,SAAUyD,MAAAC,cAACkI,MAAAA,CAAIC,gCAA8B,aACrDpI,MAAAC,cAAC6H,EAAAA,IAAsBhI,KAAkBxB,EAAaC,EAAOC,EAAK,eAM7D6J,GAAqBR,KACrBS,GAAwBT,GAAgC,CAAExL,KAAK,IAC/DkM,GAA2BV,GAAmC,CAAEvL,QAAQ,6JC/CrF,MAAMsL,GAAqB,4BAA4BjH,0FAG1C6H,GAAkB,CAK7B1I,EAAwC,MAExC,IAAI2I,EACJ,IACE,GAAI9H,EAAa,EACf,MAAM,IAAIzE,MAAM0L,IAGlBa,EAAWzI,MAAMO,KAAK,IAAMwH,OAAO,uBACrC,CAAE,MAAOC,GACPvM,QAAQC,KAAKkM,GACf,CAEA,OAAO7H,EAAuD,CAACxB,EAAOC,KACpE,MAAMiE,GAAEA,EAAE0D,GAAEA,EAAEzD,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,EAAEL,KAAEA,KAASzD,GAASP,EACxCmK,EAAa,CAACjG,EAAI0D,EAAIzD,EAAIC,EAAIC,GAAI1E,OAAQhD,GAAUA,SAI1D,OADAqD,EAAQ,IAAKO,EAAMyD,KADjBA,IAASmG,EAAWxL,MAAOhC,GAAUA,IAAUwN,EAAW,IAAMA,EAAW,GAAK,CAAEjG,KAAI0D,KAAIzD,KAAIC,KAAIC,QAGlG5C,MAAAC,cAACiI,EAAAA,CAAS3L,SAAUyD,MAAAC,cAACkI,MAAAA,CAAIQ,uBAAqB,aAC5C3I,MAAAC,cAACwI,EAAAA,IAAa3I,KAAkBxB,EAAaC,EAAOC,EAAK,eAMpD6B,GAAYmI,KACZI,GAAeJ,GAAuB,CAAEnM,KAAK,IAC7CwM,GAAkBL,GAA0B,CAAElM,QAAQ,yHCtCnE,MAAMsL,GAAqB,4BAA4BjH,0FAG1CP,GAAiB,CAK5BN,EAAwC,MAExC,IAAIH,EACJ,IACE,GAAIgB,EAAa,EACf,MAAM,IAAIzE,MAAM0L,IAKhBjI,EAFEgB,GAAc,EAENX,EAAMO,KAAK,IAAMwH,OAAO,uBAIxB/H,EAAMO,KAAK,IAAMwH,OAAO,uBAEtC,CAAE,MAAOC,GACPvM,QAAQC,KAAKkM,GACf,CAEA,OAAO7H,EAAsD,CAACxB,EAAOC,KACnE,MAAMiE,GAAEA,EAAE0D,GAAEA,EAAEzD,GAAEA,EAAEC,GAAEA,EAAEC,GAAEA,EAAEL,KAAEA,KAASzD,GAASP,EACxCmK,EAAa,CAACjG,EAAI0D,EAAIzD,EAAIC,EAAIC,GAAI1E,OAAQhD,GAAUA,SAI1D,OADAqD,EAAQ,IAAKO,EAAMyD,KADjBA,IAASmG,EAAWxL,MAAOhC,GAAUA,IAAUwN,EAAW,IAAMA,EAAW,GAAK,CAAEjG,KAAI0D,KAAIzD,KAAIC,KAAIC,QAGlG5C,EAAAC,cAACiI,EAAAA,CAAS3L,SAAUyD,EAAAC,cAACkI,MAAAA,CAAIQ,uBAAqB,aAC5C3I,EAAAC,cAACN,EAAAA,IAAYG,KAAkBxB,EAAaC,EAAOC,EAAK,cAMnD2B,GAAWC,KACX0I,GAAc1I,GAAsB,CAAE/D,KAAK,IAC3C0M,GAAiB3I,GAAyB,CAAE9D,QAAQ"}