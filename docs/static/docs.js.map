{"version":3,"file":"docs.js","sources":["../Docs.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\n\nimport type { BaseFlexProps } from \"../packages/core/dist\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nexport const FLEXBOX_TAB_TITLE = \"Interactive FlexBox sandbox\";\nexport const FLEXGRID_TAB_TITLE = \"Interactive FlexGrid sandbox\";\nexport const FLEXGRID2_TAB_TITLE = \"Interactive FlexGrid2 sandbox\";\n\n// Code display component with proper styling\nconst DemoCode = ({\n  inline = false,\n  code,\n  children,\n}: {\n  inline?: boolean;\n  code?: string;\n  children?: React.ReactNode;\n}) => {\n  const content = children?.toString() || code || \"\";\n\n  if (inline) {\n    return (\n      <code\n        style={{\n          backgroundColor: \"#f5f5f5\",\n          padding: \"2px 4px\",\n          borderRadius: \"4px\",\n          fontSize: \"0.875rem\",\n          fontFamily: \"Consolas, Monaco, 'Courier New', monospace\",\n          color: \"#24292f\",\n        }}\n      >\n        {content}\n      </code>\n    );\n  }\n\n  return (\n    <pre\n      style={{\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: \"4px\",\n        margin: \"16px 0\",\n        fontSize: \"0.875rem\",\n        fontFamily: \"Consolas, Monaco, 'Courier New', monospace\",\n        padding: \"10px\",\n        overflowX: \"auto\",\n      }}\n    >\n      {content}\n    </pre>\n  );\n};\n\n// Demo container styling\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nconst createDemoInner = (FlexBox: _Any, styled: Function) =>\n  styled(FlexBox)({\n    minHeight: 200,\n    border: \"1.5px solid #e2ebf8\",\n    borderRadius: \"4px\",\n    flexGrow: 1,\n    gap: \"6px\",\n    padding: \"4px\",\n    backgroundColor: \"#fff\",\n    // Remove any potential conflicting styles\n    \"& > span\": {\n      backgroundColor: \"#f5f5f5\",\n      paddingLeft: \"8px\",\n      paddingRight: \"8px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      borderRadius: \"4px\",\n      fontSize: \"1.2em\",\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"40px\",\n      minHeight: \"40px\",\n      // Add border to better visualize alignment\n      border: \"1px solid #ddd\",\n      // Ensure the spans don't interfere with parent flex alignment\n      flexShrink: 0,\n    },\n  });\n\n// FlexGrid demo styling\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nconst createFlexGridDemo = (FlexGrid: _Any, styled: Function) =>\n  styled(FlexGrid)({\n    minHeight: 200,\n    border: \"1.5px solid #e2ebf8\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#fff\",\n    padding: \"4px\",\n    \"& .grid-item\": {\n      backgroundColor: \"#f5f5f5\",\n      padding: \"8px\",\n      borderRadius: \"4px\",\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"60px\",\n      border: \"1px solid #ddd\",\n      textAlign: \"center\",\n    },\n  });\n\n// Version configurations\nconst versions = [\n  { key: \"v5\", label: \"MUI v5\", version: \"5\", packageName: \"@mui-flexy/v5\" },\n  { key: \"v6\", label: \"MUI v6\", version: \"6\", packageName: \"@mui-flexy/v6\" },\n  { key: \"v7\", label: \"MUI v7\", version: \"7\", packageName: \"@mui-flexy/v7\" },\n];\n\n// Shared loading component to avoid visual jumps\nconst LoadingComponent = ({ message }: { message: string }) => (\n  <div\n    style={{\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#fafafa\",\n      zIndex: 9999,\n    }}\n  >\n    <div\n      style={{\n        width: \"60px\",\n        height: \"4px\",\n        backgroundColor: \"#007FFF\",\n        borderRadius: \"2px\",\n        animation: \"loading-bar 1.5s ease-in-out infinite\",\n      }}\n    ></div>\n    <style>{`\n      @keyframes loading-bar {\n        0% { transform: scaleX(0); }\n        50% { transform: scaleX(1); }\n        100% { transform: scaleX(0); }\n      }\n    `}</style>\n  </div>\n);\n\n// Complete alignment options based on the core types\nconst xRowOptions = [\n  { value: \"left\", label: \"left\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"right\", label: \"right\" },\n  { value: \"space-between\", label: \"space-between\" },\n  { value: \"space-around\", label: \"space-around\" },\n  { value: \"space-evenly\", label: \"space-evenly\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\nconst yRowOptions = [\n  { value: \"top\", label: \"top\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"bottom\", label: \"bottom\" },\n  { value: \"stretch\", label: \"stretch\" },\n  { value: \"baseline\", label: \"baseline\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\nconst xColumnOptions = [\n  { value: \"left\", label: \"left\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"right\", label: \"right\" },\n  { value: \"stretch\", label: \"stretch\" },\n  { value: \"baseline\", label: \"baseline\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\nconst yColumnOptions = [\n  { value: \"top\", label: \"top\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"bottom\", label: \"bottom\" },\n  { value: \"space-between\", label: \"space-between\" },\n  { value: \"space-around\", label: \"space-around\" },\n  { value: \"space-evenly\", label: \"space-evenly\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\n// Emojis\nconst rowEmoji = \"üö£\";\nconst columnEmoji = \"üèõ\";\n\n// Global cache for loaded libraries\nconst libraryCache: Record<string, any> = {};\nconst loadingPromises: Record<string, Promise<any> | undefined> = {};\n\n// Lazy loading component for each version\nconst VersionContent = ({ version }: { version: string }) => {\n  const [libraries, setLibraries] = useState<any>(libraryCache[version] || null);\n  const [loading, setLoading] = useState(!libraryCache[version]);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadLibraries = async () => {\n      // If libraries are already cached, use them immediately\n      if (libraryCache[version]) {\n        setLibraries(libraryCache[version]);\n        setLoading(false);\n        return;\n      }\n\n      // If there's already a loading promise for this version, wait for it\n      if (loadingPromises[version]) {\n        try {\n          const cachedLibraries = await loadingPromises[version];\n          setLibraries(cachedLibraries);\n          setLoading(false);\n          return;\n        } catch (err) {\n          setError(`Failed to load libraries for ${version}`);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Track loading start time for minimum display duration\n      const loadingStartTime = Date.now();\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Create loading promise and store it\n        const loadingPromise = (async () => {\n          // Load all required libraries for this version\n          let Styles;\n          const [Material, FlexComponents] = await Promise.all([\n            import(`@mui/material_${version}`),\n            import(`@mui-flexy/${version}`),\n          ]);\n\n          // Handle different styling approaches per version\n          if (version === \"v5\") {\n            const StylesModule = await import(`@mui/styles_${version}`);\n            Styles = {\n              ...(StylesModule.default || StylesModule),\n              createTheme: Material.createTheme || Material.default?.createTheme,\n              responsiveFontSizes:\n                (StylesModule.default || StylesModule).responsiveFontSizes || ((theme: any) => theme),\n              ThemeProvider: (StylesModule.default || StylesModule).ThemeProvider,\n              CssBaseline: Material.CssBaseline || Material.default?.CssBaseline,\n            };\n          } else {\n            // v6 and v7 use @mui/system for styling\n            const SystemModule = await import(`@mui/system_${version}`);\n            const MaterialModule = Material.default || Material;\n            const SystemModuleResolved = SystemModule.default || SystemModule;\n\n            // Create a simple styled function that just applies sx props\n            const simpleStyled = (Component: any) => (styles: any) => {\n              return (props: any) =>\n                React.createElement(Component, {\n                  ...props,\n                  sx: { ...styles, ...props.sx },\n                });\n            };\n\n            Styles = {\n              styled: simpleStyled,\n              createTheme: MaterialModule.createTheme,\n              responsiveFontSizes: (theme: any) => theme, // No responsiveFontSizes in system\n              ThemeProvider: SystemModuleResolved.ThemeProvider,\n              CssBaseline: MaterialModule.CssBaseline,\n            };\n          }\n\n          const librariesData: any = {\n            Material: Material.default || Material,\n            Styles,\n            FlexBox: FlexComponents.FlexBox,\n            FlexGrid: FlexComponents.FlexGrid,\n          };\n\n          // Only add FlexGrid2 for v6\n          if (version === \"v6\") {\n            librariesData.FlexGrid2 = FlexComponents.FlexGrid2;\n          }\n\n          // Cache the libraries\n          libraryCache[version] = librariesData;\n          return librariesData;\n        })();\n\n        loadingPromises[version] = loadingPromise;\n\n        const librariesData = await loadingPromise;\n        setLibraries(librariesData);\n\n        // Ensure loading is displayed for at least 500ms\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } catch (err) {\n        console.error(`Error loading libraries for ${version}:`, err);\n        setError(`Failed to load libraries for ${version}`);\n\n        // Ensure loading is displayed for at least 500ms even on error\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } finally {\n        setLoading(false);\n        // Clean up loading promise\n        delete loadingPromises[version];\n      }\n    };\n\n    loadLibraries();\n  }, [version]);\n\n  if (loading) {\n    return <LoadingComponent message=\"Loading modules...\" />;\n  }\n\n  if (error) {\n    return (\n      <div\n        style={{\n          minHeight: \"80vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          backgroundColor: \"#fafafa\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"24px\",\n            textAlign: \"center\",\n            backgroundColor: \"white\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\n            maxWidth: \"400px\",\n            width: \"90%\",\n            border: \"1px solid #ffcdd2\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"16px\",\n              color: \"#d32f2f\",\n              fontWeight: 500,\n              marginBottom: \"8px\",\n            }}\n          >\n            Error loading {version} libraries\n          </div>\n          <div\n            style={{\n              fontSize: \"14px\",\n              color: \"#666\",\n              fontWeight: 400,\n            }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!libraries) {\n    return (\n      <div\n        style={{\n          minHeight: \"80vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          backgroundColor: \"#fafafa\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"24px\",\n            textAlign: \"center\",\n            backgroundColor: \"white\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\n            maxWidth: \"300px\",\n            width: \"90%\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"14px\",\n              color: \"#666\",\n              fontWeight: 400,\n            }}\n          >\n            Libraries not loaded\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return <VersionApp version={version} libraries={libraries} />;\n};\n\n// Main version-specific app component\nconst VersionApp = ({ version, libraries }: { version: string; libraries: any }) => {\n  const { Material, Styles, FlexBox, FlexGrid, FlexGrid2 = null } = libraries;\n\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [direction, setDirection] = useState<\"row\" | \"column\">(\"row\");\n  const [flexBoxProps, setFlexBoxProps] = useState<BaseFlexProps>({\n    x: \"center\",\n    y: \"center\",\n    row: true,\n    column: false,\n    nowrap: false,\n    reverse: false,\n  });\n\n  const [flexGridProps, setFlexGridProps] = useState({\n    rows: 2,\n    columns: 3,\n    spacing: 2,\n    useTemplate: false,\n  });\n\n  const [flexGridItemProps, setFlexGridItemProps] = useState<BaseFlexProps>({\n    x: \"left\",\n    y: \"stretch\",\n  });\n\n  // Update flexBoxProps when direction changes\n  useEffect(() => {\n    setFlexBoxProps((prev) => ({\n      ...prev,\n      row: direction === \"row\",\n      column: direction === \"column\",\n    }));\n  }, [direction]);\n\n  // Handle tab switching when version changes\n  useEffect(() => {\n    // Prevent infinite loops by checking if the tab switch is actually necessary\n    if (selectedTab === 2 && version !== \"v6\") {\n      // If user is on FlexGrid2 tab (index 2) and switches to v5/v7, go to FlexGrid tab (index 1)\n      console.log(`Switching from FlexGrid2 tab to FlexGrid tab for ${version}`);\n      setSelectedTab(1);\n    } else if (selectedTab === 1 && version === \"v6\") {\n      // If user is on FlexGrid tab (index 1) and switches to v6, go to FlexGrid2 tab (index 2)\n      console.log(`Switching from FlexGrid tab to FlexGrid2 tab for ${version}`);\n      setSelectedTab(2);\n    }\n  }, [version]); // Only run when version changes, not when selectedTab changes\n\n  // Determine current options based on direction\n  const isColumn = direction === \"column\";\n  const xOptions = isColumn ? xColumnOptions : xRowOptions;\n  const yOptions = isColumn ? yColumnOptions : yRowOptions;\n\n  const currentVersion = versions.find((v) => v.key === version)!;\n\n  // Create styled components for this version (memoized to prevent re-creation on each render)\n  const FlexBoxInner = useMemo(() => createDemoInner(FlexBox, Styles.styled), [FlexBox, Styles.styled]);\n  const FlexGridDemo = useMemo(() => createFlexGridDemo(FlexGrid, Styles.styled), [FlexGrid, Styles.styled]);\n  const FlexGrid2Demo = useMemo(\n    () => (version === \"v6\" && FlexGrid2 ? createFlexGridDemo(FlexGrid2, Styles.styled) : null),\n    [version, FlexGrid2, Styles.styled],\n  );\n\n  const generateFlexBoxCode = () => {\n    const propsArray = [];\n    if (flexBoxProps.x !== \"center\") propsArray.push(`x=\"${flexBoxProps.x}\"`);\n    if (flexBoxProps.y !== \"center\") propsArray.push(`y=\"${flexBoxProps.y}\"`);\n    if (flexBoxProps.row) propsArray.push(\"row\");\n    if (flexBoxProps.column) propsArray.push(\"column\");\n    if (flexBoxProps.nowrap) propsArray.push(\"nowrap\");\n    if (flexBoxProps.reverse) propsArray.push(\"reverse\");\n\n    const propsString = propsArray.length > 0 ? ` ${propsArray.join(\" \")}` : \"\";\n    return `<FlexBox${propsString}>\\n  <span>${isColumn ? columnEmoji : rowEmoji}</span>\\n  <span>${isColumn ? columnEmoji : rowEmoji}</span>\\n  <span>${isColumn ? columnEmoji : rowEmoji}</span>\\n  <span>${isColumn ? columnEmoji : \"üö§\"}</span>\\n</FlexBox>`;\n  };\n\n  const generateFlexGridCode = () => {\n    const gridComponent = selectedTab === 2 ? \"FlexGrid2\" : \"FlexGrid\";\n    const containerProps = flexGridProps.useTemplate\n      ? `sx={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\", gridGap: ${flexGridProps.spacing} }}`\n      : `container spacing={${flexGridProps.spacing}}`;\n\n    const baseItemProps = selectedTab === 2 || (selectedTab === 1 && version === \"v7\") ? `size={4}` : `item xs={4}`;\n\n    // Add x and y props to the item props\n    const itemPropsArray = [baseItemProps];\n    if (flexGridItemProps.x !== \"left\") itemPropsArray.push(`x=\"${flexGridItemProps.x}\"`);\n    if (flexGridItemProps.y !== \"stretch\") itemPropsArray.push(`y=\"${flexGridItemProps.y}\"`);\n    const itemProps = itemPropsArray.join(\" \");\n\n    return `<${gridComponent} ${containerProps}>\n  <${gridComponent} ${itemProps}>\n    <div className=\"grid-item\">Grid 1</div>\n  </${gridComponent}>\n  <${gridComponent} ${itemProps}>\n    <div className=\"grid-item\">Grid 2</div>\n  </${gridComponent}>\n  <${gridComponent} ${itemProps}>\n    <div className=\"grid-item\">Grid 3</div>\n  </${gridComponent}>\n</${gridComponent}>`;\n  };\n\n  const renderFlexGridItems = () => {\n    const totalItems = flexGridProps.rows * flexGridProps.columns;\n    const itemSize = Math.floor(12 / flexGridProps.columns);\n\n    return Array.from({ length: totalItems }, (_, i) => {\n      // For v6 and FlexGrid2 tab (index 2)\n      if (version === \"v6\" && selectedTab === 2 && FlexGrid2Demo) {\n        return (\n          <FlexGrid2Demo key={i} size={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGrid2Demo>\n        );\n      }\n      // For v7 and FlexGrid tab (index 1) - uses new Grid2 API with size prop\n      else if (version === \"v7\" && selectedTab === 1) {\n        return (\n          <FlexGridDemo key={i} size={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGridDemo>\n        );\n      }\n      // For v5 and FlexGrid tab (index 1) - uses legacy Grid API with item and xs props\n      else if (version === \"v5\" && selectedTab === 1) {\n        return (\n          <FlexGridDemo key={i} item xs={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGridDemo>\n        );\n      }\n      // Fallback - use v5 style for backwards compatibility\n      else {\n        return (\n          <FlexGridDemo key={i} item xs={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGridDemo>\n        );\n      }\n    });\n  };\n\n  // Create theme for this version\n  const theme = Styles.responsiveFontSizes(\n    Styles.createTheme({\n      palette: {\n        primary: {\n          main: \"#007FFF\",\n        },\n      },\n    }),\n  );\n\n  return (\n    <Styles.ThemeProvider theme={theme}>\n      <Styles.CssBaseline />\n\n      {/* Main content */}\n      <Material.Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Material.Box display=\"flex\" flexDirection=\"column\" gap={4}>\n          {/* Title and Description */}\n          <Material.Box>\n            <Material.Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n              <Material.Box\n                component=\"img\"\n                src=\"apple-touch-icon.png\"\n                alt=\"mui-flexy logo\"\n                sx={{ width: 100, height: 100 }}\n              />\n              <Material.Typography variant=\"h4\" component=\"h1\">\n                {currentVersion.label} + mui-flexy\n              </Material.Typography>\n            </Material.Box>\n            <Material.Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              Compatible with @mui/material v{currentVersion.version}\n            </Material.Typography>\n            <Material.Typography variant=\"body1\" component=\"div\" sx={{ mt: 2 }}>\n              mui-flexy for MUI is a component wrapper for flexbox styles that allows you to easily align and distribute\n              flexy items in a space in a way that doesn't make you want to pull your hair out trying to remember\n              whether to use <DemoCode inline>justify-content</DemoCode> or <DemoCode inline>align-items</DemoCode>.\n              Using a simple and consistent x, y coordinate system, you can stop worrying about the CSS working group's\n              choices and get on with your life of centering divs.\n              <br />\n              <br />\n              Simply use <DemoCode inline>&lt;FlexBox /&gt;</DemoCode> or{\" \"}\n              <DemoCode inline>{`<${version === \"v6\" ? \"FlexGrid2\" : \"FlexGrid\"} />`}</DemoCode> as you would Box or\n              Grid. The default axis is <DemoCode inline>row</DemoCode>, but for good hygiene, you might want to set{\" \"}\n              <DemoCode inline>row</DemoCode> anyway. If you want a column, just pass a{\" \"}\n              <DemoCode inline>column</DemoCode> prop.\n            </Material.Typography>\n          </Material.Box>\n\n          {/* Tab Navigation */}\n          <Material.Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Material.Tabs\n              value={selectedTab}\n              onChange={(_: any, newValue: any) => setSelectedTab(newValue)}\n              role=\"tablist\"\n            >\n              <Material.Tab label=\"FlexBox\" role=\"tab\" />\n              <Material.Tab label=\"FlexGrid\" role=\"tab\" sx={{ display: version === \"v6\" ? \"none\" : \"flex\" }} />\n              <Material.Tab label=\"FlexGrid2\" role=\"tab\" sx={{ display: version === \"v6\" ? \"flex\" : \"none\" }} />\n            </Material.Tabs>\n          </Material.Box>\n\n          {selectedTab === 0 && (\n            <Material.Paper elevation={2} sx={{ p: 3 }}>\n              <Material.Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                {FLEXBOX_TAB_TITLE}\n              </Material.Typography>\n\n              {/* FlexBox Controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={3} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>X alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexBoxProps.x}\n                      label=\"X alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexBoxProps((prev) => ({\n                          ...prev,\n                          x: e.target.value as\n                            | \"left\"\n                            | \"right\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {xOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Y alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexBoxProps.y}\n                      label=\"Y alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexBoxProps((prev) => ({\n                          ...prev,\n                          y: e.target.value as\n                            | \"top\"\n                            | \"bottom\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {yOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel\n                      sx={{\n                        fontSize: \"0.875rem\",\n                        color: \"rgba(0, 0, 0, 0.6)\",\n                        pointerEvents: \"none\",\n                        zIndex: 1,\n                        backgroundColor: \"transparent\",\n                      }}\n                    >\n                      Direction\n                    </Material.InputLabel>\n                    <Material.Box sx={{ display: \"flex\", gap: 0.5, alignItems: \"center\", height: 32, mt: 0 }}>\n                      <Material.FormControlLabel\n                        control={\n                          <Material.Radio\n                            size=\"small\"\n                            checked={direction === \"row\"}\n                            onChange={() => {\n                              console.log(\"Row radio clicked\");\n                              setDirection(\"row\");\n                            }}\n                            value=\"row\"\n                          />\n                        }\n                        label=\"row\"\n                        sx={{\n                          \"& .MuiFormControlLabel-label\": {\n                            fontSize: \"0.875rem\",\n                          },\n                          margin: 0,\n                        }}\n                      />\n                      <Material.FormControlLabel\n                        control={\n                          <Material.Radio\n                            size=\"small\"\n                            checked={direction === \"column\"}\n                            onChange={() => {\n                              console.log(\"Column radio clicked\");\n                              setDirection(\"column\");\n                            }}\n                            value=\"column\"\n                          />\n                        }\n                        label=\"column\"\n                        sx={{\n                          \"& .MuiFormControlLabel-label\": {\n                            fontSize: \"0.875rem\",\n                          },\n                          margin: 0,\n                        }}\n                      />\n                    </Material.Box>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={Boolean(flexBoxProps.nowrap)}\n                        onChange={(e: any) => setFlexBoxProps((prev) => ({ ...prev, nowrap: e.target.checked }))}\n                      />\n                    }\n                    label=\"nowrap\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={Boolean(flexBoxProps.reverse)}\n                        onChange={(e: any) => setFlexBoxProps((prev) => ({ ...prev, reverse: e.target.checked }))}\n                      />\n                    }\n                    label=\"reverse\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n              </Material.Box>\n\n              {/* FlexBox Demo */}\n              <DemoCode code={generateFlexBoxCode()} />\n\n              <FlexBoxInner\n                data-testid=\"demo-flexbox\"\n                x={flexBoxProps.x}\n                y={flexBoxProps.y}\n                row={flexBoxProps.row}\n                column={flexBoxProps.column}\n                nowrap={flexBoxProps.nowrap}\n                reverse={flexBoxProps.reverse}\n              >\n                <span>{isColumn ? columnEmoji : rowEmoji}</span>\n                <span>{isColumn ? columnEmoji : rowEmoji}</span>\n                <span>{isColumn ? columnEmoji : rowEmoji}</span>\n                <span>{isColumn ? columnEmoji : \"üö§\"}</span>\n              </FlexBoxInner>\n            </Material.Paper>\n          )}\n\n          {selectedTab === 1 && version !== \"v6\" && (\n            <Material.Paper elevation={2} sx={{ p: 3 }}>\n              <Material.Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                {FLEXGRID_TAB_TITLE}\n              </Material.Typography>\n\n              {/* FlexGrid Controls */}\n              {/* First row: Basic grid controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={2} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Rows</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.rows}\n                      label=\"Rows\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, rows: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Columns</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.columns}\n                      label=\"Columns\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, columns: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Spacing</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.spacing}\n                      label=\"Spacing\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, spacing: Number(e.target.value) }))}\n                    >\n                      {[0, 1, 2, 3, 4, 5].map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={flexGridProps.useTemplate}\n                        onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, useTemplate: e.target.checked }))}\n                      />\n                    }\n                    label=\"Use grid template\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n              </Material.Box>\n\n              {/* Second row: Item alignment controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={3} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>X alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.x}\n                      label=\"X alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          x: e.target.value as\n                            | \"left\"\n                            | \"right\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {xRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Y alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.y}\n                      label=\"Y alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          y: e.target.value as\n                            | \"top\"\n                            | \"bottom\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {yRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n              </Material.Box>\n\n              {/* FlexGrid Demo */}\n              <DemoCode code={generateFlexGridCode()} />\n\n              {flexGridProps.useTemplate ? (\n                <FlexGridDemo\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n                    gridGap: flexGridProps.spacing,\n                  }}\n                >\n                  {renderFlexGridItems()}\n                </FlexGridDemo>\n              ) : (\n                <FlexGridDemo container spacing={flexGridProps.spacing}>\n                  {renderFlexGridItems()}\n                </FlexGridDemo>\n              )}\n            </Material.Paper>\n          )}\n\n          {selectedTab === 2 && version === \"v6\" && FlexGrid2Demo && (\n            <Material.Paper elevation={2} sx={{ p: 3 }}>\n              <Material.Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                {FLEXGRID2_TAB_TITLE}\n              </Material.Typography>\n\n              {/* FlexGrid2 Controls */}\n              {/* First row: Basic grid controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={2} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Rows</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.rows}\n                      label=\"Rows\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, rows: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Columns</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.columns}\n                      label=\"Columns\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, columns: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Spacing</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.spacing}\n                      label=\"Spacing\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, spacing: Number(e.target.value) }))}\n                    >\n                      {[0, 1, 2, 3, 4, 5].map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={flexGridProps.useTemplate}\n                        onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, useTemplate: e.target.checked }))}\n                      />\n                    }\n                    label=\"Use grid template\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n              </Material.Box>\n\n              {/* Second row: Item alignment controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={3} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>X alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.x}\n                      label=\"X alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          x: e.target.value as\n                            | \"left\"\n                            | \"right\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {xRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Y alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.y}\n                      label=\"Y alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          y: e.target.value as\n                            | \"top\"\n                            | \"bottom\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {yRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n              </Material.Box>\n\n              {/* FlexGrid2 Demo */}\n              <DemoCode code={generateFlexGridCode()} />\n\n              {flexGridProps.useTemplate ? (\n                <FlexGrid2Demo\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n                    gridGap: flexGridProps.spacing,\n                  }}\n                >\n                  {renderFlexGridItems()}\n                </FlexGrid2Demo>\n              ) : (\n                <FlexGrid2Demo container spacing={flexGridProps.spacing}>\n                  {renderFlexGridItems()}\n                </FlexGrid2Demo>\n              )}\n            </Material.Paper>\n          )}\n        </Material.Box>\n      </Material.Container>\n    </Styles.ThemeProvider>\n  );\n};\n\n// Preload all versions function\nconst preloadAllVersions = async (): Promise<void> => {\n  const versionsList = [\"v5\", \"v6\", \"v7\"];\n\n  // Start loading all versions simultaneously\n  const preloadPromises = versionsList.map(async (version) => {\n    // Skip if already cached\n    if (libraryCache[version]) return libraryCache[version];\n\n    // Skip if already loading\n    if (loadingPromises[version]) return loadingPromises[version];\n\n    try {\n      // Load all required libraries for this version\n      let Styles;\n      const [Material, FlexComponents] = await Promise.all([\n        import(`@mui/material_${version}`),\n        import(`@mui-flexy/${version}`),\n      ]);\n\n      // Handle different styling approaches per version\n      if (version === \"v5\") {\n        const StylesModule = await import(`@mui/styles_${version}`);\n        Styles = {\n          ...(StylesModule.default || StylesModule),\n          createTheme: Material.createTheme || Material.default?.createTheme,\n          responsiveFontSizes: (StylesModule.default || StylesModule).responsiveFontSizes || ((theme: any) => theme),\n          ThemeProvider: (StylesModule.default || StylesModule).ThemeProvider,\n          CssBaseline: Material.CssBaseline || Material.default?.CssBaseline,\n        };\n      } else {\n        // v6 and v7 use @mui/system for styling\n        const SystemModule = await import(`@mui/system_${version}`);\n        const MaterialModule = Material.default || Material;\n        const SystemModuleResolved = SystemModule.default || SystemModule;\n\n        // Create a simple styled function that just applies sx props\n        const simpleStyled = (Component: any) => (styles: any) => {\n          return (props: any) =>\n            React.createElement(Component, {\n              ...props,\n              sx: { ...styles, ...props.sx },\n            });\n        };\n\n        Styles = {\n          styled: simpleStyled,\n          createTheme: MaterialModule.createTheme,\n          responsiveFontSizes: (theme: any) => theme,\n          ThemeProvider: SystemModuleResolved.ThemeProvider,\n          CssBaseline: MaterialModule.CssBaseline,\n        };\n      }\n\n      const librariesData: any = {\n        Material: Material.default || Material,\n        Styles,\n        FlexBox: FlexComponents.FlexBox,\n        FlexGrid: FlexComponents.FlexGrid,\n      };\n\n      // Only add FlexGrid2 for v6\n      if (version === \"v6\") {\n        librariesData.FlexGrid2 = FlexComponents.FlexGrid2;\n      }\n\n      // Cache the libraries\n      libraryCache[version] = librariesData;\n      return librariesData;\n    } catch (err) {\n      console.error(`Error preloading libraries for ${version}:`, err);\n      throw err;\n    }\n  });\n\n  // Wait for all versions to load\n  try {\n    await Promise.all(preloadPromises);\n  } catch (err) {\n    console.error(\"Error preloading some versions:\", err);\n  }\n};\n\nconst App = () => {\n  const [selectedVersion, setSelectedVersion] = useState(\"v7\");\n  const [headerLibraries, setHeaderLibraries] = useState<any>(null);\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    const loadAppWithPreloading = async () => {\n      // Track loading start time for minimum display duration\n      const loadingStartTime = Date.now();\n\n      try {\n        // Load header libraries (v7 Material-UI for the header)\n        const [Material, System] = await Promise.all([import(\"@mui/material_v7\"), import(\"@mui/system_v7\")]);\n\n        setHeaderLibraries({\n          Material: Material.default || Material,\n          Styles: {\n            createTheme: Material.createTheme,\n            ThemeProvider: System.ThemeProvider,\n          },\n        });\n\n        // Start preloading all versions in parallel (this will continue in background)\n        preloadAllVersions();\n\n        // Ensure loading is displayed for at least 500ms\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } catch (err) {\n        console.error(\"Error loading application:\", err);\n\n        // Ensure loading is displayed for at least 500ms even on error\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } finally {\n        setAppLoading(false);\n      }\n    };\n\n    loadAppWithPreloading();\n  }, []);\n\n  if (appLoading || !headerLibraries) {\n    return <LoadingComponent message=\"Loading application...\" />;\n  }\n\n  const { Material, Styles } = headerLibraries;\n\n  return (\n    <div>\n      {/* Header with version tabs */}\n      <Material.AppBar\n        position=\"sticky\"\n        color=\"default\"\n        elevation={1}\n        data-testid=\"app-bar\"\n        sx={{ top: 0, zIndex: 1100 }}\n      >\n        <Material.Toolbar>\n          <Material.Typography component=\"h2\" variant=\"h6\" sx={{ flexGrow: 1 }}>\n            mui-flexy documentation\n          </Material.Typography>\n          {versions.map((version) => (\n            <Material.Button\n              key={version.key}\n              color={selectedVersion === version.key ? \"primary\" : \"inherit\"}\n              onClick={() => setSelectedVersion(version.key)}\n              sx={{\n                mx: 0.5,\n                fontWeight: selectedVersion === version.key ? \"bold\" : \"normal\",\n              }}\n            >\n              {version.label}\n            </Material.Button>\n          ))}\n        </Material.Toolbar>\n      </Material.AppBar>\n\n      {/* Version-specific content */}\n      <VersionContent version={selectedVersion} />\n    </div>\n  );\n};\n\nexport default App;\n"],"names":["FLEXBOX_TAB_TITLE","FLEXGRID_TAB_TITLE","FLEXGRID2_TAB_TITLE","DemoCode","inline","code","children","content","toString","_jsx","style","backgroundColor","padding","borderRadius","fontSize","fontFamily","color","pre","margin","overflowX","createDemoInner","FlexBox","styled","minHeight","border","flexGrow","gap","paddingLeft","paddingRight","paddingTop","paddingBottom","display","alignItems","justifyContent","minWidth","flexShrink","createFlexGridDemo","FlexGrid","textAlign","versions","key","label","version","packageName","LoadingComponent","message","_jsxs","div","position","top","left","width","height","zIndex","animation","xRowOptions","value","yRowOptions","xColumnOptions","yColumnOptions","rowEmoji","columnEmoji","libraryCache","loadingPromises","VersionContent","useState","libraries","setLibraries","loading","setLoading","error","setError","useEffect","loadLibraries","cachedLibraries","loadingStartTime","loadingPromise","librariesData","loadingDuration","minLoadingTime","err","Date","now","Styles","Material","FlexComponents","StylesModule","SystemModule","MaterialModule","SystemModuleResolved","simpleStyled","Promise","all","default","createTheme","responsiveFontSizes","theme","ThemeProvider","CssBaseline","Component","styles","props","React","createElement","sx","FlexGrid2","resolve","setTimeout","console","boxShadow","maxWidth","fontWeight","marginBottom","VersionApp","selectedTab","setSelectedTab","direction","setDirection","x","y","row","column","nowrap","reverse","flexBoxProps","setFlexBoxProps","rows","columns","spacing","useTemplate","flexGridProps","setFlexGridProps","flexGridItemProps","setFlexGridItemProps","prev","log","isColumn","xOptions","yOptions","currentVersion","find","v","FlexBoxInner","useMemo","FlexGridDemo","FlexGrid2Demo","generateFlexBoxCode","propsArray","push","propsString","length","join","generateFlexGridCode","gridComponent","containerProps","baseItemProps","itemPropsArray","itemProps","renderFlexGridItems","totalItems","itemSize","Math","floor","Array","from","_","i","size","className","item","xs","palette","primary","main","Container","py","Box","flexDirection","mb","component","src","alt","Typography","variant","gutterBottom","mt","br","borderBottom","borderColor","Tabs","onChange","newValue","role","Tab","Paper","elevation","p","flexWrap","FormControl","fullWidth","InputLabel","Select","e","target","map","option","MenuItem","dense","pointerEvents","FormControlLabel","control","Radio","checked","Switch","Boolean","data-testid","span","Number","num","gridTemplateColumns","gridGap","container","preloadAllVersions","versionsList","preloadPromises","App","selectedVersion","setSelectedVersion","headerLibraries","setHeaderLibraries","appLoading","setAppLoading","loadAppWithPreloading","System","AppBar","Toolbar","Button","onClick","mx"],"mappings":"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"}