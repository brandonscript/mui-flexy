{"version":3,"file":"docs.js","sources":["../Docs.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\n\nimport type { BaseFlexProps } from \"../packages/core/dist\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nexport const FLEXBOX_TAB_TITLE = \"Interactive FlexBox sandbox\";\nexport const FLEXGRID_TAB_TITLE = \"Interactive FlexGrid sandbox\";\nexport const FLEXGRID2_TAB_TITLE = \"Interactive FlexGrid2 sandbox\";\n\n// Code display component with proper styling\nconst DemoCode = ({\n  inline = false,\n  code,\n  children,\n}: {\n  inline?: boolean;\n  code?: string;\n  children?: React.ReactNode;\n}) => {\n  const content = children?.toString() || code || \"\";\n\n  if (inline) {\n    return (\n      <code\n        style={{\n          backgroundColor: \"#f5f5f5\",\n          padding: \"2px 4px\",\n          borderRadius: \"4px\",\n          fontSize: \"0.875rem\",\n          fontFamily: \"Consolas, Monaco, 'Courier New', monospace\",\n          color: \"#24292f\",\n        }}\n      >\n        {content}\n      </code>\n    );\n  }\n\n  return (\n    <pre\n      style={{\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: \"4px\",\n        margin: \"16px 0\",\n        fontSize: \"0.875rem\",\n        fontFamily: \"Consolas, Monaco, 'Courier New', monospace\",\n        padding: \"10px\",\n        overflowX: \"auto\",\n      }}\n    >\n      {content}\n    </pre>\n  );\n};\n\n// Demo container styling\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nconst createDemoInner = (FlexBox: _Any, styled: Function) =>\n  styled(FlexBox)({\n    minHeight: 200,\n    border: \"1.5px solid #e2ebf8\",\n    borderRadius: \"4px\",\n    flexGrow: 1,\n    gap: \"6px\",\n    padding: \"4px\",\n    backgroundColor: \"#fff\",\n    // Remove any potential conflicting styles\n    \"& > span\": {\n      backgroundColor: \"#f5f5f5\",\n      paddingLeft: \"8px\",\n      paddingRight: \"8px\",\n      paddingTop: \"4px\",\n      paddingBottom: \"4px\",\n      borderRadius: \"4px\",\n      fontSize: \"1.2em\",\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"40px\",\n      minHeight: \"40px\",\n      // Add border to better visualize alignment\n      border: \"1px solid #ddd\",\n      // Ensure the spans don't interfere with parent flex alignment\n      flexShrink: 0,\n    },\n  });\n\n// FlexGrid demo styling\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nconst createFlexGridDemo = (FlexGrid: _Any, styled: Function) =>\n  styled(FlexGrid)({\n    minHeight: 200,\n    border: \"1.5px solid #e2ebf8\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#fff\",\n    padding: \"4px\",\n    \"& .grid-item\": {\n      backgroundColor: \"#f5f5f5\",\n      padding: \"8px\",\n      borderRadius: \"4px\",\n      fontSize: \"0.875rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"60px\",\n      border: \"1px solid #ddd\",\n      textAlign: \"center\",\n    },\n  });\n\n// Version configurations\nconst versions = [\n  { key: \"v5\", label: \"MUI v5\", version: \"5\", packageName: \"@mui-flexy/v5\" },\n  { key: \"v6\", label: \"MUI v6\", version: \"6\", packageName: \"@mui-flexy/v6\" },\n  { key: \"v7\", label: \"MUI v7\", version: \"7\", packageName: \"@mui-flexy/v7\" },\n];\n\n// Shared loading component to avoid visual jumps\nconst LoadingComponent = ({ message }: { message: string }) => (\n  <div\n    style={{\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#fafafa\",\n      zIndex: 9999,\n    }}\n  >\n    <div\n      style={{\n        width: \"60px\",\n        height: \"4px\",\n        backgroundColor: \"#007FFF\",\n        borderRadius: \"2px\",\n        animation: \"loading-bar 1.5s ease-in-out infinite\",\n      }}\n    ></div>\n    <style>{`\n      @keyframes loading-bar {\n        0% { transform: scaleX(0); }\n        50% { transform: scaleX(1); }\n        100% { transform: scaleX(0); }\n      }\n    `}</style>\n  </div>\n);\n\n// Complete alignment options based on the core types\nconst xRowOptions = [\n  { value: \"left\", label: \"left\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"right\", label: \"right\" },\n  { value: \"space-between\", label: \"space-between\" },\n  { value: \"space-around\", label: \"space-around\" },\n  { value: \"space-evenly\", label: \"space-evenly\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\nconst yRowOptions = [\n  { value: \"top\", label: \"top\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"bottom\", label: \"bottom\" },\n  { value: \"stretch\", label: \"stretch\" },\n  { value: \"baseline\", label: \"baseline\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\nconst xColumnOptions = [\n  { value: \"left\", label: \"left\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"right\", label: \"right\" },\n  { value: \"stretch\", label: \"stretch\" },\n  { value: \"baseline\", label: \"baseline\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\nconst yColumnOptions = [\n  { value: \"top\", label: \"top\" },\n  { value: \"center\", label: \"center\" },\n  { value: \"bottom\", label: \"bottom\" },\n  { value: \"space-between\", label: \"space-between\" },\n  { value: \"space-around\", label: \"space-around\" },\n  { value: \"space-evenly\", label: \"space-evenly\" },\n  { value: \"flex-start\", label: \"flex-start\" },\n  { value: \"flex-end\", label: \"flex-end\" },\n];\n\n// Emojis\nconst rowEmoji = \"üö£\";\nconst columnEmoji = \"üèõ\";\n\n// Global cache for loaded libraries\nconst libraryCache: Record<string, any> = {};\nconst loadingPromises: Record<string, Promise<any> | undefined> = {};\n\n// Lazy loading component for each version\nconst VersionContent = ({ version }: { version: string }) => {\n  const [libraries, setLibraries] = useState<any>(libraryCache[version] || null);\n  const [loading, setLoading] = useState(!libraryCache[version]);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadLibraries = async () => {\n      // If libraries are already cached, use them immediately\n      if (libraryCache[version]) {\n        setLibraries(libraryCache[version]);\n        setLoading(false);\n        return;\n      }\n\n      // If there's already a loading promise for this version, wait for it\n      if (loadingPromises[version]) {\n        try {\n          const cachedLibraries = await loadingPromises[version];\n          setLibraries(cachedLibraries);\n          setLoading(false);\n          return;\n        } catch (err) {\n          setError(`Failed to load libraries for ${version}`);\n          setLoading(false);\n          return;\n        }\n      }\n\n      // Track loading start time for minimum display duration\n      const loadingStartTime = Date.now();\n\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Create loading promise and store it\n        const loadingPromise = (async () => {\n          // Load all required libraries for this version\n          let Styles;\n          const [Material, FlexComponents] = await Promise.all([\n            import(`@mui/material_${version}`),\n            import(`@mui-flexy/${version}`),\n          ]);\n\n          // Handle different styling approaches per version\n          if (version === \"v5\") {\n            const StylesModule = await import(`@mui/styles_${version}`);\n            Styles = {\n              ...(StylesModule.default || StylesModule),\n              createTheme: Material.createTheme || Material.default?.createTheme,\n              responsiveFontSizes:\n                (StylesModule.default || StylesModule).responsiveFontSizes || ((theme: any) => theme),\n              ThemeProvider: (StylesModule.default || StylesModule).ThemeProvider,\n              CssBaseline: Material.CssBaseline || Material.default?.CssBaseline,\n            };\n          } else {\n            // v6 and v7 use @mui/system for styling\n            const SystemModule = await import(`@mui/system_${version}`);\n            const MaterialModule = Material.default || Material;\n            const SystemModuleResolved = SystemModule.default || SystemModule;\n\n            // Create a simple styled function that just applies sx props\n            const simpleStyled = (Component: any) => (styles: any) => {\n              return (props: any) =>\n                React.createElement(Component, {\n                  ...props,\n                  sx: { ...styles, ...props.sx },\n                });\n            };\n\n            Styles = {\n              styled: simpleStyled,\n              createTheme: MaterialModule.createTheme,\n              responsiveFontSizes: (theme: any) => theme, // No responsiveFontSizes in system\n              ThemeProvider: SystemModuleResolved.ThemeProvider,\n              CssBaseline: MaterialModule.CssBaseline,\n            };\n          }\n\n          const librariesData: any = {\n            Material: Material.default || Material,\n            Styles,\n            FlexBox: FlexComponents.FlexBox,\n            FlexGrid: FlexComponents.FlexGrid,\n          };\n\n          // Only add FlexGrid2 for v6\n          if (version === \"v6\") {\n            librariesData.FlexGrid2 = FlexComponents.FlexGrid2;\n          }\n\n          // Cache the libraries\n          libraryCache[version] = librariesData;\n          return librariesData;\n        })();\n\n        loadingPromises[version] = loadingPromise;\n\n        const librariesData = await loadingPromise;\n        setLibraries(librariesData);\n\n        // Ensure loading is displayed for at least 500ms\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } catch (err) {\n        console.error(`Error loading libraries for ${version}:`, err);\n        setError(`Failed to load libraries for ${version}`);\n\n        // Ensure loading is displayed for at least 500ms even on error\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } finally {\n        setLoading(false);\n        // Clean up loading promise\n        delete loadingPromises[version];\n      }\n    };\n\n    loadLibraries();\n  }, [version]);\n\n  if (loading) {\n    return <LoadingComponent message=\"Loading modules...\" />;\n  }\n\n  if (error) {\n    return (\n      <div\n        style={{\n          minHeight: \"80vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          backgroundColor: \"#fafafa\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"24px\",\n            textAlign: \"center\",\n            backgroundColor: \"white\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\n            maxWidth: \"400px\",\n            width: \"90%\",\n            border: \"1px solid #ffcdd2\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"16px\",\n              color: \"#d32f2f\",\n              fontWeight: 500,\n              marginBottom: \"8px\",\n            }}\n          >\n            Error Loading {version.toUpperCase()}\n          </div>\n          <div\n            style={{\n              fontSize: \"14px\",\n              color: \"#666\",\n              fontWeight: 400,\n            }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!libraries) {\n    return (\n      <div\n        style={{\n          minHeight: \"80vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          backgroundColor: \"#fafafa\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"24px\",\n            textAlign: \"center\",\n            backgroundColor: \"white\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\n            maxWidth: \"300px\",\n            width: \"90%\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"14px\",\n              color: \"#666\",\n              fontWeight: 400,\n            }}\n          >\n            Libraries not loaded\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return <VersionApp version={version} libraries={libraries} />;\n};\n\n// Main version-specific app component\nconst VersionApp = ({ version, libraries }: { version: string; libraries: any }) => {\n  const { Material, Styles, FlexBox, FlexGrid, FlexGrid2 = null } = libraries;\n\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [direction, setDirection] = useState<\"row\" | \"column\">(\"row\");\n  const [flexBoxProps, setFlexBoxProps] = useState<BaseFlexProps>({\n    x: \"center\",\n    y: \"center\",\n    row: true,\n    column: false,\n    nowrap: false,\n    reverse: false,\n  });\n\n  const [flexGridProps, setFlexGridProps] = useState({\n    rows: 2,\n    columns: 3,\n    spacing: 2,\n    useTemplate: false,\n  });\n\n  const [flexGridItemProps, setFlexGridItemProps] = useState<BaseFlexProps>({\n    x: \"left\",\n    y: \"stretch\",\n  });\n\n  // Update flexBoxProps when direction changes\n  useEffect(() => {\n    setFlexBoxProps((prev) => ({\n      ...prev,\n      row: direction === \"row\",\n      column: direction === \"column\",\n    }));\n  }, [direction]);\n\n  // Handle tab switching when version changes\n  useEffect(() => {\n    // Prevent infinite loops by checking if the tab switch is actually necessary\n    if (selectedTab === 2 && version !== \"v6\") {\n      // If user is on FlexGrid2 tab (index 2) and switches to v5/v7, go to FlexGrid tab (index 1)\n      console.log(`Switching from FlexGrid2 tab to FlexGrid tab for ${version}`);\n      setSelectedTab(1);\n    } else if (selectedTab === 1 && version === \"v6\") {\n      // If user is on FlexGrid tab (index 1) and switches to v6, go to FlexGrid2 tab (index 2)\n      console.log(`Switching from FlexGrid tab to FlexGrid2 tab for ${version}`);\n      setSelectedTab(2);\n    }\n  }, [version]); // Only run when version changes, not when selectedTab changes\n\n  // Determine current options based on direction\n  const isColumn = direction === \"column\";\n  const xOptions = isColumn ? xColumnOptions : xRowOptions;\n  const yOptions = isColumn ? yColumnOptions : yRowOptions;\n\n  const currentVersion = versions.find((v) => v.key === version)!;\n\n  // Create styled components for this version (memoized to prevent re-creation on each render)\n  const FlexBoxInner = useMemo(() => createDemoInner(FlexBox, Styles.styled), [FlexBox, Styles.styled]);\n  const FlexGridDemo = useMemo(() => createFlexGridDemo(FlexGrid, Styles.styled), [FlexGrid, Styles.styled]);\n  const FlexGrid2Demo = useMemo(\n    () => (version === \"v6\" && FlexGrid2 ? createFlexGridDemo(FlexGrid2, Styles.styled) : null),\n    [version, FlexGrid2, Styles.styled],\n  );\n\n  const generateFlexBoxCode = () => {\n    const propsArray = [];\n    if (flexBoxProps.x !== \"center\") propsArray.push(`x=\"${flexBoxProps.x}\"`);\n    if (flexBoxProps.y !== \"center\") propsArray.push(`y=\"${flexBoxProps.y}\"`);\n    if (flexBoxProps.row) propsArray.push(\"row\");\n    if (flexBoxProps.column) propsArray.push(\"column\");\n    if (flexBoxProps.nowrap) propsArray.push(\"nowrap\");\n    if (flexBoxProps.reverse) propsArray.push(\"reverse\");\n\n    const propsString = propsArray.length > 0 ? ` ${propsArray.join(\" \")}` : \"\";\n    return `<FlexBox${propsString}>\\n  <span>${isColumn ? columnEmoji : rowEmoji}</span>\\n  <span>${isColumn ? columnEmoji : rowEmoji}</span>\\n  <span>${isColumn ? columnEmoji : rowEmoji}</span>\\n  <span>${isColumn ? columnEmoji : \"üö§\"}</span>\\n</FlexBox>`;\n  };\n\n  const generateFlexGridCode = () => {\n    const gridComponent = selectedTab === 2 ? \"FlexGrid2\" : \"FlexGrid\";\n    const containerProps = flexGridProps.useTemplate\n      ? `sx={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\", gridGap: ${flexGridProps.spacing} }}`\n      : `container spacing={${flexGridProps.spacing}}`;\n\n    const baseItemProps = selectedTab === 2 || (selectedTab === 1 && version === \"v7\") ? `size={4}` : `item xs={4}`;\n\n    // Add x and y props to the item props\n    const itemPropsArray = [baseItemProps];\n    if (flexGridItemProps.x !== \"left\") itemPropsArray.push(`x=\"${flexGridItemProps.x}\"`);\n    if (flexGridItemProps.y !== \"stretch\") itemPropsArray.push(`y=\"${flexGridItemProps.y}\"`);\n    const itemProps = itemPropsArray.join(\" \");\n\n    return `<${gridComponent} ${containerProps}>\n  <${gridComponent} ${itemProps}>\n    <div className=\"grid-item\">Grid 1</div>\n  </${gridComponent}>\n  <${gridComponent} ${itemProps}>\n    <div className=\"grid-item\">Grid 2</div>\n  </${gridComponent}>\n  <${gridComponent} ${itemProps}>\n    <div className=\"grid-item\">Grid 3</div>\n  </${gridComponent}>\n</${gridComponent}>`;\n  };\n\n  const renderFlexGridItems = () => {\n    const totalItems = flexGridProps.rows * flexGridProps.columns;\n    const itemSize = Math.floor(12 / flexGridProps.columns);\n\n    return Array.from({ length: totalItems }, (_, i) => {\n      // For v6 and FlexGrid2 tab (index 2)\n      if (version === \"v6\" && selectedTab === 2 && FlexGrid2Demo) {\n        return (\n          <FlexGrid2Demo key={i} size={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGrid2Demo>\n        );\n      }\n      // For v7 and FlexGrid tab (index 1) - uses new Grid2 API with size prop\n      else if (version === \"v7\" && selectedTab === 1) {\n        return (\n          <FlexGridDemo key={i} size={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGridDemo>\n        );\n      }\n      // For v5 and FlexGrid tab (index 1) - uses legacy Grid API with item and xs props\n      else if (version === \"v5\" && selectedTab === 1) {\n        return (\n          <FlexGridDemo key={i} item xs={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGridDemo>\n        );\n      }\n      // Fallback - use v5 style for backwards compatibility\n      else {\n        return (\n          <FlexGridDemo key={i} item xs={itemSize} x={flexGridItemProps.x} y={flexGridItemProps.y}>\n            <div className=\"grid-item\">Grid {i + 1}</div>\n          </FlexGridDemo>\n        );\n      }\n    });\n  };\n\n  // Create theme for this version\n  const theme = Styles.responsiveFontSizes(\n    Styles.createTheme({\n      palette: {\n        primary: {\n          main: \"#007FFF\",\n        },\n      },\n    }),\n  );\n\n  return (\n    <Styles.ThemeProvider theme={theme}>\n      <Styles.CssBaseline />\n\n      {/* Main content */}\n      <Material.Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Material.Box display=\"flex\" flexDirection=\"column\" gap={4}>\n          {/* Title and Description */}\n          <Material.Box>\n            <Material.Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\n              <Material.Box\n                component=\"img\"\n                src=\"apple-touch-icon.png\"\n                alt=\"mui-flexy logo\"\n                sx={{ width: 100, height: 100 }}\n              />\n              <Material.Typography variant=\"h4\" component=\"h1\">\n                {currentVersion.label} + mui-flexy\n              </Material.Typography>\n            </Material.Box>\n            <Material.Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              Compatible with @mui/material v{currentVersion.version}\n            </Material.Typography>\n            <Material.Typography variant=\"body1\" component=\"div\" sx={{ mt: 2 }}>\n              mui-flexy for MUI is a component wrapper for flexbox styles that allows you to easily align and distribute\n              flexy items in a space in a way that doesn't make you want to pull your hair out trying to remember\n              whether to use <DemoCode inline>justify-content</DemoCode> or <DemoCode inline>align-items</DemoCode>.\n              Using a simple and consistent x, y coordinate system, you can stop worrying about the CSS working group's\n              choices and get on with your life of centering divs.\n              <br />\n              <br />\n              Simply use <DemoCode inline>&lt;FlexBox /&gt;</DemoCode> or{\" \"}\n              <DemoCode inline>{`<${version === \"v6\" ? \"FlexGrid2\" : \"FlexGrid\"} />`}</DemoCode> as you would Box or\n              Grid. The default axis is <DemoCode inline>row</DemoCode>, but for good hygiene, you might want to set{\" \"}\n              <DemoCode inline>row</DemoCode> anyway. If you want a column, just pass a{\" \"}\n              <DemoCode inline>column</DemoCode> prop.\n            </Material.Typography>\n          </Material.Box>\n\n          {/* Tab Navigation */}\n          <Material.Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Material.Tabs\n              value={selectedTab}\n              onChange={(_: any, newValue: any) => setSelectedTab(newValue)}\n              role=\"tablist\"\n            >\n              <Material.Tab label=\"FlexBox\" role=\"tab\" />\n              <Material.Tab label=\"FlexGrid\" role=\"tab\" sx={{ display: version === \"v6\" ? \"none\" : \"flex\" }} />\n              <Material.Tab label=\"FlexGrid2\" role=\"tab\" sx={{ display: version === \"v6\" ? \"flex\" : \"none\" }} />\n            </Material.Tabs>\n          </Material.Box>\n\n          {selectedTab === 0 && (\n            <Material.Paper elevation={2} sx={{ p: 3 }}>\n              <Material.Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                {FLEXBOX_TAB_TITLE}\n              </Material.Typography>\n\n              {/* FlexBox Controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={3} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>X alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexBoxProps.x}\n                      label=\"X alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexBoxProps((prev) => ({\n                          ...prev,\n                          x: e.target.value as\n                            | \"left\"\n                            | \"right\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {xOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Y alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexBoxProps.y}\n                      label=\"Y alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexBoxProps((prev) => ({\n                          ...prev,\n                          y: e.target.value as\n                            | \"top\"\n                            | \"bottom\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {yOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel\n                      sx={{\n                        fontSize: \"0.875rem\",\n                        color: \"rgba(0, 0, 0, 0.6)\",\n                        pointerEvents: \"none\",\n                        zIndex: 1,\n                        backgroundColor: \"transparent\",\n                      }}\n                    >\n                      Direction\n                    </Material.InputLabel>\n                    <Material.Box sx={{ display: \"flex\", gap: 0.5, alignItems: \"center\", height: 32, mt: 0 }}>\n                      <Material.FormControlLabel\n                        control={\n                          <Material.Radio\n                            size=\"small\"\n                            checked={direction === \"row\"}\n                            onChange={() => {\n                              console.log(\"Row radio clicked\");\n                              setDirection(\"row\");\n                            }}\n                            value=\"row\"\n                          />\n                        }\n                        label=\"row\"\n                        sx={{\n                          \"& .MuiFormControlLabel-label\": {\n                            fontSize: \"0.875rem\",\n                          },\n                          margin: 0,\n                        }}\n                      />\n                      <Material.FormControlLabel\n                        control={\n                          <Material.Radio\n                            size=\"small\"\n                            checked={direction === \"column\"}\n                            onChange={() => {\n                              console.log(\"Column radio clicked\");\n                              setDirection(\"column\");\n                            }}\n                            value=\"column\"\n                          />\n                        }\n                        label=\"column\"\n                        sx={{\n                          \"& .MuiFormControlLabel-label\": {\n                            fontSize: \"0.875rem\",\n                          },\n                          margin: 0,\n                        }}\n                      />\n                    </Material.Box>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={Boolean(flexBoxProps.nowrap)}\n                        onChange={(e: any) => setFlexBoxProps((prev) => ({ ...prev, nowrap: e.target.checked }))}\n                      />\n                    }\n                    label=\"nowrap\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={Boolean(flexBoxProps.reverse)}\n                        onChange={(e: any) => setFlexBoxProps((prev) => ({ ...prev, reverse: e.target.checked }))}\n                      />\n                    }\n                    label=\"reverse\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n              </Material.Box>\n\n              {/* FlexBox Demo */}\n              <DemoCode code={generateFlexBoxCode()} />\n\n              <FlexBoxInner\n                data-testid=\"demo-flexbox\"\n                x={flexBoxProps.x}\n                y={flexBoxProps.y}\n                row={flexBoxProps.row}\n                column={flexBoxProps.column}\n                nowrap={flexBoxProps.nowrap}\n                reverse={flexBoxProps.reverse}\n              >\n                <span>{isColumn ? columnEmoji : rowEmoji}</span>\n                <span>{isColumn ? columnEmoji : rowEmoji}</span>\n                <span>{isColumn ? columnEmoji : rowEmoji}</span>\n                <span>{isColumn ? columnEmoji : \"üö§\"}</span>\n              </FlexBoxInner>\n            </Material.Paper>\n          )}\n\n          {selectedTab === 1 && version !== \"v6\" && (\n            <Material.Paper elevation={2} sx={{ p: 3 }}>\n              <Material.Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                {FLEXGRID_TAB_TITLE}\n              </Material.Typography>\n\n              {/* FlexGrid Controls */}\n              {/* First row: Basic grid controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={2} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Rows</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.rows}\n                      label=\"Rows\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, rows: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Columns</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.columns}\n                      label=\"Columns\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, columns: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Spacing</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.spacing}\n                      label=\"Spacing\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, spacing: Number(e.target.value) }))}\n                    >\n                      {[0, 1, 2, 3, 4, 5].map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={flexGridProps.useTemplate}\n                        onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, useTemplate: e.target.checked }))}\n                      />\n                    }\n                    label=\"Use grid template\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n              </Material.Box>\n\n              {/* Second row: Item alignment controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={3} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>X alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.x}\n                      label=\"X alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          x: e.target.value as\n                            | \"left\"\n                            | \"right\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {xRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Y alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.y}\n                      label=\"Y alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          y: e.target.value as\n                            | \"top\"\n                            | \"bottom\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {yRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n              </Material.Box>\n\n              {/* FlexGrid Demo */}\n              <DemoCode code={generateFlexGridCode()} />\n\n              {flexGridProps.useTemplate ? (\n                <FlexGridDemo\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n                    gridGap: flexGridProps.spacing,\n                  }}\n                >\n                  {renderFlexGridItems()}\n                </FlexGridDemo>\n              ) : (\n                <FlexGridDemo container spacing={flexGridProps.spacing}>\n                  {renderFlexGridItems()}\n                </FlexGridDemo>\n              )}\n            </Material.Paper>\n          )}\n\n          {selectedTab === 2 && version === \"v6\" && FlexGrid2Demo && (\n            <Material.Paper elevation={2} sx={{ p: 3 }}>\n              <Material.Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                {FLEXGRID2_TAB_TITLE}\n              </Material.Typography>\n\n              {/* FlexGrid2 Controls */}\n              {/* First row: Basic grid controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={2} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Rows</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.rows}\n                      label=\"Rows\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, rows: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Columns</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.columns}\n                      label=\"Columns\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, columns: Number(e.target.value) }))}\n                    >\n                      {Array.from({ length: 5 }, (_, i) => i + 1).map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 110 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Spacing</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridProps.spacing}\n                      label=\"Spacing\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, spacing: Number(e.target.value) }))}\n                    >\n                      {[0, 1, 2, 3, 4, 5].map((num) => (\n                        <Material.MenuItem\n                          key={num}\n                          value={num}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {num}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ height: 32, display: \"flex\", alignItems: \"center\" }}>\n                  <Material.FormControlLabel\n                    control={\n                      <Material.Switch\n                        size=\"small\"\n                        checked={flexGridProps.useTemplate}\n                        onChange={(e: any) => setFlexGridProps((prev) => ({ ...prev, useTemplate: e.target.checked }))}\n                      />\n                    }\n                    label=\"Use grid template\"\n                    sx={{\n                      \"& .MuiFormControlLabel-label\": {\n                        fontSize: \"0.875rem\",\n                      },\n                      margin: 0,\n                      height: \"100%\",\n                      alignItems: \"center\",\n                    }}\n                  />\n                </Material.Box>\n              </Material.Box>\n\n              {/* Second row: Item alignment controls */}\n              <Material.Box display=\"flex\" flexWrap=\"wrap\" gap={2} mb={3} alignItems=\"flex-end\">\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>X alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.x}\n                      label=\"X alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          x: e.target.value as\n                            | \"left\"\n                            | \"right\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {xRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n\n                <Material.Box sx={{ minWidth: 140 }}>\n                  <Material.FormControl fullWidth size=\"small\" margin=\"none\">\n                    <Material.InputLabel sx={{ fontSize: \"0.875rem\" }}>Y alignment</Material.InputLabel>\n                    <Material.Select\n                      value={flexGridItemProps.y}\n                      label=\"Y alignment\"\n                      sx={{\n                        height: 32,\n                        \"& .MuiSelect-select\": {\n                          padding: \"6px 12px\",\n                          fontSize: \"0.875rem\",\n                        },\n                      }}\n                      onChange={(e: any) =>\n                        setFlexGridItemProps((prev) => ({\n                          ...prev,\n                          y: e.target.value as\n                            | \"top\"\n                            | \"bottom\"\n                            | \"center\"\n                            | \"flex-start\"\n                            | \"flex-end\"\n                            | \"space-between\"\n                            | \"space-around\"\n                            | \"space-evenly\",\n                        }))\n                      }\n                    >\n                      {yRowOptions.map((option) => (\n                        <Material.MenuItem\n                          key={option.value}\n                          value={option.value}\n                          dense\n                          sx={{\n                            fontSize: \"0.875rem\",\n                            minHeight: 32,\n                            padding: \"4px 12px\",\n                          }}\n                        >\n                          {option.label}\n                        </Material.MenuItem>\n                      ))}\n                    </Material.Select>\n                  </Material.FormControl>\n                </Material.Box>\n              </Material.Box>\n\n              {/* FlexGrid2 Demo */}\n              <DemoCode code={generateFlexGridCode()} />\n\n              {flexGridProps.useTemplate ? (\n                <FlexGrid2Demo\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n                    gridGap: flexGridProps.spacing,\n                  }}\n                >\n                  {renderFlexGridItems()}\n                </FlexGrid2Demo>\n              ) : (\n                <FlexGrid2Demo container spacing={flexGridProps.spacing}>\n                  {renderFlexGridItems()}\n                </FlexGrid2Demo>\n              )}\n            </Material.Paper>\n          )}\n        </Material.Box>\n      </Material.Container>\n    </Styles.ThemeProvider>\n  );\n};\n\n// Preload all versions function\nconst preloadAllVersions = async (): Promise<void> => {\n  const versionsList = [\"v5\", \"v6\", \"v7\"];\n\n  // Start loading all versions simultaneously\n  const preloadPromises = versionsList.map(async (version) => {\n    // Skip if already cached\n    if (libraryCache[version]) return libraryCache[version];\n\n    // Skip if already loading\n    if (loadingPromises[version]) return loadingPromises[version];\n\n    try {\n      // Load all required libraries for this version\n      let Styles;\n      const [Material, FlexComponents] = await Promise.all([\n        import(`@mui/material_${version}`),\n        import(`@mui-flexy/${version}`),\n      ]);\n\n      // Handle different styling approaches per version\n      if (version === \"v5\") {\n        const StylesModule = await import(`@mui/styles_${version}`);\n        Styles = {\n          ...(StylesModule.default || StylesModule),\n          createTheme: Material.createTheme || Material.default?.createTheme,\n          responsiveFontSizes: (StylesModule.default || StylesModule).responsiveFontSizes || ((theme: any) => theme),\n          ThemeProvider: (StylesModule.default || StylesModule).ThemeProvider,\n          CssBaseline: Material.CssBaseline || Material.default?.CssBaseline,\n        };\n      } else {\n        // v6 and v7 use @mui/system for styling\n        const SystemModule = await import(`@mui/system_${version}`);\n        const MaterialModule = Material.default || Material;\n        const SystemModuleResolved = SystemModule.default || SystemModule;\n\n        // Create a simple styled function that just applies sx props\n        const simpleStyled = (Component: any) => (styles: any) => {\n          return (props: any) =>\n            React.createElement(Component, {\n              ...props,\n              sx: { ...styles, ...props.sx },\n            });\n        };\n\n        Styles = {\n          styled: simpleStyled,\n          createTheme: MaterialModule.createTheme,\n          responsiveFontSizes: (theme: any) => theme,\n          ThemeProvider: SystemModuleResolved.ThemeProvider,\n          CssBaseline: MaterialModule.CssBaseline,\n        };\n      }\n\n      const librariesData: any = {\n        Material: Material.default || Material,\n        Styles,\n        FlexBox: FlexComponents.FlexBox,\n        FlexGrid: FlexComponents.FlexGrid,\n      };\n\n      // Only add FlexGrid2 for v6\n      if (version === \"v6\") {\n        librariesData.FlexGrid2 = FlexComponents.FlexGrid2;\n      }\n\n      // Cache the libraries\n      libraryCache[version] = librariesData;\n      return librariesData;\n    } catch (err) {\n      console.error(`Error preloading libraries for ${version}:`, err);\n      throw err;\n    }\n  });\n\n  // Wait for all versions to load\n  try {\n    await Promise.all(preloadPromises);\n  } catch (err) {\n    console.error(\"Error preloading some versions:\", err);\n  }\n};\n\nconst App = () => {\n  const [selectedVersion, setSelectedVersion] = useState(\"v7\");\n  const [headerLibraries, setHeaderLibraries] = useState<any>(null);\n  const [appLoading, setAppLoading] = useState(true);\n\n  useEffect(() => {\n    const loadAppWithPreloading = async () => {\n      // Track loading start time for minimum display duration\n      const loadingStartTime = Date.now();\n\n      try {\n        // Load header libraries (v7 Material-UI for the header)\n        const [Material, System] = await Promise.all([import(\"@mui/material_v7\"), import(\"@mui/system_v7\")]);\n\n        setHeaderLibraries({\n          Material: Material.default || Material,\n          Styles: {\n            createTheme: Material.createTheme,\n            ThemeProvider: System.ThemeProvider,\n          },\n        });\n\n        // Start preloading all versions in parallel (this will continue in background)\n        preloadAllVersions();\n\n        // Ensure loading is displayed for at least 500ms\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } catch (err) {\n        console.error(\"Error loading application:\", err);\n\n        // Ensure loading is displayed for at least 500ms even on error\n        const loadingDuration = Date.now() - loadingStartTime;\n        const minLoadingTime = 500; // 500ms\n\n        if (loadingDuration < minLoadingTime) {\n          await new Promise((resolve) => setTimeout(resolve, minLoadingTime - loadingDuration));\n        }\n      } finally {\n        setAppLoading(false);\n      }\n    };\n\n    loadAppWithPreloading();\n  }, []);\n\n  if (appLoading || !headerLibraries) {\n    return <LoadingComponent message=\"Loading application...\" />;\n  }\n\n  const { Material, Styles } = headerLibraries;\n\n  return (\n    <div>\n      {/* Header with version tabs */}\n      <Material.AppBar\n        position=\"sticky\"\n        color=\"default\"\n        elevation={1}\n        data-testid=\"app-bar\"\n        sx={{ top: 0, zIndex: 1100 }}\n      >\n        <Material.Toolbar>\n          <Material.Typography component=\"h2\" variant=\"h6\" sx={{ flexGrow: 1 }}>\n            mui-flexy documentation\n          </Material.Typography>\n          {versions.map((version) => (\n            <Material.Button\n              key={version.key}\n              color={selectedVersion === version.key ? \"primary\" : \"inherit\"}\n              onClick={() => setSelectedVersion(version.key)}\n              sx={{\n                mx: 0.5,\n                fontWeight: selectedVersion === version.key ? \"bold\" : \"normal\",\n              }}\n            >\n              {version.label}\n            </Material.Button>\n          ))}\n        </Material.Toolbar>\n      </Material.AppBar>\n\n      {/* Version-specific content */}\n      <VersionContent version={selectedVersion} />\n    </div>\n  );\n};\n\nexport default App;\n"],"names":["FLEXBOX_TAB_TITLE","FLEXGRID_TAB_TITLE","FLEXGRID2_TAB_TITLE","DemoCode","inline","code","children","content","toString","style","backgroundColor","padding","borderRadius","fontSize","fontFamily","color","pre","margin","overflowX","createDemoInner","FlexBox","styled","minHeight","border","flexGrow","gap","paddingLeft","paddingRight","paddingTop","paddingBottom","display","alignItems","justifyContent","minWidth","flexShrink","createFlexGridDemo","FlexGrid","textAlign","versions","key","label","version","packageName","LoadingComponent","message","div","position","top","left","width","height","zIndex","animation","xRowOptions","value","yRowOptions","xColumnOptions","yColumnOptions","rowEmoji","columnEmoji","libraryCache","loadingPromises","VersionContent","libraries","setLibraries","useState","loading","setLoading","error","setError","useEffect","loadLibraries","cachedLibraries","err","loadingStartTime","Date","now","loadingPromise","Styles","Material","FlexComponents","Promise","all","StylesModule","default","createTheme","responsiveFontSizes","theme","ThemeProvider","CssBaseline","SystemModule","MaterialModule","SystemModuleResolved","simpleStyled","Component","styles","props","React","createElement","sx","librariesData","FlexGrid2","loadingDuration","minLoadingTime","resolve","setTimeout","console","boxShadow","maxWidth","fontWeight","marginBottom","toUpperCase","VersionApp","selectedTab","setSelectedTab","direction","setDirection","flexBoxProps","setFlexBoxProps","x","y","row","column","nowrap","reverse","flexGridProps","setFlexGridProps","rows","columns","spacing","useTemplate","flexGridItemProps","setFlexGridItemProps","prev","log","isColumn","xOptions","yOptions","currentVersion","find","v","FlexBoxInner","useMemo","FlexGridDemo","FlexGrid2Demo","generateFlexBoxCode","propsArray","push","propsString","length","join","generateFlexGridCode","gridComponent","containerProps","baseItemProps","itemPropsArray","itemProps","renderFlexGridItems","totalItems","itemSize","Math","floor","Array","from","_","i","size","className","item","xs","palette","primary","main","Container","py","Box","flexDirection","mb","component","src","alt","Typography","variant","gutterBottom","mt","br","borderBottom","borderColor","Tabs","onChange","newValue","role","Tab","Paper","elevation","p","flexWrap","FormControl","fullWidth","InputLabel","Select","e","target","map","option","MenuItem","dense","pointerEvents","FormControlLabel","control","Radio","checked","Switch","Boolean","data-testid","span","Number","num","gridTemplateColumns","gridGap","container","preloadAllVersions","versionsList","preloadPromises","App","selectedVersion","setSelectedVersion","headerLibraries","setHeaderLibraries","appLoading","setAppLoading","loadAppWithPreloading","System","AppBar","Toolbar","Button","onClick","mx"],"mappings":"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"}