{"version":3,"file":"docs.js","sources":["../../src/Flex.utils.ts","../../src/v5/Flex_v5.tsx","../../src/v6/Flex_v6.tsx","../../src/Flex.tsx","../../demo/src/Flex.demo.tsx","../../demo/src/App.tsx","../Docs.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\n\nimport {\n  FlexBoxProps,\n  type FlexGrid2Props,\n  FlexGridProps,\n  type ResponsiveFlexBoolean,\n  ResponsiveFlexDirection,\n  ResponsiveFlexPosition,\n} from \"./Flex.types\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst mapAlignment = (alignment?: _Any): ResponsiveFlexPosition => {\n  if (!alignment) return;\n  if (typeof alignment === \"string\") {\n    switch (alignment) {\n      case \"top\":\n      case \"left\":\n        return \"flex-start\";\n      case \"bottom\":\n      case \"right\":\n        return \"flex-end\";\n      default:\n        return alignment as ResponsiveFlexPosition;\n    }\n  } else if (Array.isArray(alignment)) {\n    return alignment.map((a) => mapAlignment(a)) as ResponsiveFlexPosition;\n  } else if (typeof alignment === \"object\") {\n    return Object.fromEntries(\n      Object.entries(alignment).map(([k, a]) => [k, mapAlignment(a)]),\n    ) as ResponsiveFlexPosition;\n  }\n};\n\nconst mapDirection = (\n  direction: ResponsiveFlexDirection | undefined | null,\n  reverse: boolean | undefined | null = false,\n): ResponsiveFlexDirection => {\n  if (!direction) return \"row\";\n  if (typeof direction === \"string\") {\n    if (![\"row\", \"row-reverse\", \"column\", \"column-reverse\"].includes(direction)) {\n      console.warn(\n        `Using { flex-direction: ${direction} } with mui-flexy shorthand is not recommended \\\nbecause it can cause unexpected alignment and orientation anomalies.`,\n      );\n    }\n    switch (direction) {\n      case \"row\":\n      case \"column\":\n        return `${direction}${reverse ? \"-reverse\" : \"\"}`;\n      default:\n        return direction;\n    }\n  } else if (Array.isArray(direction)) {\n    return direction.map((d) => (!d ? \"row\" : mapDirection(d, reverse))) as ResponsiveFlexDirection;\n  } else if (typeof direction === \"object\") {\n    return Object.fromEntries(\n      Object.entries(direction).map(([k, d]) => [k, mapDirection(d as ResponsiveFlexDirection, reverse)]),\n    ) as ResponsiveFlexDirection;\n  }\n};\n\nconst stringOrArrayValue = <V = unknown>(value: V, index: number) => {\n  if (typeof value === \"string\") {\n    return value;\n  } else if (Array.isArray(value)) {\n    return value?.[index];\n  }\n};\n\nconst mapResponsiveObject = (\n  direction: { [key: string]: CSSProperties[\"flexDirection\"] | null } | undefined | null,\n  main: ResponsiveFlexPosition,\n  cross: ResponsiveFlexPosition,\n) => {\n  return Object.fromEntries(\n    Object.entries(direction ?? []).map(([key, d]) => {\n      if (typeof d !== \"string\") {\n        throw new Error(\n          \"Values for a flex direction ResponsiveStyleObject must be strings, e.g. { xs: 'row', sm: 'column' }\",\n        );\n      }\n      if (d.startsWith(\"column\")) {\n        return [key, typeof cross === \"string\" ? cross : mapAlignment(cross)?.[key as keyof typeof cross]];\n      } else {\n        return [key, typeof main === \"string\" ? main : mapAlignment(main)?.[key as keyof typeof main]];\n      }\n    }),\n  );\n};\n\nconst resolveAlignment = (direction: ResponsiveFlexDirection, x: ResponsiveFlexPosition, y: ResponsiveFlexPosition) => {\n  if (typeof direction === \"string\") {\n    const isColumn = direction.startsWith(\"column\");\n    return {\n      justifyContent: mapAlignment(isColumn ? y : x),\n      alignItems: mapAlignment(isColumn ? x : y),\n    };\n  }\n\n  if (Array.isArray(direction)) {\n    return {\n      justifyContent: direction.map((d, i) => stringOrArrayValue(mapAlignment(d?.startsWith(\"column\") ? y : x), i)),\n      alignItems: direction.map((d, i) => stringOrArrayValue(mapAlignment(d?.startsWith(\"column\") ? x : y), i)),\n    };\n  }\n\n  if (typeof direction === \"object\") {\n    return {\n      justifyContent: mapResponsiveObject(direction, x, y),\n      alignItems: mapResponsiveObject(direction, y, x),\n    };\n  }\n\n  return { justifyContent: x, alignItems: y };\n};\n\ntype CSSFlexDirection = CSSProperties[\"flexDirection\"];\nconst resolveDirection = <R extends ResponsiveFlexDirection = ResponsiveFlexDirection>(\n  row: ResponsiveFlexDirection | ResponsiveFlexBoolean | undefined | null,\n  column: ResponsiveFlexDirection | ResponsiveFlexBoolean | undefined | null,\n  reverse: boolean | undefined | null = false,\n  fallback: ResponsiveFlexDirection = \"row\",\n): R | CSSFlexDirection | undefined => {\n  /* Maps boolean responsive row/column props to flexDirection values */\n\n  const rowIsNullOrUndefined = row === null || row === undefined;\n  const columnIsNullOrUndefined = column === null || column === undefined;\n\n  if (rowIsNullOrUndefined && columnIsNullOrUndefined) {\n    return mapDirection(fallback, reverse) as R;\n  }\n\n  const rowIsFalse = row === false;\n  const columnIsFalse = column === false;\n\n  let chooseRow = [true, \"row\"].includes(row as _Any) || columnIsFalse || columnIsNullOrUndefined;\n  let chooseColumn = [true, \"column\"].includes(column as _Any) || rowIsFalse || rowIsNullOrUndefined;\n\n  if (rowIsFalse && !columnIsFalse) {\n    chooseRow = false;\n    chooseColumn = true;\n  } else if (columnIsFalse && !rowIsFalse) {\n    chooseColumn = false;\n    chooseRow = true;\n  } else if (chooseRow && chooseColumn) {\n    chooseColumn = false;\n  }\n\n  const rowIsArray = Array.isArray(row);\n  const columnIsArray = Array.isArray(column);\n\n  const rowIsObject = typeof row === \"object\" && !rowIsArray && !rowIsNullOrUndefined;\n  const columnIsObject = typeof column === \"object\" && !columnIsArray && !columnIsNullOrUndefined;\n\n  if ([!rowIsObject, !columnIsObject, !rowIsArray, !columnIsArray].every(Boolean)) {\n    return mapDirection(chooseColumn ? \"column\" : chooseRow ? \"row\" : fallback, reverse) as R;\n  }\n\n  const rowIsFalsy = !row || (rowIsArray && !row.length) || (rowIsObject && !Object.keys(row).length);\n  const columnIsFalsy = !column || (columnIsArray && !column.length) || (columnIsObject && !Object.keys(column).length);\n\n  if (rowIsArray && columnIsFalsy) {\n    return row.map((r) => resolveDirection(r, column, reverse, fallback)) as R;\n  }\n\n  if (columnIsArray && rowIsFalsy) {\n    return column.map((c) => resolveDirection(row, c, reverse, fallback)) as R;\n  }\n\n  if (rowIsArray && columnIsArray) {\n    const composite: ResponsiveFlexDirection = [];\n    if (row.length !== column.length) {\n      console.warn(\n        `When using Array type ResponsiveFlexDirection for both 'row' and 'column', they should be the same length (have the same number of breakpoints) - got row=${JSON.stringify(\n          row,\n        )} and column=${JSON.stringify(column)}. You probably want to use just one or the other.`,\n      );\n\n      const longestLength = Math.max(row.length, column.length);\n\n      for (let i = 0; i < longestLength; i++) {\n        const r = row[i] ?? (column[i] === \"column\" ? \"row\" : \"column\");\n        const c = column[i] ?? (row[i] === \"row\" ? \"column\" : \"row\");\n        composite.push(resolveDirection(r, c, reverse, fallback) as CSSFlexDirection);\n      }\n      return composite as R;\n    }\n\n    // if any of the values in each array are both true for the same array index, warn in the console and default to 'row'\n    return row.map((r, i) => {\n      let c = column[i];\n      if (r && c) {\n        console.warn(\n          `When using Array type ResponsiveFlexDirection for both 'row' and 'column', they cannot not both be true for the same breakpoint index - got row=${JSON.stringify(\n            row,\n          )} and column=${JSON.stringify(column)}. Defaulting to 'row' for conflicting indices.`,\n        );\n        c = false;\n      }\n      return resolveDirection(r, c, reverse, fallback) as CSSFlexDirection;\n    }) as R;\n  }\n\n  if (rowIsObject && columnIsFalsy) {\n    return Object.fromEntries(\n      Object.entries(row)\n        .filter(([, r]) => ![null, undefined].includes(r))\n        .map(([k, r]) => [k, resolveDirection(r, undefined, reverse, fallback)]),\n    ) as R;\n  }\n\n  if (columnIsObject && rowIsFalsy) {\n    return Object.fromEntries(\n      Object.entries(column)\n        .filter(([, r]) => ![null, undefined].includes(r))\n        .map(([k, c]) => [k, resolveDirection(undefined, c, reverse, fallback)]),\n    ) as R;\n  }\n\n  if (rowIsObject && columnIsObject) {\n    const composite: { [key: string]: CSSFlexDirection } = {};\n    const keys = new Set([...Object.keys(row), ...Object.keys(column)]);\n\n    for (const key of keys) {\n      const r = row[key];\n      const c = column[key];\n      if ([null, undefined].includes(r as _Any) && [null, undefined].includes(c as _Any)) {\n        // if both are empty, omit the key\n        continue;\n      }\n      composite[key] = resolveDirection(r, c, reverse, fallback) as CSSFlexDirection;\n    }\n    return composite as R;\n  }\n};\n\nexport const mapFlexProps = <P extends FlexBoxProps | FlexGridProps | FlexGrid2Props>(\n  props: Partial<FlexBoxProps | FlexGridProps | FlexGrid2Props>,\n  ref?: React.Ref<_Any> | null,\n  componentName: \"Box\" | \"Grid\" | \"Grid2\" = \"Box\",\n) => {\n  const { x, y, row, column, flexDirection, reverse, nowrap, ...rest } = props;\n\n  const direction = resolveDirection(row, column, reverse, flexDirection as ResponsiveFlexDirection);\n\n  const whiteSpace = nowrap ? \"nowrap\" : props.whiteSpace;\n  const flexProps = { display: rest.display || \"flex\", whiteSpace };\n  const className = `${props.className || \"\"} MuiFlex-root${componentName ? ` MuiFlex${componentName}-root` : \"\"}`;\n\n  const alignments = resolveAlignment(direction, x, y);\n\n  return {\n    ...rest,\n    ...flexProps,\n    ...alignments,\n    flexDirection: direction,\n    className,\n    ref,\n  } as unknown as P;\n};\n\nexport const _test = {\n  mapAlignment,\n  mapDirection,\n  mapFlexProps,\n  resolveDirection,\n};\n","import type { Grid2Props as Unstable_Grid2Props } from \"@mui/material\";\nimport type { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { major as muiVersion } from \"@mui/material/version\";\nimport { forwardRef } from \"react\";\n\nimport type { FlexGrid2Props, FlexGrid2TypeMap, FlexOrientation } from \"../Flex.types\";\nimport { mapFlexProps } from \"../Flex.utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst versionMismatchErr = `@mui/material version is ${muiVersion}, but Unstable_FlexGrid2 is only available in v5. Please use FlexGrid2 instead.`;\n\nlet MuiUnstable_Grid2: _Any = undefined;\ntry {\n  // @ts-ignore\n  MuiUnstable_Grid2 = (await import(\"@mui/material/Unstable_Grid2\")).default;\n} catch (_err) {\n  console.warn(versionMismatchErr);\n}\n\nexport { FlexGrid2Props as Unstable_FlexGrid2Props };\nexport const createUnstable_FlexGrid2 = <\n  Orientation extends FlexOrientation | undefined = undefined,\n  RootComponent extends React.ElementType = \"div\",\n  AdditionalProps = {},\n>() => {\n  if (muiVersion > 5) {\n    throw new Error(versionMismatchErr);\n  }\n  return forwardRef<Unstable_Grid2Props[\"ref\"], FlexGrid2Props<Orientation, RootComponent, AdditionalProps>>(\n    (props, ref) => {\n      const { size, ...rest } = props as _Any;\n      const xs = typeof size === \"number\" || typeof size === \"string\" ? size : size?.xs;\n      const { xs: _xs, sm, md, lg, xl } = size || {};\n      props = {\n        ...rest,\n        xs: xs || _xs,\n        sm,\n        md,\n        lg,\n        xl,\n        ref,\n      };\n      // @ts-ignore\n      return <MuiUnstable_Grid2 {...mapFlexProps(props, ref, \"Grid2\")} />;\n    },\n  ) as OverridableComponent<FlexGrid2TypeMap<Orientation, AdditionalProps, RootComponent>>;\n};\n","import type { Grid2Props } from \"@mui/material\";\nimport type { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { major as muiVersion } from \"@mui/material/version\";\nimport { forwardRef } from \"react\";\n\nimport type { FlexGrid2Props, FlexGrid2TypeMap, FlexOrientation } from \"../Flex.types\";\nimport { mapFlexProps } from \"../Flex.utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst versionMismatchErr = `@mui/material version is ${muiVersion}, but v6 or above is required to use FlexGrid2. Please use Unstable_FlexGrid2 instead.`;\n\nlet MuiGrid2: _Any = undefined;\ntry {\n  // @ts-ignore\n  MuiGrid2 = (await import(\"@mui/material/Grid2\")).default;\n} catch (_err) {\n  console.warn(versionMismatchErr);\n}\n\nexport { FlexGrid2Props };\nexport const createFlexGrid2 = <\n  Orientation extends FlexOrientation | undefined = undefined,\n  RootComponent extends React.ElementType = \"div\",\n  AdditionalProps = {},\n>() => {\n  if (muiVersion < 6) {\n    throw new Error(versionMismatchErr);\n  }\n  return forwardRef<Grid2Props[\"ref\"], FlexGrid2Props<Orientation, RootComponent, AdditionalProps>>((props, ref) => {\n    const { xs, sm, md, lg, xl, size, ...rest } = props as _Any;\n    const sizeValues = [xs, sm, md, lg, xl].filter((value) => value !== null && value !== undefined);\n    const sizeProps =\n      size ?? (sizeValues.every((value) => value === sizeValues[0]) ? sizeValues[0] : { xs, sm, md, lg, xl });\n    props = { ...rest, size: sizeProps };\n    // @ts-ignore\n    return <MuiGrid2 {...mapFlexProps(props, ref, \"Grid2\")} />;\n  }) as OverridableComponent<FlexGrid2TypeMap<Orientation, AdditionalProps, RootComponent>>;\n};\n","import MuiBox, { BoxProps } from \"@mui/material/Box\";\nimport MuiGrid, { GridProps } from \"@mui/material/Grid\";\nimport type { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { Theme as MaterialTheme } from \"@mui/material/styles\";\nimport { major as muiVersion } from \"@mui/material/version\";\nimport { Theme as SystemTheme } from \"@mui/system\";\nimport { forwardRef } from \"react\";\n\nimport type {\n  FlexBoxProps,\n  FlexBoxTypeMap,\n  FlexGrid2Props,\n  FlexGridProps,\n  FlexGridTypeMap,\n  FlexOrientation,\n} from \"./Flex.types\";\nimport { mapFlexProps } from \"./Flex.utils\";\nimport { createUnstable_FlexGrid2 } from \"./v5\";\nimport { createFlexGrid2 } from \"./v6\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nexport { FlexBoxProps };\nconst createFlexBox = <\n  Orientation extends FlexOrientation | undefined = undefined,\n  RootComponent extends React.ElementType = \"div\",\n  AdditionalProps = {},\n  Theme extends object = SystemTheme & MaterialTheme,\n>() =>\n  forwardRef<BoxProps[\"ref\"], FlexBoxProps<Orientation, RootComponent, AdditionalProps>>((props, ref) => (\n    <MuiBox {...mapFlexProps(props, ref, \"Box\")} />\n  )) as OverridableComponent<FlexBoxTypeMap<Orientation, AdditionalProps, RootComponent, Theme>>;\nexport const FlexBox = createFlexBox();\n\nexport { FlexGridProps };\nconst createFlexGrid = <\n  Orientation extends FlexOrientation | undefined = undefined,\n  RootComponent extends React.ElementType = \"div\",\n  AdditionalProps = {},\n>() =>\n  forwardRef<GridProps[\"ref\"], FlexGridProps<Orientation, RootComponent, AdditionalProps>>(\n    // @ts-ignore\n    (props, ref) => <MuiGrid {...mapFlexProps(props, ref, \"Grid\")} />,\n  ) as OverridableComponent<FlexGridTypeMap<Orientation, AdditionalProps, RootComponent>>;\nexport const FlexGrid = createFlexGrid();\n\nexport { FlexGrid2Props };\nexport const FlexGrid2 = (() => {\n  try {\n    return muiVersion > 5 ? createFlexGrid2() : createUnstable_FlexGrid2();\n  } catch (err: _Any) {\n    return forwardRef((props, ref) => (\n      <MuiBox {...props} ref={ref}>\n        {String(err?.message || err)}\n      </MuiBox>\n    ));\n  }\n})();\n","import { Link, styled, Typography, TypographyOwnProps } from \"@mui/material\";\nimport { major as muiVersionMajor, version as muiVersion } from \"@mui/material/version\";\nimport { forwardRef, PropsWithChildren, useCallback, useEffect, useRef, useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atelierCaveLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nimport pkg from \"../../package.json\";\nimport { FlexGridProps } from \"../../src\";\nimport { FlexBox, type FlexBoxProps, FlexGrid, FlexGrid2 } from \"../../src\";\n\n// Or: run `npm link ../` or `yarn link ../` in the ./demo directory\n// and import from \"mui-flexy\":\n// import { FlexBox, FlexBoxProps, FlexGrid } from \"mui-flexy\";\n\nconsole.log(pkg.name, pkg.version, \"@mui/material\", muiVersion);\nconsole.log(\"FlexBox:\", FlexBox);\nconsole.log(\"FlexGrid:\", FlexGrid);\nconsole.log(\"FlexGrid2:\", FlexGrid2);\n\nconst rowEmoji = \"🚣\";\nconst columnEmoji = \"🏛\";\n\nconst rowCombinations: Array<[FlexBoxProps<\"row\">[\"x\"], FlexBoxProps<\"row\">[\"y\"]]> = [\n  [\"left\", \"top\"],\n  [\"left\", \"center\"],\n  [\"left\", \"bottom\"],\n  [\"left\", \"flex-start\"],\n  [\"left\", \"flex-end\"],\n  [\"left\", \"stretch\"],\n  [\"left\", \"baseline\"],\n  [\"right\", \"top\"],\n  [\"right\", \"center\"],\n  [\"right\", \"bottom\"],\n  [\"right\", \"flex-start\"],\n  [\"right\", \"flex-end\"],\n  [\"right\", \"stretch\"],\n  [\"right\", \"baseline\"],\n  [\"center\", \"top\"],\n  [\"center\", \"center\"],\n  [\"center\", \"bottom\"],\n  [\"center\", \"flex-start\"],\n  [\"center\", \"flex-end\"],\n  [\"center\", \"stretch\"],\n  [\"center\", \"baseline\"],\n  [\"space-between\", \"top\"],\n  [\"space-between\", \"center\"],\n  [\"space-between\", \"bottom\"],\n  [\"space-around\", \"top\"],\n  [\"space-around\", \"center\"],\n  [\"space-around\", \"bottom\"],\n  [\"space-evenly\", \"top\"],\n  [\"space-evenly\", \"center\"],\n  [\"space-evenly\", \"bottom\"],\n];\n\nconst columnCombinations: Array<[FlexBoxProps<\"column\">[\"y\"], FlexBoxProps<\"column\">[\"x\"]]> = [\n  [\"top\", \"left\"],\n  [\"top\", \"center\"],\n  [\"top\", \"right\"],\n  [\"top\", \"flex-start\"],\n  [\"top\", \"flex-end\"],\n  [\"top\", \"stretch\"],\n  [\"top\", \"baseline\"],\n  [\"bottom\", \"left\"],\n  [\"bottom\", \"center\"],\n  [\"bottom\", \"right\"],\n  [\"bottom\", \"flex-start\"],\n  [\"bottom\", \"flex-end\"],\n  [\"bottom\", \"stretch\"],\n  [\"bottom\", \"baseline\"],\n  [\"center\", \"left\"],\n  [\"center\", \"center\"],\n  [\"center\", \"right\"],\n  [\"center\", \"flex-start\"],\n  [\"center\", \"flex-end\"],\n  [\"center\", \"stretch\"],\n  [\"center\", \"baseline\"],\n  [\"space-between\", \"left\"],\n  [\"space-between\", \"center\"],\n  [\"space-between\", \"right\"],\n  [\"space-around\", \"left\"],\n  [\"space-around\", \"center\"],\n  [\"space-around\", \"right\"],\n  [\"space-evenly\", \"left\"],\n  [\"space-evenly\", \"center\"],\n  [\"space-evenly\", \"right\"],\n];\n\nconst bgColor = \"#f6f5f6\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype _Any = any;\n\nconst Inner = styled(FlexBox)<FlexBoxProps>((props) => ({\n  minHeight: props?.minHeight ?? (props?.sx as _Any)?.minHeight ?? 120,\n  border: \"1.5px solid #e2ebf8\",\n  borderRadius: \"4px\",\n  flexGrow: 1,\n  gap: \"4px\",\n  padding: \"4px\",\n  backgroundColor: \"#fff\",\n  \"& > span\": {\n    backgroundColor: bgColor,\n    paddingLeft: \"4px\",\n    paddingRight: \"4px\",\n    borderRadius: \"4px\",\n  },\n  \"& > pre\": {\n    margin: 0,\n    borderRadius: \"4px\",\n  },\n  \"& pre, & code\": {\n    whiteSpace: \"break-spaces\",\n  },\n}));\n\nconst rowArrow = (\n  <span style={{ writingMode: \"vertical-rl\", textOrientation: \"sideways\" }} aria-label=\"left-right arrow\">\n    ⇅\n  </span>\n);\nconst colArrow = (\n  <span style={{ writingMode: \"vertical-rl\", textOrientation: \"upright\" }} aria-label=\"up-down arrow\">\n    ⇅\n  </span>\n);\n\nconst gridColumns = { xs: 12, md: 4, l: 4, xl: 4 };\nconst reponsiveFontSizes = { \"& pre\": { fontSize: { xs: \"0.85rem\", md: \"1.0vw\", lg: \"0.85rem\" } } };\n\nconst Header = forwardRef(\n  ({ text, subtitle }: { text: string; subtitle?: string }, ref: React.ForwardedRef<HTMLDivElement>) => (\n    <FlexGrid item xs={12} component=\"header\" ref={ref} column gap={0}>\n      <Typography component=\"h2\" variant=\"h5\" sx={{ display: \"flex\", alignItems: \"center\" }}>\n        {text}\n        {text.toLowerCase().includes(\"row\") ? rowArrow : text.toLowerCase().includes(\"column\") ? colArrow : \"\"}\n      </Typography>\n      <Typography component=\"h4\" variant=\"subtitle1\">\n        {subtitle}\n      </Typography>\n    </FlexGrid>\n  ),\n);\nHeader.displayName = \"Header\";\n\nconst Code = ({\n  inline = false,\n  width,\n  code,\n  children,\n  margin = \"\",\n}: PropsWithChildren<{\n  width?: string | number;\n  inline?: boolean;\n  code?: string;\n  margin?: number | string;\n}>) => (\n  // @ts-ignore - children can be a string, but react-syntax-highlighter expects a ReactElement\n  <SyntaxHighlighter\n    language=\"javascript\"\n    customStyle={\n      inline\n        ? {\n            display: \"inline\",\n            padding: \"2px 4px\",\n            width,\n            background: bgColor,\n            borderRadius: 4,\n            margin,\n          }\n        : { background: bgColor, borderRadius: 4, margin }\n    }\n    style={atelierCaveLight}\n  >\n    {children?.toString() || code || \"\"}\n  </SyntaxHighlighter>\n);\n\nconst Title = () => (\n  <>\n    <FlexBox\n      component={(props: TypographyOwnProps) => <Typography {...props} component=\"h1\" />}\n      variant=\"h4\"\n      row\n      x=\"left\"\n      y=\"center\"\n      gap={2}\n    >\n      <FlexBox\n        width={100}\n        height={100}\n        mb={2}\n        ml={-1}\n        column\n        component=\"img\"\n        src=\"apple-touch-icon.png\"\n        alt=\"mui-flexy logo\"\n      />\n      mui-flexy for\n      <Link target=\"_blank\" href=\"https://mui.com/\" sx={{ ml: -0.75 }}>\n        @mui/material^{muiVersionMajor}\n      </Link>\n    </FlexBox>\n    <Typography variant=\"body1\" component=\"div\">\n      {\n        \"mui-flexy for MUI is a component wrapper for flexbox styles that allows you to easily \\\n            align and distribute flexy items in a space in a way that doesn't make you want \\\n            to pull your hair out trying to remember whether to use \"\n      }\n      <Code inline>justify-content</Code>\n      {\" or \"}\n      <Code inline>align-items</Code>\n      {\n        \". Using a simple and consistent x, y coordinate system, you can stop worrying about \\\n          the CSS working group's choices and get on with your life of centering divs.\"\n      }\n      <br />\n      <br />\n      {\"Flex components inherit from either \"}\n      <Link target=\"_blank\" href=\"https://mui.com/material-ui/react-box/\">\n        Box\n      </Link>{\" \"}\n      or{\" \"}\n      <Link target=\"_blank\" href=\"https://mui.com/material-ui/react-grid\">\n        Grid\n      </Link>\n      {\", depending on your needs. Simply use \"}\n      <Code inline>{\"<FlexBox />\"}</Code>\n      {\" or \"}\n      <Code inline>{\"<FlexGrid />\"}</Code>\n      {\" as you would Box or Grid. The default axis is \"}\n      <Code inline>row</Code>\n      {\", but for good hygiene, you might want to set \"}\n      <Code inline>row</Code>\n      {\" anyway. If you want a column, just pass a \"}\n      <Code inline>column</Code>\n      {\"prop, and Flexy will do the hard thinking and make CSS so you don't have to.\"}\n    </Typography>\n  </>\n);\n\nconst GridSection = styled((props: FlexGridProps = {}) => (\n  <FlexGrid {...props} container component=\"section\" spacing={[2, 3, 4]} />\n))(({ theme }) =>\n  theme.unstable_sx({\n    \"&.MuiGrid-root\": {\n      // This adjusts the outer gutter of the grid to match the rest of the page content\n      ml: [-2, -3, -4],\n      maxWidth: \"fit-content\",\n      width: (theme) => [\n        `calc(100% + ${theme.spacing(2)})`,\n        `calc(100% + ${theme.spacing(3)})`,\n        `calc(100% + ${theme.spacing(4)})`,\n      ],\n    },\n  }),\n);\n\nconst Item = styled((props: FlexGridProps = {}) => <FlexGrid {...props} item xs={12} component=\"div\" />)({\n  width: \"100%\",\n});\n\nconst BoxSection = styled(FlexBox)(({ theme }) =>\n  theme.unstable_sx({\n    width: \"100%\",\n    maxWidth: \"100%\",\n    rowGap: [2, 3, 4],\n  }),\n);\n\nexport const useRenderer = () => {\n  const [, _render] = useState({});\n  return useCallback(() => _render({}), []);\n};\n\nconst FlexDemo = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const render = useRenderer();\n\n  useEffect(() => {\n    if (ref.current) {\n      render();\n    }\n  }, [ref, render]);\n\n  return (\n    <FlexBox width=\"100vw\" p={[2, 3, 4]} gap={[2, 3, 4]} x=\"center\" component=\"main\" sx={{ bgcolor: \"#fff\" }} column>\n      <FlexBox x=\"left\" y=\"center\" column>\n        <Title />\n      </FlexBox>\n      <GridSection className=\"row-basic\">\n        <Header text=\"Row (basic)\" subtitle=\"Props are string values\" />\n        {rowCombinations.map(([x, y], i) => (\n          <Item {...gridColumns} key={i} component=\"div\" column>\n            <Code\n              margin=\"0px 16px\"\n              code={`<FlexBox x=\"${x}\" y=\"${y}\">\n  ...\n</FlexBox>`}\n            />\n            <Inner x={x} y={y} sx={reponsiveFontSizes}>\n              <span>{rowEmoji}</span>\n            </Inner>\n          </Item>\n        ))}\n      </GridSection>\n      <GridSection className=\"row-responsive\">\n        <Header\n          text=\"Row (responsive)\"\n          subtitle=\"Responsive array or object values (resize the window to see different breakpoints)\"\n        />\n        <Item xs={12} lg={6}>\n          <Code\n            code={`<FlexBox\\n\\\n  x={[ \"center\", \"left\", \"center\", \"right\" ]}\\n\\\n  y={[ \"center\", \"top\", \"center\", \"bottom\" ]}\\n/>\\n\n// (interpreted as [ xs, sm, md, >= lg ])`}\n          />\n          <Inner\n            x={[\"center\", \"left\", \"center\", \"right\"]}\n            y={[\"center\", \"top\", \"center\", \"bottom\"]}\n            sx={{ minHeight: 240 }}\n          >\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n        <Item xs={12} lg={6}>\n          <Code\n            code={`<FlexBox\\n\\\n  x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\\n\\\n  y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\\n/>`}\n          />\n          <Inner\n            x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\n            y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\n            sx={{ minHeight: 240, ...reponsiveFontSizes }}\n          >\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n        <Item xs={12} lg={6}>\n          <Code\n            code={`<FlexBox\n  row={[ false, false, true, true, false ]}\n  // column={[ true, true, false, false, true ]} <- this is implied\n  x={[ \"center\", \"center\", \"space-between\", \"space-around\" ]}\n  y=\"center\"\n  gap={[2, 3, 4]}\\n/>\\n`}\n          />\n          <Inner\n            row={[false, false, true, true, false]}\n            // column={[true, true, false, false, true]} <- this is implied\n            x={[\"center\", \"center\", \"space-between\", \"space-around\"]}\n            y=\"center\"\n            gap={[2, 3, 4]}\n            sx={{ minHeight: 240, ...reponsiveFontSizes }}\n          >\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n        <Item xs={12} lg={6}>\n          <Code\n            code={`<FlexBox\n  row={{ xs: false, md: true, xl: false }}\n  // column={{ xs: true, md: false, xl: true }} <- this is implied\n  x={{ xs: \"center\", md: \"space-between\", lg: \"space-around\" }}\\n/>`}\n          />\n          <Inner\n            row={{ xs: false, md: true, xl: false }}\n            // column={{ xs: true, md: false, xl: true }} <- this is implied\n            x={{ xs: \"center\", md: \"space-between\", lg: \"space-around\" }}\n            gap={[2, 3, 4]}\n            sx={{ minHeight: 240, ...reponsiveFontSizes }}\n          >\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n            <span>{rowEmoji}</span>\n          </Inner>\n        </Item>\n      </GridSection>\n      <GridSection className=\"column-basic\">\n        <Header text=\"Column (basic)\" subtitle=\"Props are string values\" />\n        {columnCombinations.map(([y, x], i) => (\n          <Item item {...gridColumns} key={i} column>\n            <Code\n              margin=\"0px 16px\"\n              code={`<FlexBox x=\"${x}\" y=\"${y}\" column>\n  ...\n</FlexBox>`}\n            />\n            <Inner x={x} y={y} column sx={reponsiveFontSizes}>\n              <span>{columnEmoji}</span>\n            </Inner>\n          </Item>\n        ))}\n      </GridSection>\n      <GridSection className=\"column-responsive\">\n        <Header\n          text=\"Column (responsive)\"\n          subtitle=\"Props are array or object values (resize the window to see different breakpoints)\"\n        />\n        <Item xs={12} lg={6}>\n          <Code\n            code={`<FlexBox\\n\\\n  x={[ \"center\", \"left\", \"center\", \"right\" ]}\\n\\\n  y={[ \"center\", \"top\", \"center\", \"bottom\" ]}\\n\\\n  column\\n/>\\n\n// (interpreted as [ xs, sm, md, lg ])`}\n          />\n          <Inner\n            x={[\"center\", \"left\", \"center\", \"right\"]}\n            y={[\"center\", \"top\", \"center\", \"bottom\"]}\n            column\n            sx={{ minHeight: [240, 240, 480] }}\n          >\n            <span>{columnEmoji}</span>\n          </Inner>\n        </Item>\n        <Item xs={12} lg={6}>\n          <Code\n            code={`<FlexBox\\n\\\n  x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\\n\\\n  y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\\n\\\n  column\\n/>\\n\n// (interpreted as { sm: _, md: _, lg: _ })`}\n          />\n          <Inner\n            x={{ sm: \"left\", md: \"center\", lg: \"right\" }}\n            y={{ sm: \"top\", md: \"center\", lg: \"bottom\" }}\n            column\n            sx={{ minHeight: [240, 240, 480] }}\n          >\n            <span>{columnEmoji}</span>\n          </Inner>\n        </Item>\n      </GridSection>\n      <GridSection className=\"css-grid-basic\">\n        <Header text=\"Basic CSS Grid (FlexGrid)\" />\n        <FlexGrid item x=\"center\" y=\"center\">\n          <FlexGrid container spacing={2}>\n            {[...Array(12).keys()].map((i) => (\n              <FlexGrid item key={i} xs={12} sm={6} md={4} lg={3} xl={2}>\n                <Inner x=\"center\" y=\"center\">\n                  <Code\n                    code={`<FlexGrid item>\n  ${i + 1}\n</FlexGrid>`}\n                  />\n                </Inner>\n              </FlexGrid>\n            ))}\n          </FlexGrid>\n        </FlexGrid>\n      </GridSection>\n      <BoxSection className=\"css-grid-templating\" column>\n        <Header text=\"CSS Grid (FlexGrid) with grid templating\" />\n        <FlexGrid\n          item\n          x=\"center\"\n          y=\"center\"\n          ml={1}\n          mr={-1}\n          width=\"100%\"\n          sx={{ display: { xs: \"flex\", md: \"none\" }, opacity: 0.5 }}\n        >\n          (This demo is not formatted for smaller screens)\n        </FlexGrid>\n        <FlexGrid item x=\"center\" y=\"center\" width=\"100%\" sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n          <FlexGrid\n            container\n            spacing={[2, 3, 4]}\n            display=\"grid\"\n            sx={{\n              width: \"100%\",\n              bgcolor: \"background.default\",\n              gridTemplateColumns: \"auto 1fr auto\",\n              gridTemplateRows: \"auto 1fr auto\",\n              gridAutoRows: \"minmax(150px, 1fr)\",\n              gridTemplateAreas: `\n              \"header header header\"\n              \"left center right\"\n              \"footer footer footer\"`,\n              gridAutoFlow: \"row\",\n              \"& .header\": { gridArea: \"header\" },\n              \"& .left\": { gridArea: \"left\" },\n              \"& .center\": { gridArea: \"center\" },\n              \"& .right\": { gridArea: \"right\" },\n              \"& .footer\": { gridArea: \"footer\" },\n            }}\n          >\n            <FlexGrid item className=\"header\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code code={`<FlexGrid item className=\"header\">Header</FlexGrid>`} />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"left\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code\n                  code={`<FlexGrid item className=\"left\">\n  Left\n</FlexGrid>`}\n                />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"center\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code\n                  code={`<FlexGrid item className=\"center\">\n  Center\n</FlexGrid>`}\n                />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"right\">\n              <Inner x=\"center\" y=\"center\" minHeight=\"auto\">\n                <Code\n                  code={`<FlexGrid item className=\"right\">\n  Right\n</FlexGrid>`}\n                />\n              </Inner>\n            </FlexGrid>\n            <FlexGrid item className=\"footer\">\n              <Inner x=\"center\" y=\"center\" minHeight={\"auto\"}>\n                <Code code={`<FlexGrid item className=\"footer\">Footer</FlexGrid>`} />\n              </Inner>\n            </FlexGrid>\n          </FlexGrid>\n        </FlexGrid>\n      </BoxSection>\n      {muiVersion?.startsWith(\"5\") ? (\n        <GridSection className=\"mui-grid2-v5\">\n          <Header text=\"Unstable_Grid2 (@mui v5)\" />\n          <FlexGrid item x=\"center\" y=\"center\">\n            <FlexGrid2 container spacing={2}>\n              {[...Array(12).keys()].map((i) => (\n                // @ts-ignore - Grid2 props change between v5 and v6\n                <FlexGrid2 key={i} xs={12} sm={6} md={4} lg={3} xl={2} size={{ xs: 12, sm: 6, md: 4, lg: 3, xl: 2 }}>\n                  <Inner x=\"center\" y=\"center\">\n                    <Code\n                      code={`<FlexGrid2>\n  ${i + 1}\n</FlexGrid2>`}\n                    />\n                  </Inner>\n                </FlexGrid2>\n              ))}\n            </FlexGrid2>\n          </FlexGrid>\n        </GridSection>\n      ) : (\n        <GridSection className=\"mui-grid2-v5\">\n          <Header text=\"Grid2 (@mui v6+)\" />\n          <FlexGrid item x=\"center\" y=\"center\">\n            <FlexGrid2 container spacing={2}>\n              {[...Array(12).keys()].map((i) => (\n                // @ts-ignore - Grid2 props change between v5 and v6\n                <FlexGrid2 key={i} size={{ xs: 12, sm: 6, md: 4, lg: 3, xl: 2 }}>\n                  <Inner x=\"center\" y=\"center\">\n                    <Code\n                      code={`<FlexGrid2>\n  ${i + 1}\n</FlexGrid2>`}\n                    />\n                  </Inner>\n                </FlexGrid2>\n              ))}\n            </FlexGrid2>\n          </FlexGrid>\n        </GridSection>\n      )}\n      <BoxSection className=\"ref-test\" column>\n        <Header text=\"Ref test\" ref={ref} />\n        <Inner x=\"center\" y=\"center\" column>\n          <span>{ref?.current?.innerText ? `${ref?.current?.innerText} successful` : \"Failed\"}</span>\n          <Code code={ref?.current?.toString()} />\n        </Inner>\n      </BoxSection>\n      <BoxSection className=\"complex-props-test\" column>\n        <Header text=\"Complex props test\" />\n        {(() => {\n          const invalidProps = { prop: \"invalid\" } as FlexBoxProps<\"column\">;\n          return (\n            <FlexBox column>\n              <Code code={`<FlexBox prop=\"invalid\" />`} margin=\"0px 16px\" />\n              <Inner x=\"center\" y=\"center\" column {...invalidProps}>\n                <span>Complex &amp; invalid props test</span>\n              </Inner>\n            </FlexBox>\n          );\n        })()}\n      </BoxSection>\n    </FlexBox>\n  );\n};\n\nexport default FlexDemo;\nexport { FlexDemo };\n","import { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\n\nimport FlexDemo from \"./Flex.demo\";\n\nconst fontFamily = [\n  '\"Source Sans 3Variable\"',\n  '\"Source Sans 3\"',\n  \"-apple-system\",\n  \"BlinkMacSystemFont\",\n  '\"Segoe UI\"',\n  \"Source Sans Pro\",\n  \"Open Sans\",\n  \"Arial\",\n  \"sans-serif\",\n];\n\nconst preFontFamily = ['\"SF Mono\"', '\"Roboto Mono\"', \"Menlo\", '\"Source Code Pro\"', \"monospace\"];\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: fontFamily.join(\",\"),\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        \"div, span, p, h1, h2, h3, h4, h5, h6\": {\n          fontFamily: fontFamily.join(\",\"),\n        },\n        \"pre, code, code > *\": {\n          fontFamily: preFontFamily.join(\",\"),\n          fontSize: \"0.95em\",\n        },\n      },\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <FlexDemo />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nimport Demo from \"../demo/src/App\";\n\nconsole.log(\"React version\", React.version);\n\nconst App = () => {\n  return <Demo />;\n};\n\nexport default App;\n"],"names":["mapAlignment","alignment","Array","isArray","map","a","Object","fromEntries","entries","k","mapDirection","direction","reverse","includes","console","warn","d","stringOrArrayValue","value","index","mapResponsiveObject","main","cross","key","Error","startsWith","resolveDirection","row","column","fallback","rowIsNullOrUndefined","columnIsNullOrUndefined","rowIsFalse","columnIsFalse","chooseRow","chooseColumn","rowIsArray","columnIsArray","rowIsObject","columnIsObject","every","Boolean","rowIsFalsy","length","keys","columnIsFalsy","r","c","composite","JSON","stringify","longestLength","Math","max","i","push","filter","undefined","Set","mapFlexProps","props","ref","componentName","x","y","flexDirection","nowrap","rest","whiteSpace","flexProps","display","className","alignments","isColumn","justifyContent","alignItems","resolveAlignment","versionMismatchErr","muiVersion","MuiUnstable_Grid2","import","default","_err","MuiGrid2","FlexBox","forwardRef","React","MuiBox","FlexGrid","createElement","MuiGrid","FlexGrid2","xs","sm","md","lg","xl","size","sizeValues","createFlexGrid2","_xs","createUnstable_FlexGrid2","err","String","message","log","pkg","rowEmoji","columnEmoji","rowCombinations","columnCombinations","bgColor","Inner","styled","minHeight","sx","border","borderRadius","flexGrow","gap","padding","backgroundColor","paddingLeft","paddingRight","margin","rowArrow","span","style","writingMode","textOrientation","aria-label","colArrow","gridColumns","l","reponsiveFontSizes","fontSize","Header","text","subtitle","item","component","Typography","variant","toLowerCase","displayName","Code","inline","width","code","children","SyntaxHighlighter","language","customStyle","background","atelierCaveLight","toString","Title","Fragment","height","mb","ml","src","alt","Link","target","href","muiVersionMajor","br","GridSection","container","spacing","theme","unstable_sx","maxWidth","Item","BoxSection","rowGap","FlexDemo","useRef","render","_render","useState","useCallback","useRenderer","useEffect","current","p","bgcolor","mr","opacity","gridTemplateColumns","gridTemplateRows","gridAutoRows","gridTemplateAreas","gridAutoFlow","gridArea","innerText","prop","fontFamily","createTheme","typography","join","components","MuiCssBaseline","styleOverrides","App","ThemeProvider","CssBaseline","version","Demo"],"mappings":"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"}