import*as e from"react";import t,{forwardRef as r,useRef as n,useEffect as l,useState as a,useCallback as o,Suspense as i}from"react";import{styled as c,Typography as s,Link as m,createTheme as d,ThemeProvider as u,CssBaseline as p}from"@mui/material";import{version as x,major as f}from"@mui/material/version";import g from"react-syntax-highlighter";import{atelierCaveLight as h}from"react-syntax-highlighter/dist/esm/styles/hljs";import y from"@mui/material/Box";import E from"@mui/material/Grid";var b="mui-flexy",w="1.2.4";const v=e=>{if(e)if("string"==typeof e)switch(e){case"top":case"left":return"flex-start";case"bottom":case"right":return"flex-end";default:return e}else{if(Array.isArray(e))return e.map((e=>v(e)));if("object"==typeof e)return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,v(t)])))}},F=(e,t=!1)=>{if(!e)return"row";if("string"==typeof e)switch(["row","row-reverse","column","column-reverse"].includes(e)||console.warn(`Using { flex-direction: ${e} } with mui-flexy shorthand is not recommended because it can cause unexpected alignment and orientation anomalies.`),e){case"row":case"column":return`${e}${t?"-reverse":""}`;default:return e}else{if(Array.isArray(e))return e.map((e=>e?F(e,t):"row"));if("object"==typeof e)return Object.fromEntries(Object.entries(e).map((([e,r])=>[e,F(r,t)])))}},G=(e,t)=>"string"==typeof e?e:Array.isArray(e)?e?.[t]:void 0,j=(e,t,r)=>Object.fromEntries(Object.entries(e??[]).map((([e,n])=>{if("string"!=typeof n)throw new Error("Values for a flex direction ResponsiveStyleObject must be strings, e.g. { xs: 'row', sm: 'column' }");return n.startsWith("column")?[e,"string"==typeof r?r:v(r)?.[e]]:[e,"string"==typeof t?t:v(t)?.[e]]}))),S=(e,t,r=!1,n="row")=>{const l=null==e,a=null==t;if(l&&a)return F(n,r);const o=!1===e,i=!1===t;let c=[!0,"row"].includes(e)||i||a,s=[!0,"column"].includes(t)||o||l;o&&!i?(c=!1,s=!0):i&&!o?(s=!1,c=!0):c&&s&&(s=!1);const m=Array.isArray(e),d=Array.isArray(t),u="object"==typeof e&&!m&&!l,p="object"==typeof t&&!d&&!a;if([!u,!p,!m,!d].every(Boolean))return F(s?"column":c?"row":n,r);const x=!e||m&&!e.length||u&&!Object.keys(e).length,f=!t||d&&!t.length||p&&!Object.keys(t).length;if(m&&f)return e.map((e=>S(e,t,r,n)));if(d&&x)return t.map((t=>S(e,t,r,n)));if(m&&d){const l=[];if(e.length!==t.length){console.warn(`When using Array type ResponsiveFlexDirection for both 'row' and 'column', they should be the same length (have the same number of breakpoints) - got row=${JSON.stringify(e)} and column=${JSON.stringify(t)}. You probably want to use just one or the other.`);const a=Math.max(e.length,t.length);for(let o=0;o<a;o++){const a=e[o]??("column"===t[o]?"row":"column"),i=t[o]??("row"===e[o]?"column":"row");l.push(S(a,i,r,n))}return l}return e.map(((l,a)=>{let o=t[a];return l&&o&&(console.warn(`When using Array type ResponsiveFlexDirection for both 'row' and 'column', they cannot not both be true for the same breakpoint index - got row=${JSON.stringify(e)} and column=${JSON.stringify(t)}. Defaulting to 'row' for conflicting indices.`),o=!1),S(l,o,r,n)}))}if(u&&f)return Object.fromEntries(Object.entries(e).filter((([,e])=>![null,void 0].includes(e))).map((([e,t])=>[e,S(t,void 0,r,n)])));if(p&&x)return Object.fromEntries(Object.entries(t).filter((([,e])=>![null,void 0].includes(e))).map((([e,t])=>[e,S(void 0,t,r,n)])));if(u&&p){const l={},a=new Set([...Object.keys(e),...Object.keys(t)]);for(const o of a){const a=e[o],i=t[o];[null,void 0].includes(a)&&[null,void 0].includes(i)||(l[o]=S(a,i,r,n))}return l}},R=(e,t,r="Box")=>{const{x:n,y:l,row:a,column:o,flexDirection:i,reverse:c,nowrap:s,...m}=e,d=S(a,o,c,i),u=s?"nowrap":e.whiteSpace,p={display:m.display||"flex",whiteSpace:u},x=`${e.className||""} MuiFlex-root${r?` MuiFlex${r}-root`:""}`,f=((e,t,r)=>{if("string"==typeof e){const n=e.startsWith("column");return{justifyContent:v(n?r:t),alignItems:v(n?t:r)}}return Array.isArray(e)?{justifyContent:e.map(((e,n)=>G(v(e?.startsWith("column")?r:t),n))),alignItems:e.map(((e,n)=>G(v(e?.startsWith("column")?t:r),n)))}:"object"==typeof e?{justifyContent:j(e,t,r),alignItems:j(e,r,t)}:{justifyContent:t,alignItems:r}})(d,n,l);return{...m,...p,...f,flexDirection:d,className:x,ref:t}},k=y?.default??y,N=E?.default??E,A=((e={})=>r(((t,r)=>React.createElement(k,{...e,...R(t,r,"Box")}))))(),O=((e={})=>r(((t,r)=>React.createElement(N,{...e,...R(t,r,"Grid")}))))();let _;_=f<6?e.lazy((()=>Promise.resolve().then((function(){return ae})))):e.lazy((()=>Promise.resolve().then((function(){return de})))),console.log(b,w,"@mui/material",x),console.log("FlexBox:",A),console.log("FlexGrid:",O),console.log("FlexGrid2:",_);const $="🚣",B="🏛",C=[["left","top"],["left","center"],["left","bottom"],["left","flex-start"],["left","flex-end"],["left","stretch"],["left","baseline"],["right","top"],["right","center"],["right","bottom"],["right","flex-start"],["right","flex-end"],["right","stretch"],["right","baseline"],["center","top"],["center","center"],["center","bottom"],["center","flex-start"],["center","flex-end"],["center","stretch"],["center","baseline"],["space-between","top"],["space-between","center"],["space-between","bottom"],["space-around","top"],["space-around","center"],["space-around","bottom"],["space-evenly","top"],["space-evenly","center"],["space-evenly","bottom"]],H=[["top","left"],["top","center"],["top","right"],["top","flex-start"],["top","flex-end"],["top","stretch"],["top","baseline"],["bottom","left"],["bottom","center"],["bottom","right"],["bottom","flex-start"],["bottom","flex-end"],["bottom","stretch"],["bottom","baseline"],["center","left"],["center","center"],["center","right"],["center","flex-start"],["center","flex-end"],["center","stretch"],["center","baseline"],["space-between","left"],["space-between","center"],["space-between","right"],["space-around","left"],["space-around","center"],["space-around","right"],["space-evenly","left"],["space-evenly","center"],["space-evenly","right"]],z="#f6f5f6",M=c(A)((e=>({minHeight:e?.minHeight??e?.sx?.minHeight??120,border:"1.5px solid #e2ebf8",borderRadius:"4px",flexGrow:1,gap:"4px",padding:"4px",backgroundColor:"#fff","& > span":{backgroundColor:z,paddingLeft:"4px",paddingRight:"4px",borderRadius:"4px"},"& > pre":{margin:0,borderRadius:"4px"},"& pre, & code":{whiteSpace:"break-spaces"}}))),U=e.createElement("span",{style:{writingMode:"vertical-rl",textOrientation:"sideways"},"aria-label":"left-right arrow"},"⇅"),P=e.createElement("span",{style:{writingMode:"vertical-rl",textOrientation:"upright"},"aria-label":"up-down arrow"},"⇅"),W={xs:12,md:4,l:4,xl:4},I={"& pre":{fontSize:{xs:"0.85rem",md:"1.0vw",lg:"0.85rem"}}},T=r((({text:t,subtitle:r},n)=>e.createElement(O,{item:!0,xs:12,component:"header",ref:n,column:!0,gap:0},e.createElement(s,{component:"h2",variant:"h5",sx:{display:"flex",alignItems:"center"}},t,t.toLowerCase().includes("row")?U:t.toLowerCase().includes("column")?P:""),e.createElement(s,{component:"h4",variant:"subtitle1"},r))));T.displayName="Header";const D=({inline:t=!1,width:r,code:n,children:l,margin:a=""})=>e.createElement(g,{language:"javascript",customStyle:t?{display:"inline",padding:"2px 4px",width:r,background:z,borderRadius:4,margin:a}:{background:z,borderRadius:4,margin:a},style:h},l?.toString()||n||""),J=()=>e.createElement(e.Fragment,null,e.createElement(A,{component:t=>e.createElement(s,{...t,component:"h1"}),variant:"h4",row:!0,x:"left",y:"center",gap:2},e.createElement(A,{width:100,height:100,mb:2,ml:-1,column:!0,component:"img",src:"apple-touch-icon.png",alt:"mui-flexy logo"}),"mui-flexy for",e.createElement(m,{target:"_blank",href:"https://mui.com/",sx:{ml:-.75}},"@mui/material^",f)),e.createElement(s,{variant:"body1",component:"div"},"mui-flexy for MUI is a component wrapper for flexbox styles that allows you to easily             align and distribute flexy items in a space in a way that doesn't make you want             to pull your hair out trying to remember whether to use ",e.createElement(D,{inline:!0},"justify-content")," or ",e.createElement(D,{inline:!0},"align-items"),". Using a simple and consistent x, y coordinate system, you can stop worrying about           the CSS working group's choices and get on with your life of centering divs.",e.createElement("br",null),e.createElement("br",null),"Flex components inherit from either ",e.createElement(m,{target:"_blank",href:"https://mui.com/material-ui/react-box/"},"Box")," ","or"," ",e.createElement(m,{target:"_blank",href:"https://mui.com/material-ui/react-grid"},"Grid"),", depending on your needs. Simply use ",e.createElement(D,{inline:!0},"<FlexBox />")," or ",e.createElement(D,{inline:!0},"<FlexGrid />")," as you would Box or Grid. The default axis is ",e.createElement(D,{inline:!0},"row"),", but for good hygiene, you might want to set ",e.createElement(D,{inline:!0},"row")," anyway. If you want a column, just pass a ",e.createElement(D,{inline:!0},"column"),"prop, and Flexy will do the hard thinking and make CSS so you don't have to.")),L=c(((t={})=>e.createElement(O,{...t,container:!0,component:"section",spacing:[2,3,4]})))((({theme:e})=>e.unstable_sx({"&.MuiGrid-root":{ml:[-2,-3,-4],maxWidth:"fit-content",width:e=>[`calc(100% + ${e.spacing(2)})`,`calc(100% + ${e.spacing(3)})`,`calc(100% + ${e.spacing(4)})`]}}))),V=c(((t={})=>e.createElement(O,{...t,item:!0,xs:12,component:"div"})))({width:"100%"}),q=c(A)((({theme:e})=>e.unstable_sx({width:"100%",maxWidth:"100%",rowGap:[2,3,4]}))),Y=()=>{const t=n(null),r=(()=>{const[,e]=a({});return o((()=>e({})),[])})();return l((()=>{t.current&&r()}),[t,r]),e.createElement(A,{width:"100vw",p:[2,3,4],gap:[2,3,4],x:"center",component:"main",sx:{bgcolor:"#fff"},column:!0},e.createElement(A,{x:"left",y:"center",column:!0},e.createElement(J,null)),e.createElement(L,{className:"row-basic"},e.createElement(T,{text:"Row (basic)",subtitle:"Props are string values"}),C.map((([t,r],n)=>e.createElement(V,{...W,key:n,component:"div",column:!0},e.createElement(D,{margin:"0px 16px",code:`<FlexBox x="${t}" y="${r}">\n  ...\n</FlexBox>`}),e.createElement(M,{x:t,y:r,sx:I},e.createElement("span",null,$)))))),e.createElement(L,{className:"row-responsive"},e.createElement(T,{text:"Row (responsive)",subtitle:"Responsive array or object values (resize the window to see different breakpoints)"}),e.createElement(V,{xs:12,lg:6},e.createElement(D,{code:'<FlexBox\n  x={[ "center", "left", "center", "right" ]}\n  y={[ "center", "top", "center", "bottom" ]}\n/>\n\n// (interpreted as [ xs, sm, md, >= lg ])'}),e.createElement(M,{x:["center","left","center","right"],y:["center","top","center","bottom"],sx:{minHeight:240}},e.createElement("span",null,$))),e.createElement(V,{xs:12,lg:6},e.createElement(D,{code:'<FlexBox\n  x={{ sm: "left", md: "center", lg: "right" }}\n  y={{ sm: "top", md: "center", lg: "bottom" }}\n/>'}),e.createElement(M,{x:{sm:"left",md:"center",lg:"right"},y:{sm:"top",md:"center",lg:"bottom"},sx:{minHeight:240,...I}},e.createElement("span",null,$))),e.createElement(V,{xs:12,lg:6},e.createElement(D,{code:'<FlexBox\n  row={[ false, false, true, true, false ]}\n  // column={[ true, true, false, false, true ]} <- this is implied\n  x={[ "center", "center", "space-between", "space-around" ]}\n  y="center"\n  gap={[2, 3, 4]}\n/>\n'}),e.createElement(M,{row:[!1,!1,!0,!0,!1],x:["center","center","space-between","space-around"],y:"center",gap:[2,3,4],sx:{minHeight:240,...I}},e.createElement("span",null,$),e.createElement("span",null,$),e.createElement("span",null,$))),e.createElement(V,{xs:12,lg:6},e.createElement(D,{code:'<FlexBox\n  row={{ xs: false, md: true, xl: false }}\n  // column={{ xs: true, md: false, xl: true }} <- this is implied\n  x={{ xs: "center", md: "space-between", lg: "space-around" }}\n/>'}),e.createElement(M,{row:{xs:!1,md:!0,xl:!1},x:{xs:"center",md:"space-between",lg:"space-around"},gap:[2,3,4],sx:{minHeight:240,...I}},e.createElement("span",null,$),e.createElement("span",null,$),e.createElement("span",null,$)))),e.createElement(L,{className:"column-basic"},e.createElement(T,{text:"Column (basic)",subtitle:"Props are string values"}),H.map((([t,r],n)=>e.createElement(V,{item:!0,...W,key:n,column:!0},e.createElement(D,{margin:"0px 16px",code:`<FlexBox x="${r}" y="${t}" column>\n  ...\n</FlexBox>`}),e.createElement(M,{x:r,y:t,column:!0,sx:I},e.createElement("span",null,B)))))),e.createElement(L,{className:"column-responsive"},e.createElement(T,{text:"Column (responsive)",subtitle:"Props are array or object values (resize the window to see different breakpoints)"}),e.createElement(V,{xs:12,lg:6},e.createElement(D,{code:'<FlexBox\n  x={[ "center", "left", "center", "right" ]}\n  y={[ "center", "top", "center", "bottom" ]}\n  column\n/>\n\n// (interpreted as [ xs, sm, md, lg ])'}),e.createElement(M,{x:["center","left","center","right"],y:["center","top","center","bottom"],column:!0,sx:{minHeight:[240,240,480]}},e.createElement("span",null,B))),e.createElement(V,{xs:12,lg:6},e.createElement(D,{code:'<FlexBox\n  x={{ sm: "left", md: "center", lg: "right" }}\n  y={{ sm: "top", md: "center", lg: "bottom" }}\n  column\n/>\n\n// (interpreted as { sm: _, md: _, lg: _ })'}),e.createElement(M,{x:{sm:"left",md:"center",lg:"right"},y:{sm:"top",md:"center",lg:"bottom"},column:!0,sx:{minHeight:[240,240,480]}},e.createElement("span",null,B)))),e.createElement(L,{className:"css-grid-basic"},e.createElement(T,{text:"Basic CSS Grid (FlexGrid)"}),e.createElement(O,{item:!0,x:"center",y:"center"},e.createElement(O,{container:!0,spacing:2},[...Array(12).keys()].map((t=>e.createElement(O,{item:!0,key:t,xs:12,sm:6,md:4,lg:3,xl:2},e.createElement(M,{x:"center",y:"center"},e.createElement(D,{code:`<FlexGrid item>\n  ${t+1}\n</FlexGrid>`})))))))),e.createElement(q,{className:"css-grid-templating",column:!0},e.createElement(T,{text:"CSS Grid (FlexGrid) with grid templating"}),e.createElement(O,{item:!0,x:"center",y:"center",ml:1,mr:-1,width:"100%",sx:{display:{xs:"flex",md:"none"},opacity:.5}},"(This demo is not formatted for smaller screens)"),e.createElement(O,{item:!0,x:"center",y:"center",width:"100%",sx:{display:{xs:"none",md:"flex"}}},e.createElement(O,{container:!0,spacing:[2,3,4],display:"grid",sx:{width:"100%",bgcolor:"background.default",gridTemplateColumns:"auto 1fr auto",gridTemplateRows:"auto 1fr auto",gridAutoRows:"minmax(150px, 1fr)",gridTemplateAreas:'\n              "header header header"\n              "left center right"\n              "footer footer footer"',gridAutoFlow:"row","& .header":{gridArea:"header"},"& .left":{gridArea:"left"},"& .center":{gridArea:"center"},"& .right":{gridArea:"right"},"& .footer":{gridArea:"footer"}}},e.createElement(O,{item:!0,className:"header"},e.createElement(M,{x:"center",y:"center",minHeight:"auto"},e.createElement(D,{code:'<FlexGrid item className="header">Header</FlexGrid>'}))),e.createElement(O,{item:!0,className:"left"},e.createElement(M,{x:"center",y:"center",minHeight:"auto"},e.createElement(D,{code:'<FlexGrid item className="left">\n  Left\n</FlexGrid>'}))),e.createElement(O,{item:!0,className:"center"},e.createElement(M,{x:"center",y:"center",minHeight:"auto"},e.createElement(D,{code:'<FlexGrid item className="center">\n  Center\n</FlexGrid>'}))),e.createElement(O,{item:!0,className:"right"},e.createElement(M,{x:"center",y:"center",minHeight:"auto"},e.createElement(D,{code:'<FlexGrid item className="right">\n  Right\n</FlexGrid>'}))),e.createElement(O,{item:!0,className:"footer"},e.createElement(M,{x:"center",y:"center",minHeight:"auto"},e.createElement(D,{code:'<FlexGrid item className="footer">Footer</FlexGrid>'})))))),x?.startsWith("5")?e.createElement(L,{className:"mui-grid2-v5"},e.createElement(T,{text:"Unstable_Grid2 (@mui v5)"}),e.createElement(O,{item:!0,x:"center",y:"center"},e.createElement(_,{container:!0,spacing:2},[...Array(12).keys()].map((t=>e.createElement(_,{key:t,xs:12,sm:6,md:4,lg:3,xl:2,size:{xs:12,sm:6,md:4,lg:3,xl:2}},e.createElement(M,{x:"center",y:"center"},e.createElement(D,{code:`<FlexGrid2>\n  ${t+1}\n</FlexGrid2>`})))))))):e.createElement(L,{className:"mui-grid2-v5"},e.createElement(T,{text:"Grid2 (@mui v6+)"}),e.createElement(O,{item:!0,x:"center",y:"center"},e.createElement(_,{container:!0,spacing:2},[...Array(12).keys()].map((t=>e.createElement(_,{key:t,size:{xs:12,sm:6,md:4,lg:3,xl:2}},e.createElement(M,{x:"center",y:"center"},e.createElement(D,{code:`<FlexGrid2>\n  ${t+1}\n</FlexGrid2>`})))))))),e.createElement(q,{className:"ref-test",column:!0},e.createElement(T,{text:"Ref test",ref:t}),e.createElement(M,{x:"center",y:"center",column:!0},e.createElement("span",null,t?.current?.innerText?`${t?.current?.innerText} successful`:"Failed"),e.createElement(D,{code:t?.current?.toString()}))),e.createElement(q,{className:"complex-props-test",column:!0},e.createElement(T,{text:"Complex props test"}),e.createElement(A,{column:!0},e.createElement(D,{code:'<FlexBox prop="invalid" />',margin:"0px 16px"}),e.createElement(M,{x:"center",y:"center",column:!0,prop:"invalid"},e.createElement("span",null,"Complex & invalid props test")))))},K=['"Source Sans 3Variable"','"Source Sans 3"',"-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Source Sans Pro","Open Sans","Arial","sans-serif"],Q=d({typography:{fontFamily:K.join(",")},components:{MuiCssBaseline:{styleOverrides:{"div, span, p, h1, h2, h3, h4, h5, h6":{fontFamily:K.join(",")},"pre, code, code > *":{fontFamily:['"SF Mono"','"Roboto Mono"',"Menlo",'"Source Code Pro"',"monospace"].join(","),fontSize:"0.95em"}}}}}),X=()=>React.createElement(u,{theme:Q},React.createElement(p,null),React.createElement(Y,null));console.log("React version",t.version);const Z=()=>t.createElement(X,null),ee=`@mui/material version is ${f}, but Unstable_FlexGrid2 is only available in v5. Please use FlexGrid2 instead.`,te=(e={})=>{let t;try{if(f>5)throw new Error(ee);t=React.lazy((()=>import("@mui/material/Unstable_Grid2")))}catch(e){console.warn(ee)}return r(((r,n)=>{const{size:l,...a}=r,o="number"==typeof l||"string"==typeof l?l:l?.xs,{xs:c,sm:s,md:m,lg:d,xl:u}=l||{};return r={...a,xs:o||c,sm:s,md:m,lg:d,xl:u,ref:n},React.createElement(i,{fallback:React.createElement("div",{"data-mui-flexy-unstable-grid2":"loading"})},React.createElement(t,{...e,...R(r,n,"Grid2")}))}))},re=te(),ne=te({row:!0}),le=te({column:!0});var ae=Object.freeze({__proto__:null,Unstable_FlexGrid2:re,Unstable_FlexGrid2Column:le,Unstable_FlexGrid2Row:ne,createUnstable_FlexGrid2:te,default:re});const oe=`@mui/material version is ${f}, but v6 or above is required to use FlexGrid2. Please use Unstable_FlexGrid2 instead.`,ie=(e={})=>{let t;try{if(f<6)throw new Error(oe);t=React.lazy((()=>import("@mui/material/Grid2")))}catch(e){console.warn(oe)}return r(((r,n)=>{const{xs:l,sm:a,md:o,lg:c,xl:s,size:m,...d}=r,u=[l,a,o,c,s].filter((e=>null!=e));return r={...d,size:m??(u.every((e=>e===u[0]))?u[0]:{xs:l,sm:a,md:o,lg:c,xl:s})},React.createElement(i,{fallback:React.createElement("div",{"data-mui-flexy-grid2":"loading"})},React.createElement(t,{...e,...R(r,n,"Grid2")}))}))},ce=ie(),se=ie({row:!0}),me=ie({column:!0});var de=Object.freeze({__proto__:null,FlexGrid2:ce,FlexGrid2Column:me,FlexGrid2Row:se,createFlexGrid2:ie,default:ce});export{Z as default};
//# sourceMappingURL=docs.js.map
