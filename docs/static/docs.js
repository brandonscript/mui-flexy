import e,{forwardRef as t,useRef as n,useEffect as r,useState as a,useCallback as c}from"react";import{styled as l,Typography as o,Link as i,createTheme as s,ThemeProvider as m,CssBaseline as u}from"@mui/material";import{major as d,version as p}from"@mui/material/version";import x from"react-syntax-highlighter";import{atelierCaveLight as g}from"react-syntax-highlighter/dist/esm/styles/hljs";import f from"@mui/material/Box";import h from"@mui/material/Grid";var y="mui-flexy",R="1.2.1";const E=e=>{if(e)if("string"==typeof e)switch(e){case"top":case"left":return"flex-start";case"bottom":case"right":return"flex-end";default:return e}else{if(Array.isArray(e))return e.map((e=>E(e)));if("object"==typeof e)return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,E(t)])))}},b=(e,t=!1)=>{if(!e)return"row";if("string"==typeof e)switch(["row","row-reverse","column","column-reverse"].includes(e)||console.warn(`Using { flex-direction: ${e} } with mui-flexy shorthand is not recommended because it can cause unexpected alignment and orientation anomalies.`),e){case"row":case"column":return`${e}${t?"-reverse":""}`;default:return e}else{if(Array.isArray(e))return e.map((e=>e?b(e,t):"row"));if("object"==typeof e)return Object.fromEntries(Object.entries(e).map((([e,n])=>[e,b(n,t)])))}},w=(e,t)=>"string"==typeof e?e:Array.isArray(e)?e?.[t]:void 0,v=(e,t,n)=>Object.fromEntries(Object.entries(e??[]).map((([e,r])=>{if("string"!=typeof r)throw new Error("Values for a flex direction ResponsiveStyleObject must be strings, e.g. { xs: 'row', sm: 'column' }");return r.startsWith("column")?[e,"string"==typeof n?n:E(n)?.[e]]:[e,"string"==typeof t?t:E(t)?.[e]]}))),F=(e,t,n=!1,r="row")=>{const a=null==e,c=null==t;if(a&&c)return b(r,n);const l=!1===e,o=!1===t;let i=[!0,"row"].includes(e)||o||c,s=[!0,"column"].includes(t)||l||a;l&&!o?(i=!1,s=!0):o&&!l?(s=!1,i=!0):i&&s&&(s=!1);const m=Array.isArray(e),u=Array.isArray(t),d="object"==typeof e&&!m&&!a,p="object"==typeof t&&!u&&!c;if([!d,!p,!m,!u].every(Boolean))return b(s?"column":i?"row":r,n);const x=!e||m&&!e.length||d&&!Object.keys(e).length,g=!t||u&&!t.length||p&&!Object.keys(t).length;if(m&&g)return e.map((e=>F(e,t,n,r)));if(u&&x)return t.map((t=>F(e,t,n,r)));if(m&&u){const a=[];if(e.length!==t.length){console.warn(`When using Array type ResponsiveFlexDirection for both 'row' and 'column', they should be the same length (have the same number of breakpoints) - got row=${JSON.stringify(e)} and column=${JSON.stringify(t)}. You probably want to use just one or the other.`);const c=Math.max(e.length,t.length);for(let l=0;l<c;l++){const c=e[l]??("column"===t[l]?"row":"column"),o=t[l]??("row"===e[l]?"column":"row");a.push(F(c,o,n,r))}return a}return e.map(((a,c)=>{let l=t[c];return a&&l&&(console.warn(`When using Array type ResponsiveFlexDirection for both 'row' and 'column', they cannot not both be true for the same breakpoint index - got row=${JSON.stringify(e)} and column=${JSON.stringify(t)}. Defaulting to 'row' for conflicting indices.`),l=!1),F(a,l,n,r)}))}if(d&&g)return Object.fromEntries(Object.entries(e).filter((([,e])=>![null,void 0].includes(e))).map((([e,t])=>[e,F(t,void 0,n,r)])));if(p&&x)return Object.fromEntries(Object.entries(t).filter((([,e])=>![null,void 0].includes(e))).map((([e,t])=>[e,F(void 0,t,n,r)])));if(d&&p){const a={},c=new Set([...Object.keys(e),...Object.keys(t)]);for(const l of c){const c=e[l],o=t[l];[null,void 0].includes(c)&&[null,void 0].includes(o)||(a[l]=F(c,o,n,r))}return a}},G=(e,t,n="Box")=>{const{x:r,y:a,row:c,column:l,flexDirection:o,reverse:i,nowrap:s,...m}=e,u=F(c,l,i,o),d=s?"nowrap":e.whiteSpace,p={display:m.display||"flex",whiteSpace:d},x=`${e.className||""} MuiFlex-root${n?` MuiFlex${n}-root`:""}`,g=((e,t,n)=>{if("string"==typeof e){const r=e.startsWith("column");return{justifyContent:E(r?n:t),alignItems:E(r?t:n)}}return Array.isArray(e)?{justifyContent:e.map(((e,r)=>w(E(e?.startsWith("column")?n:t),r))),alignItems:e.map(((e,r)=>w(E(e?.startsWith("column")?t:n),r)))}:"object"==typeof e?{justifyContent:v(e,t,n),alignItems:v(e,n,t)}:{justifyContent:t,alignItems:n}})(u,r,a);return{...m,...p,...g,flexDirection:u,className:x,ref:t}},S=`@mui/material version is ${d}, but Unstable_FlexGrid2 is only available in v5. Please use FlexGrid2 instead.`;let j;try{j=(await import("@mui/material/Unstable_Grid2")).default}catch(e){console.warn(S)}const k=`@mui/material version is ${d}, but v6 or above is required to use FlexGrid2. Please use Unstable_FlexGrid2 instead.`;let N;try{N=(await import("@mui/material/Grid2")).default}catch(e){console.warn(k)}const A=t(((e,t)=>React.createElement(f,G(e,t,"Box")))),O=t(((e,t)=>React.createElement(h,G(e,t,"Grid")))),$=(()=>{try{return d>5?(()=>{if(d<6)throw new Error(k);return t(((e,t)=>{const{xs:n,sm:r,md:a,lg:c,xl:l,size:o,...i}=e,s=[n,r,a,c,l].filter((e=>null!=e));return e={...i,size:o??(s.every((e=>e===s[0]))?s[0]:{xs:n,sm:r,md:a,lg:c,xl:l})},React.createElement(N,G(e,t,"Grid2"))}))})():(()=>{if(d>5)throw new Error(S);return t(((e,t)=>{const{size:n,...r}=e,a="number"==typeof n||"string"==typeof n?n:n?.xs,{xs:c,sm:l,md:o,lg:i,xl:s}=n||{};return e={...r,xs:a||c,sm:l,md:o,lg:i,xl:s,ref:t},React.createElement(j,G(e,t,"Grid2"))}))})()}catch(e){return t(((t,n)=>React.createElement(f,{...t,ref:n},String(e?.message||e))))}})();console.log(y,R,"@mui/material",p),console.log("FlexBox:",A),console.log("FlexGrid:",O),console.log("FlexGrid2:",$);const B="🚣",C="🏛",H=[["left","top"],["left","center"],["left","bottom"],["left","flex-start"],["left","flex-end"],["left","stretch"],["left","baseline"],["right","top"],["right","center"],["right","bottom"],["right","flex-start"],["right","flex-end"],["right","stretch"],["right","baseline"],["center","top"],["center","center"],["center","bottom"],["center","flex-start"],["center","flex-end"],["center","stretch"],["center","baseline"],["space-between","top"],["space-between","center"],["space-between","bottom"],["space-around","top"],["space-around","center"],["space-around","bottom"],["space-evenly","top"],["space-evenly","center"],["space-evenly","bottom"]],M=[["top","left"],["top","center"],["top","right"],["top","flex-start"],["top","flex-end"],["top","stretch"],["top","baseline"],["bottom","left"],["bottom","center"],["bottom","right"],["bottom","flex-start"],["bottom","flex-end"],["bottom","stretch"],["bottom","baseline"],["center","left"],["center","center"],["center","right"],["center","flex-start"],["center","flex-end"],["center","stretch"],["center","baseline"],["space-between","left"],["space-between","center"],["space-between","right"],["space-around","left"],["space-around","center"],["space-around","right"],["space-evenly","left"],["space-evenly","center"],["space-evenly","right"]],_="#f6f5f6",z=l(A)((e=>({minHeight:e?.minHeight??e?.sx?.minHeight??120,border:"1.5px solid #e2ebf8",borderRadius:"4px",flexGrow:1,gap:"4px",padding:"4px",backgroundColor:"#fff","& > span":{backgroundColor:_,paddingLeft:"4px",paddingRight:"4px",borderRadius:"4px"},"& > pre":{margin:0,borderRadius:"4px"},"& pre, & code":{whiteSpace:"break-spaces"}}))),W=React.createElement("span",{style:{writingMode:"vertical-rl",textOrientation:"sideways"},"aria-label":"left-right arrow"},"⇅"),I=React.createElement("span",{style:{writingMode:"vertical-rl",textOrientation:"upright"},"aria-label":"up-down arrow"},"⇅"),U={xs:12,md:4,l:4,xl:4},P={"& pre":{fontSize:{xs:"0.85rem",md:"1.0vw",lg:"0.85rem"}}},T=t((({text:e,subtitle:t},n)=>React.createElement(O,{item:!0,xs:12,component:"header",ref:n,column:!0,gap:0},React.createElement(o,{component:"h2",variant:"h5",sx:{display:"flex",alignItems:"center"}},e,e.toLowerCase().includes("row")?W:e.toLowerCase().includes("column")?I:""),React.createElement(o,{component:"h4",variant:"subtitle1"},t))));T.displayName="Header";const D=({inline:e=!1,width:t,code:n,children:r,margin:a=""})=>React.createElement(x,{language:"javascript",customStyle:e?{display:"inline",padding:"2px 4px",width:t,background:_,borderRadius:4,margin:a}:{background:_,borderRadius:4,margin:a},style:g},r?.toString()||n||""),J=()=>React.createElement(React.Fragment,null,React.createElement(A,{component:e=>React.createElement(o,{...e,component:"h1"}),variant:"h4",row:!0,x:"left",y:"center",gap:2},React.createElement(A,{width:100,height:100,mb:2,ml:-1,column:!0,component:"img",src:"apple-touch-icon.png",alt:"mui-flexy logo"}),"mui-flexy for",React.createElement(i,{target:"_blank",href:"https://mui.com/",sx:{ml:-.75}},"@mui/material^",d)),React.createElement(o,{variant:"body1",component:"div"},"mui-flexy for MUI is a component wrapper for flexbox styles that allows you to easily             align and distribute flexy items in a space in a way that doesn't make you want             to pull your hair out trying to remember whether to use ",React.createElement(D,{inline:!0},"justify-content")," or ",React.createElement(D,{inline:!0},"align-items"),". Using a simple and consistent x, y coordinate system, you can stop worrying about           the CSS working group's choices and get on with your life of centering divs.",React.createElement("br",null),React.createElement("br",null),"Flex components inherit from either ",React.createElement(i,{target:"_blank",href:"https://mui.com/material-ui/react-box/"},"Box")," ","or"," ",React.createElement(i,{target:"_blank",href:"https://mui.com/material-ui/react-grid"},"Grid"),", depending on your needs. Simply use ",React.createElement(D,{inline:!0},"<FlexBox />")," or ",React.createElement(D,{inline:!0},"<FlexGrid />")," as you would Box or Grid. The default axis is ",React.createElement(D,{inline:!0},"row"),", but for good hygiene, you might want to set ",React.createElement(D,{inline:!0},"row")," anyway. If you want a column, just pass a ",React.createElement(D,{inline:!0},"column"),"prop, and Flexy will do the hard thinking and make CSS so you don't have to.")),L=l(((e={})=>React.createElement(O,{...e,container:!0,component:"section",spacing:[2,3,4]})))((({theme:e})=>e.unstable_sx({"&.MuiGrid-root":{ml:[-2,-3,-4],maxWidth:"fit-content",width:e=>[`calc(100% + ${e.spacing(2)})`,`calc(100% + ${e.spacing(3)})`,`calc(100% + ${e.spacing(4)})`]}}))),V=l(((e={})=>React.createElement(O,{...e,item:!0,xs:12,component:"div"})))({width:"100%"}),q=l(A)((({theme:e})=>e.unstable_sx({width:"100%",maxWidth:"100%",rowGap:[2,3,4]}))),Y=()=>{const e=n(null),t=(()=>{const[,e]=a({});return c((()=>e({})),[])})();return r((()=>{e.current&&t()}),[e,t]),React.createElement(A,{width:"100vw",p:[2,3,4],gap:[2,3,4],x:"center",component:"main",sx:{bgcolor:"#fff"},column:!0},React.createElement(A,{x:"left",y:"center",column:!0},React.createElement(J,null)),React.createElement(L,{className:"row-basic"},React.createElement(T,{text:"Row (basic)",subtitle:"Props are string values"}),H.map((([e,t],n)=>React.createElement(V,{...U,key:n,component:"div",column:!0},React.createElement(D,{margin:"0px 16px",code:`<FlexBox x="${e}" y="${t}">\n  ...\n</FlexBox>`}),React.createElement(z,{x:e,y:t,sx:P},React.createElement("span",null,B)))))),React.createElement(L,{className:"row-responsive"},React.createElement(T,{text:"Row (responsive)",subtitle:"Responsive array or object values (resize the window to see different breakpoints)"}),React.createElement(V,{xs:12,lg:6},React.createElement(D,{code:'<FlexBox\n  x={[ "center", "left", "center", "right" ]}\n  y={[ "center", "top", "center", "bottom" ]}\n/>\n\n// (interpreted as [ xs, sm, md, >= lg ])'}),React.createElement(z,{x:["center","left","center","right"],y:["center","top","center","bottom"],sx:{minHeight:240}},React.createElement("span",null,B))),React.createElement(V,{xs:12,lg:6},React.createElement(D,{code:'<FlexBox\n  x={{ sm: "left", md: "center", lg: "right" }}\n  y={{ sm: "top", md: "center", lg: "bottom" }}\n/>'}),React.createElement(z,{x:{sm:"left",md:"center",lg:"right"},y:{sm:"top",md:"center",lg:"bottom"},sx:{minHeight:240,...P}},React.createElement("span",null,B))),React.createElement(V,{xs:12,lg:6},React.createElement(D,{code:'<FlexBox\n  row={[ false, false, true, true, false ]}\n  // column={[ true, true, false, false, true ]} <- this is implied\n  x={[ "center", "center", "space-between", "space-around" ]}\n  y="center"\n  gap={[2, 3, 4]}\n/>\n'}),React.createElement(z,{row:[!1,!1,!0,!0,!1],x:["center","center","space-between","space-around"],y:"center",gap:[2,3,4],sx:{minHeight:240,...P}},React.createElement("span",null,B),React.createElement("span",null,B),React.createElement("span",null,B))),React.createElement(V,{xs:12,lg:6},React.createElement(D,{code:'<FlexBox\n  row={{ xs: false, md: true, xl: false }}\n  // column={{ xs: true, md: false, xl: true }} <- this is implied\n  x={{ xs: "center", md: "space-between", lg: "space-around" }}\n/>'}),React.createElement(z,{row:{xs:!1,md:!0,xl:!1},x:{xs:"center",md:"space-between",lg:"space-around"},gap:[2,3,4],sx:{minHeight:240,...P}},React.createElement("span",null,B),React.createElement("span",null,B),React.createElement("span",null,B)))),React.createElement(L,{className:"column-basic"},React.createElement(T,{text:"Column (basic)",subtitle:"Props are string values"}),M.map((([e,t],n)=>React.createElement(V,{item:!0,...U,key:n,column:!0},React.createElement(D,{margin:"0px 16px",code:`<FlexBox x="${t}" y="${e}" column>\n  ...\n</FlexBox>`}),React.createElement(z,{x:t,y:e,column:!0,sx:P},React.createElement("span",null,C)))))),React.createElement(L,{className:"column-responsive"},React.createElement(T,{text:"Column (responsive)",subtitle:"Props are array or object values (resize the window to see different breakpoints)"}),React.createElement(V,{xs:12,lg:6},React.createElement(D,{code:'<FlexBox\n  x={[ "center", "left", "center", "right" ]}\n  y={[ "center", "top", "center", "bottom" ]}\n  column\n/>\n\n// (interpreted as [ xs, sm, md, lg ])'}),React.createElement(z,{x:["center","left","center","right"],y:["center","top","center","bottom"],column:!0,sx:{minHeight:[240,240,480]}},React.createElement("span",null,C))),React.createElement(V,{xs:12,lg:6},React.createElement(D,{code:'<FlexBox\n  x={{ sm: "left", md: "center", lg: "right" }}\n  y={{ sm: "top", md: "center", lg: "bottom" }}\n  column\n/>\n\n// (interpreted as { sm: _, md: _, lg: _ })'}),React.createElement(z,{x:{sm:"left",md:"center",lg:"right"},y:{sm:"top",md:"center",lg:"bottom"},column:!0,sx:{minHeight:[240,240,480]}},React.createElement("span",null,C)))),React.createElement(L,{className:"css-grid-basic"},React.createElement(T,{text:"Basic CSS Grid (FlexGrid)"}),React.createElement(O,{item:!0,x:"center",y:"center"},React.createElement(O,{container:!0,spacing:2},[...Array(12).keys()].map((e=>React.createElement(O,{item:!0,key:e,xs:12,sm:6,md:4,lg:3,xl:2},React.createElement(z,{x:"center",y:"center"},React.createElement(D,{code:`<FlexGrid item>\n  ${e+1}\n</FlexGrid>`})))))))),React.createElement(q,{className:"css-grid-templating",column:!0},React.createElement(T,{text:"CSS Grid (FlexGrid) with grid templating"}),React.createElement(O,{item:!0,x:"center",y:"center",ml:1,mr:-1,width:"100%",sx:{display:{xs:"flex",md:"none"},opacity:.5}},"(This demo is not formatted for smaller screens)"),React.createElement(O,{item:!0,x:"center",y:"center",width:"100%",sx:{display:{xs:"none",md:"flex"}}},React.createElement(O,{container:!0,spacing:[2,3,4],display:"grid",sx:{width:"100%",bgcolor:"background.default",gridTemplateColumns:"auto 1fr auto",gridTemplateRows:"auto 1fr auto",gridAutoRows:"minmax(150px, 1fr)",gridTemplateAreas:'\n              "header header header"\n              "left center right"\n              "footer footer footer"',gridAutoFlow:"row","& .header":{gridArea:"header"},"& .left":{gridArea:"left"},"& .center":{gridArea:"center"},"& .right":{gridArea:"right"},"& .footer":{gridArea:"footer"}}},React.createElement(O,{item:!0,className:"header"},React.createElement(z,{x:"center",y:"center",minHeight:"auto"},React.createElement(D,{code:'<FlexGrid item className="header">Header</FlexGrid>'}))),React.createElement(O,{item:!0,className:"left"},React.createElement(z,{x:"center",y:"center",minHeight:"auto"},React.createElement(D,{code:'<FlexGrid item className="left">\n  Left\n</FlexGrid>'}))),React.createElement(O,{item:!0,className:"center"},React.createElement(z,{x:"center",y:"center",minHeight:"auto"},React.createElement(D,{code:'<FlexGrid item className="center">\n  Center\n</FlexGrid>'}))),React.createElement(O,{item:!0,className:"right"},React.createElement(z,{x:"center",y:"center",minHeight:"auto"},React.createElement(D,{code:'<FlexGrid item className="right">\n  Right\n</FlexGrid>'}))),React.createElement(O,{item:!0,className:"footer"},React.createElement(z,{x:"center",y:"center",minHeight:"auto"},React.createElement(D,{code:'<FlexGrid item className="footer">Footer</FlexGrid>'})))))),p?.startsWith("5")?React.createElement(L,{className:"mui-grid2-v5"},React.createElement(T,{text:"Unstable_Grid2 (@mui v5)"}),React.createElement(O,{item:!0,x:"center",y:"center"},React.createElement($,{container:!0,spacing:2},[...Array(12).keys()].map((e=>React.createElement($,{key:e,xs:12,sm:6,md:4,lg:3,xl:2,size:{xs:12,sm:6,md:4,lg:3,xl:2}},React.createElement(z,{x:"center",y:"center"},React.createElement(D,{code:`<FlexGrid2>\n  ${e+1}\n</FlexGrid2>`})))))))):React.createElement(L,{className:"mui-grid2-v5"},React.createElement(T,{text:"Grid2 (@mui v6+)"}),React.createElement(O,{item:!0,x:"center",y:"center"},React.createElement($,{container:!0,spacing:2},[...Array(12).keys()].map((e=>React.createElement($,{key:e,size:{xs:12,sm:6,md:4,lg:3,xl:2}},React.createElement(z,{x:"center",y:"center"},React.createElement(D,{code:`<FlexGrid2>\n  ${e+1}\n</FlexGrid2>`})))))))),React.createElement(q,{className:"ref-test",column:!0},React.createElement(T,{text:"Ref test",ref:e}),React.createElement(z,{x:"center",y:"center",column:!0},React.createElement("span",null,e?.current?.innerText?`${e?.current?.innerText} successful`:"Failed"),React.createElement(D,{code:e?.current?.toString()}))),React.createElement(q,{className:"complex-props-test",column:!0},React.createElement(T,{text:"Complex props test"}),React.createElement(A,{column:!0},React.createElement(D,{code:'<FlexBox prop="invalid" />',margin:"0px 16px"}),React.createElement(z,{x:"center",y:"center",column:!0,prop:"invalid"},React.createElement("span",null,"Complex & invalid props test")))))},K=['"Source Sans 3Variable"','"Source Sans 3"',"-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Source Sans Pro","Open Sans","Arial","sans-serif"],Q=s({typography:{fontFamily:K.join(",")},components:{MuiCssBaseline:{styleOverrides:{"div, span, p, h1, h2, h3, h4, h5, h6":{fontFamily:K.join(",")},"pre, code, code > *":{fontFamily:['"SF Mono"','"Roboto Mono"',"Menlo",'"Source Code Pro"',"monospace"].join(","),fontSize:"0.95em"}}}}}),X=()=>React.createElement(m,{theme:Q},React.createElement(u,null),React.createElement(Y,null));console.log("React version",e.version);const Z=()=>e.createElement(X,null);export{Z as default};
//# sourceMappingURL=docs.js.map
